{"version":3,"sources":["webpack://SariskaMediaTransport/webpack/universalModuleDefinition","webpack://SariskaMediaTransport/webpack/bootstrap","webpack://SariskaMediaTransport/./src/dom/var/getProto.js","webpack://SariskaMediaTransport/./src/dom/var/slice.js","webpack://SariskaMediaTransport/./src/dom/var/flat.js","webpack://SariskaMediaTransport/./src/dom/var/hasOwn.js","webpack://SariskaMediaTransport/./src/dom/var/fnToString.js","webpack://SariskaMediaTransport/./src/dom/var/ObjectFunctionString.js","webpack://SariskaMediaTransport/./src/dom/core/DOMEval.js","webpack://SariskaMediaTransport/./src/dom/core.js","webpack://SariskaMediaTransport/./src/dom/var/isWindow.js","webpack://SariskaMediaTransport/./src/dom/var/support.js","webpack://SariskaMediaTransport/./src/JitsiConferenceEvents.js","webpack://SariskaMediaTransport/./node_modules/strophe.js/dist/strophe.umd.js","webpack://SariskaMediaTransport/./src/JitsiConferenceErrors.js","webpack://SariskaMediaTransport/./src/JitsiTrackErrors.js","webpack://SariskaMediaTransport/./src/JitsiConnectionEvents.js","webpack://SariskaMediaTransport/./src/dom/var/document.js","webpack://SariskaMediaTransport/./src/dom/var/arr.js","webpack://SariskaMediaTransport/./node_modules/jitsi-meet-logger/lib/index.js","webpack://SariskaMediaTransport/./src/dom/var/push.js","webpack://SariskaMediaTransport/./src/modules/xmpp/xmpp.js","webpack://SariskaMediaTransport/./src/JitsiTrackEvents.js","webpack://SariskaMediaTransport/./src/JitsiConnectionErrors.js","webpack://SariskaMediaTransport/./src/dom/var/class2type.js","webpack://SariskaMediaTransport/./src/dom/var/indexOf.js","webpack://SariskaMediaTransport/./src/JitsiMediaDevicesEvents.js","webpack://SariskaMediaTransport/./src/config/index.js","webpack://SariskaMediaTransport/./src/JitsiTrackError.js","webpack://SariskaMediaTransport/./src/dom/var/toString.js","webpack://SariskaMediaTransport/./src/dom/core/toType.js","webpack://SariskaMediaTransport/./node_modules/events/events.js","webpack://SariskaMediaTransport/./src/JitsiMediaDevices.js","webpack://SariskaMediaTransport/(webpack)/buildin/global.js","webpack://SariskaMediaTransport/./src/dom/core/nodeName.js","webpack://SariskaMediaTransport/./src/dom/var/documentElement.js","webpack://SariskaMediaTransport/./src/dom/var/pop.js","webpack://SariskaMediaTransport/./src/dom/selector/var/whitespace.js","webpack://SariskaMediaTransport/./src/dom/var/isIE.js","webpack://SariskaMediaTransport/./src/dom/selector/rbuggyQSA.js","webpack://SariskaMediaTransport/./src/dom/selector/contains.js","webpack://SariskaMediaTransport/./src/dom/selector/escapeSelector.js","webpack://SariskaMediaTransport/./src/dom/var/sort.js","webpack://SariskaMediaTransport/./src/dom/selector/uniqueSort.js","webpack://SariskaMediaTransport/./src/dom/selector.js","webpack://SariskaMediaTransport/./src/dom/core/access.js","webpack://SariskaMediaTransport/./src/dom/var/rnothtmlwhite.js","webpack://SariskaMediaTransport/./src/dom/attributes/attr.js","webpack://SariskaMediaTransport/./src/dom/attributes/prop.js","webpack://SariskaMediaTransport/./src/dom/core/stripAndCollapse.js","webpack://SariskaMediaTransport/./src/dom/core/var/rsingleTag.js","webpack://SariskaMediaTransport/./src/dom/traversing/var/rneedsContext.js","webpack://SariskaMediaTransport/./src/dom/traversing/findFilter.js","webpack://SariskaMediaTransport/./src/dom/core/init.js","webpack://SariskaMediaTransport/./src/dom/attributes/classes.js","webpack://SariskaMediaTransport/./src/dom/attributes/val.js","webpack://SariskaMediaTransport/./src/dom/attributes.js","webpack://SariskaMediaTransport/./src/dom/core/parseXML.js","webpack://SariskaMediaTransport/./src/dom/manipulation.js","webpack://SariskaMediaTransport/./src/dom/jquery.js","webpack://SariskaMediaTransport/./node_modules/jitsi-meet-logger/lib/Logger.js","webpack://SariskaMediaTransport/./src/JitsiConnection.js","webpack://SariskaMediaTransport/./src/JitsiConference.js","webpack://SariskaMediaTransport/./node_modules/lodash.isequal/index.js","webpack://SariskaMediaTransport/./src/JitsiConferenceEventManager.js","webpack://SariskaMediaTransport/./src/JitsiParticipant.js","webpack://SariskaMediaTransport/./src/authenticateAndUpgradeRole.js","webpack://SariskaMediaTransport/./src/JitsiTranscriptionStatus.js","webpack://SariskaMediaTransport/./src/modules/connectivity/NetworkInfo.js","webpack://SariskaMediaTransport/./src/index.js","webpack://SariskaMediaTransport/./src/SariskaMediaTransport.js","webpack://SariskaMediaTransport/./src/dom/exports/global.js","webpack://SariskaMediaTransport/./node_modules/jitsi-meet-logger/lib/LogCollector.js","webpack://SariskaMediaTransport/(webpack)/buildin/module.js","webpack://SariskaMediaTransport/./node_modules/strophejs-plugin-disco/lib/strophe.disco.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","arr","flat","array","concat","apply","class2type","hasOwn","fnToString","preservedScriptAttributes","type","src","nonce","noModule","DOMEval","code","node","doc","script","document","createElement","text","head","appendChild","parentNode","removeChild","rhtmlSuffix","jQuery","selector","context","fn","init","isArrayLike","obj","length","toType","isWindow","jquery","constructor","toArray","slice","this","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","arguments","first","eq","last","even","grep","_elem","odd","len","j","end","extend","options","copy","copyIsArray","clone","target","deep","isPlainObject","Array","isArray","undefined","expando","Math","random","replace","isReady","error","msg","Error","noop","proto","Ctor","toString","getProto","ObjectFunctionString","isEmptyObject","globalEval","nodeType","textContent","nodeValue","makeArray","results","push","inArray","indexOf","isXMLDoc","namespace","namespaceURI","docElem","ownerDocument","documentElement","test","nodeName","second","invert","matches","callbackExpect","arg","guid","support","iterator","split","_i","toLowerCase","AUDIO_INPUT_STATE_CHANGE","AUTH_STATUS_CHANGED","BEFORE_STATISTICS_DISPOSED","CONFERENCE_ERROR","CONFERENCE_FAILED","CONFERENCE_JOINED","CONFERENCE_LEFT","CONFERENCE_UNIQUE_ID_SET","CONNECTION_ESTABLISHED","CONNECTION_INTERRUPTED","CONNECTION_RESTORED","DATA_CHANNEL_OPENED","DISPLAY_NAME_CHANGED","DOMINANT_SPEAKER_CHANGED","CONFERENCE_CREATED_TIMESTAMP","DTMF_SUPPORT_CHANGED","ENDPOINT_MESSAGE_RECEIVED","ENDPOINT_STATS_RECEIVED","JVB121_STATUS","KICKED","PARTICIPANT_KICKED","LAST_N_ENDPOINTS_CHANGED","LOCK_STATE_CHANGED","SERVER_REGION_CHANGED","_MEDIA_SESSION_STARTED","_MEDIA_SESSION_ACTIVE_CHANGED","MEMBERS_ONLY_CHANGED","MESSAGE_RECEIVED","NO_AUDIO_INPUT","NOISY_MIC","PRIVATE_MESSAGE_RECEIVED","PARTICIPANT_CONN_STATUS_CHANGED","PARTCIPANT_FEATURES_CHANGED","PARTICIPANT_PROPERTY_CHANGED","P2P_STATUS","PHONE_NUMBER_CHANGED","PROPERTIES_CHANGED","RECORDER_STATE_CHANGED","VIDEO_SIP_GW_AVAILABILITY_CHANGED","VIDEO_SIP_GW_SESSION_STATE_CHANGED","START_MUTED_POLICY_CHANGED","STARTED_MUTED","SUBJECT_CHANGED","SUSPEND_DETECTED","TALK_WHILE_MUTED","TRACK_ADDED","TRACK_AUDIO_LEVEL_CHANGED","TRACK_MUTE_CHANGED","TRACK_REMOVED","TRANSCRIPTION_STATUS_CHANGED","USER_JOINED","USER_LEFT","USER_ROLE_CHANGED","USER_STATUS_CHANGED","BOT_TYPE_CHANGED","LOBBY_USER_JOINED","LOBBY_USER_UPDATED","LOBBY_USER_LEFT","global$1","global","self","_typeof","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","TypeError","_nonIterableSpread","safe_add","x","y","lsw","str2binl","str","bin","charCodeAt","md5_cmn","q","a","b","cnt","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","olda","oldb","oldc","oldd","MD5","hexdigest","binarray","charAt","binl2hex","hash","String","fromCharCode","binl2str","core_sha1","olde","w","e","rol","safe_add$1","sha1_ft","sha1_kt","core_hmac_sha1","data","bkey","str2binb","ipad","opad","binb2b64","triplet","binb2str","SHA1","b64_hmac_sha1","b64_sha1","str_hmac_sha1","str_sha1","utils","out","cookies","cookieName","expires","domain","path","cookieObj","isObj","cookieValue","escape","unescape","cookie","$build","attrs","Strophe","Builder","$iq","$pres","VERSION","NS","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","css","validTag","tag","validAttribute","attribute","validCSS","style","Status","ERROR","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","REDIRECT","CONNTIMEOUT","BINDREQUIRED","ErrorCondition","BAD_FORMAT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","addNamespace","forEachChild","elemName","func","childNodes","childNode","isTagEqual","el","tagName","_xmlGenerator","_makeGenerator","implementation","createDocument","documentMode","_getIEXmlDom","xmlGenerator","docStrings","ActiveXObject","xmlElement","xmlTextNode","sort","attr","setAttribute","k","xmlescape","xmlunescape","createTextNode","xmlHtmlNode","html","DOMParser","parseFromString","async","loadXML","getText","copyElement","createHtml","getAttribute","cssText","cssAttrs","cssName","cssValue","join","_i2","createDocumentFragment","_i3","_i4","escapeNode","unescapeNode","getNodeFromJid","jid","getDomainFromJid","bare","getBareJidFromJid","parts","splice","getResourceFromJid","_handleError","stack","fatal","sourceURL","handler","line","message","fileName","lineNumber","log","level","console","debug","info","warn","serialize","tree","names","keys","result","reduce","getNamedItem","child","_requestId","_connectionPlugins","addConnectionPlugin","ptype","xmlns","nodeTree","up","moreattrs","removeAttribute","cnode","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","id","matchBare","matchBareFromJid","user","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","_this","nsMatch","isMatch","elem_type","run","TimedHandler","period","lastCalled","Date","getTime","reset","Connection","service","_this2","protocol","_proto","Websocket","Bosh","features","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","_idleTimeout","_disconnectTimeout","authenticated","connected","disconnecting","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","maxRetries","setTimeout","_onIdle","registerSASLMechanisms","mechanisms","F","_reset","_requests","pause","resume","getUniqueId","suffix","uuid","addProtocolErrorHandler","status_code","connect","pass","wait","hold","route","authcid","authzid","servtype","connect_callback","_changeConnectStatus","_connect","attach","sid","rid","wind","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","setItem","removeItem","xmlInput","xmlOutput","rawInput","rawOutput","nextValidRid","send","_queueData","_send","flush","clearTimeout","sendPresence","errback","timeout","_this3","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","_this4","iqtype","element","_sendRestart","_this5","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","forEach","registerSASLMechanism","mechanism","disconnect","reason","pres","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","_abortAllRequests","_doDisconnect","status","condition","plugin","statusChanged","err","_dataRecv","req","raw","_this6","_reqToData","strip","pop","_emptyQueue","cond","conflict","getElementsByTagName","UNKOWN_REASON","newList","_i5","_hand","_connect_cb","_callback","bodyWrap","getElementsByTagNameNS","matched","mech","authenticate","_no_auth_received","sortMechanismsByPriority","higher","priority","swap","_attemptSASLAuth","_attemptLegacyAuth","mechanism_found","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","onChallenge","btoa","challenge","atob","_onLegacyAuthIQResult","iq","_auth2_cb","_this7","serverSignature","match","onSuccess","streamfeature_handlers","wrapper","_onStreamFeaturesAfterSASL","explicitResourceBinding","_onResourceBindResultIQ","resource","jidNode","_establishSession","_onSessionResultIQ","onFailure","_this8","now","_i6","_thand","SASLMechanism","connection","_connection","auth_str","test_cnonce","cnonce","salt","Hi","U","U_old","responseText","authMessage","attribMatch","substr","clientKey","serverKey","clientSignature","_quote","realm","host","digest_uri","cred","A1","A2","core","Strophe$1","$build$1","Request","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","querySelector","XMLHttpRequest","overrideMimeType","onreadystatechange","_conn","floor","errors","inactivity","lastResponseHeaders","_buildBody","keepalive","_cacheSession","body","_onRequestStateChange","_throttledRequestHandler","session","parse","getItem","stringify","typ","parseInt","_sendTerminate","_callProtocolErrorHandlers","reqStatus","_getRequestStatus","err_callback","HTTP","_hitError","time_elapsed","def","readyState","getAllResponseHeaders","valid_request","too_many_retries","_removeRequest","reqIs0","_restartRequest","Number","_processRequest","primary_timeout","isNaN","secondary_timeout","server_error","content_type","contentType","open","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","headers","header","backoff","min","pow","abs","Strophe$2","$build$2","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","ver","streamStart","parsedMessage","see_uri","string","_streamWrap","_onMessage","CLOSED","close","closeString","rawStanza","search","firstChild","start","startString","$msg","AUTHENTICATION_REQUIRED","CHAT_ERROR","CONFERENCE_DESTROYED","CONFERENCE_MAX_USERS","CONNECTION_ERROR","CONFERENCE_RESTARTED","NOT_ALLOWED_ERROR","MEMBERS_ONLY_ERROR","CONFERENCE_ACCESS_DENIED","FOCUS_DISCONNECTED","FOCUS_LEFT","GRACEFUL_SHUTDOWN","ICE_FAILED","INCOMPATIBLE_SERVER_VERSIONS","OFFER_ANSWER_FAILED","PASSWORD_NOT_SUPPORTED","PASSWORD_REQUIRED","RESERVATION_ERROR","VIDEOBRIDGE_NOT_AVAILABLE","CONSTRAINT_FAILED","ELECTRON_DESKTOP_PICKER_ERROR","ELECTRON_DESKTOP_PICKER_NOT_FOUND","GENERAL","NOT_FOUND","PERMISSION_DENIED","SCREENSHARING_GENERIC_ERROR","SCREENSHARING_USER_CANCELED","TRACK_IS_DISPOSED","TRACK_NO_STREAM_FOUND","UNSUPPORTED_RESOLUTION","CONNECTION_DISCONNECTED","CONNECTION_FAILED","WRONG_STATE","DISPLAY_NAME_REQUIRED","Logger","LogCollector","idLoggers","loggers","curLevel","levels","TRACE","addGlobalTransport","transport","removeGlobalTransport","setGlobalOptions","getLogger","transports","logger","setLogLevelById","setLevel","setLogLevel","__filename","FAILURE_REGEX","DEFAULT_STUN_SERVERS","urls","JITSI_MEET_MUC_TYPE","FEATURE_JIGASI","FEATURE_E2EE","XMPP","Listenable","token","roomName","super","disconnectInProgress","connectionTimes","authenticatedUser","initStropheUtil","initStropheLogger","xmppPing","hosts","enableWebsocketResume","serviceUrl","shard","websocketKeepAlive","websocketKeepAliveUrl","XmppConnection","createConnection","bosh","deploymentInfo","on","Events","CONN_SHARD_CHANGED","details","shard_changed","suspend_time","ping","getPingSuspendTime","time_since_last_success","getTimeSinceLastSuccess","eventEmitter","emit","JitsiConnectionEvents","JitsiConnectionErrors","_initStrophePlugins","caps","Caps","clientNode","initFeaturesList","addFeature","disableRtx","browser","isFirefox","isVersionLessThan","enableOpusRed","supportsAudioRed","enableRemb","enableTcc","isChromiumBased","enableLipSync","rayo","E2EEncryption","isSupported","getConnection","connectionHandler","credentials","performance","statusStr","getStatusString","XMPPEvents","CONNECTION_STATUS_CHANGED","_sysMessageHandler","_stropheConn","sendDiscoInfo","jingle","getStunAndTurnCredentials","_resetState","getFeaturesAndIdentities","then","identities","has","PING","_processDiscoInfoIdentities","catch","errmsg","GlobalOnErrorHandler","callErrorHandler","password","anonymousConnectionFailed","connectionFailed","lastErrorMsg","stopInterval","wasIntentionalDisconnect","Boolean","errMsg","_getConnectionFailedReasonDetails","lastErrorStatus","getLastErrorStatus","lastFailedRawMessage","getLastFailedMessage","_parseConnectionFailedMessage","identity","speakerStatsComponentAddress","conferenceDurationComponentAddress","lobbySupported","processLobbyFeatures","f","fr","endsWith","_onPrivateMessage","exec","_onSystemMessage","foundIceServers","onReceiveStunAndTurnCredentials","parseDiscoInfo","size","attaching","anonymousdomain","configDomain","hostname","createRoom","onCreateResource","roomjid","customDomain","muc","mucNickname","RandomUtil","randomHexString","emuc","getJid","getJingleLog","getLog","getXmppLog","dial","args","Promise","resolve","reject","pingDomain","getSessions","sessions","ev","disconnectListener","removeListener","_cleanupXmppConnection","isUsingWebSocket","evType","sendUnavailableBeacon","iceConfig","jvb","iceServers","p2p","p2pStunServers","stunServers","iceTransportPolicy","MucConnectionPlugin","JingleConnectionPlugin","RayoConnectionPlugin","headersArr","trim","shift","sendDominantSpeakerEvent","roomJid","to","room","tryParseJSONAndVerify","jsonString","json","jsonMessage","$","find","parsedJson","users","SPEAKER_STATS_RECEIVED","created_timestamp","CONFERENCE_TIMESTAMP_RECEIVED","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","TRACK_VIDEOTYPE_CHANGED","NO_DATA_FROM_SOURCE","CONNECTION_DROPPED_ERROR","OTHER_ERROR","SERVER_ERROR","DEVICE_LIST_CHANGED","PERMISSIONS_CHANGED","PERMISSION_PROMPT_IS_SHOWN","SLOW_GET_USER_MEDIA","initSDKConfig","disableAudioLevels","connectionConfig","conferenceConfig","openBridgeChannel","hiddenDomain","e2eping","pingInterval","enabled","TRACK_ERROR_TO_MESSAGE_MAP","JitsiTrackError","devices","gum","constraints","JitsiTrackErrors","constraintName","constraint","video","failedConstraintName","mandatory","minWidth","minHeight","getResolutionFromFailedConstraint","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","unshift","warned","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","index","spliceOne","off","removeAllListeners","rawListeners","eventNames","_eventEmitter","_permissions","RTC","RTCEvents","JitsiMediaDevicesEvents","DEVICE_LIST_AVAILABLE","_logOutputDevice","getAudioOutputDevice","permissions","_handlePermissionsChange","_permissionsApiSupported","navigator","promises","query","MediaType","_parsePermissionState","onchange","all","every","supported","permissionStatus","some","enumerateDevices","deviceID","device","kind","deviceId","Statistics","sendActiveDeviceListEvent","getEventDataForActiveDevice","isDeviceListAvailable","isDeviceChangeAvailable","deviceType","isDevicePermissionGranted","isMultipleAudioInputSupported","setAudioOutputDevice","getCurrentlyAvailableMediaDevices","addEventListener","event","removeEventListener","emitEvent","g","rbuggyQSA","isIE","RegExp","whitespace","contains","adown","bup","compareDocumentPosition","rcssescape","fcssescape","ch","asCodePoint","escapeSelector","sel","hasDuplicate","sortOrder","compare","uniqueSort","duplicates","preferredDoc","msMatchesSelector","Expr","outermostContext","documentIsHTML","dirruns","done","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","identifier","pseudos","rwhitespace","rtrim","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rquickExpr","rsibling","runescape","funescape","nonHex","high","unloadHandler","setDocument","inDisabledFieldset","addCombinator","disabled","dir","next","selectorError","seed","nid","groups","newSelector","newContext","getElementById","getElementsByClassName","testContext","tokenize","toSelector","querySelectorAll","qsaError","tokens","compiled","relative","compile","select","cache","cacheLength","markFunction","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","subWindow","defaultView","top","expr","elements","matchesSelector","createPseudo","className","preFilter","excess","unquoted","filter","attrId","nodeNameSelector","expectedNodeName","pattern","operator","check","what","_argument","simple","forward","ofType","_context","xml","outerCache","nodeIndex","parent","useCache","diff","lastChild","pseudo","setFilters","idx","not","input","matcher","unmatched","lang","elemLang","focus","activeElement","hasFocus","href","tabIndex","checked","selected","selectedIndex","empty","nextSibling","button","_matchIndexes","lt","gt","nth","radio","checkbox","file","image","submit","parseOnly","soFar","preFilters","cached","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","matcherOut","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","filters","access","chainable","emptyGet","bulk","_key","removeAttr","hooks","nType","prop","attrHooks","attrNames","rnothtmlwhite","val","source","isXML","lowercaseName","rfocusable","rclickable","removeProp","propFix","propHooks","tabindex","stripAndCollapse","winnow","qualifier","is","rneedsContext","rootjQuery","getClass","classesToArray","parseHTML","rsingleTag","ready","addClass","classes","cur","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","valueIsFunction","valHooks","option","one","values","max","optionSet","parseXML","consoleTransport","globalTransports","transportIdx","globalOptions","getCallerInfo","callerInfo","methodName","fileLocation","column","disableCallerInfo","logPrefixes","toISOString","fullLogParts","methods","LOG","JitsiConnection","jwt","parseJwt","xmpp","errType","sendAnalyticsAndLog","createConnectionFailedEvent","sendAnalytics","ANALYTICS_CONNECTION_DISCONNECTED","sendLog","setToken","initJitsiConference","JitsiConference","config","getConnectionTimes","feature","removeFeature","getLogs","metadata","time","url","ua","userAgent","eventManager","JitsiConferenceEventManager","participants","_init","componentsVersions","ComponentsVersions","jvbJingleSession","lastDominantSpeaker","dtmfManager","somebodySupportsDTMF","authEnabled","startAudioMuted","startVideoMuted","startMutedPolicy","audio","isMutedByFocus","mutedByFocusActor","isVideoMutedByFocus","mutedVideoByFocusActor","wasStopped","properties","connectionQuality","ConnectionQuality","avgRtpStatsReporter","AvgRTPStatsReporter","avgRtpStatsN","_audioOutputProblemDetector","AudioOutputProblemDetector","isJvbConnectionInterrupted","speakerStatsCollector","SpeakerStatsCollector","deferredStartP2PTask","delay","backToP2PDelay","isP2PConnectionInterrupted","p2pJingleSession","videoSIPGWHandler","VideoSIPGW","recordingManager","RecordingManager","_conferenceJoinAnalyticsEventSent","isE2EESupported","_e2eEncryption","resourceCreator","setupXMPPListeners","codecSettings","disabledCodec","videoQuality","disableH264","CodecMimeType","H264","enforcePreferredCodec","jvbCodec","preferredCodec","preferH264","p2pCodec","VP8","codecSelection","CodecSelection","_statsCurrentId","statisticsId","Settings","callStatsUserName","statsId","_onIceConnectionInterrupted","_onIceConnectionRestored","_onIceConnectionEstablished","_updateProperties","_sendConferenceJoinAnalyticsEvent","E2ePing","sendMessage","rtc","setupRTCListeners","receiveVideoController","ReceiveVideoController","sendVideoController","SendVideoController","participantConnectionStatus","ParticipantConnectionStatusHandler","rtcMuteTimeout","_peerConnStatusRtcMuteTimeout","outOfLastNTimeout","_peerConnStatusOutOfLastNTimeout","enableCallStats","testing","callStatsThreshold","statistics","aliasName","userName","statisticsDisplayName","myUserId","confID","siteID","customScriptUrl","callStatsCustomScriptUrl","callStatsID","callStatsSecret","callStatsApplicationLogsDisabled","applicationName","getWiFiStatsMethod","analytics","addPermanentProperties","longTasksStatsInterval","attachLongTasksStats","setupChatRoomListeners","setupStatisticsListeners","enableTalkWhileMuted","supportsVADDetection","createVADProcessor","_audioAnalyser","VADAudioAnalyser","vadTalkMutedDetection","VADTalkMutedDetection","DetectionEvents","JitsiConferenceEvents","addVADDetectionService","enableNoisyMicDetection","vadNoiseDetection","VADNoiseDetection","enableNoAudioDetection","_noAudioSignalDetection","NoAudioSignalDetection","hasAudioSignal","setLastN","channelLastN","jvb121Status","Jvb121EventGenerator","p2pDominantSpeakerDetection","P2PDominantSpeakerDetection","userRegion","setLocalParticipantProperty","getPreferredCodec","_maybeSetSITimeout","authenticateAndUpgradeRole","isJoined","joined","isP2PEnabled","isP2PTestModeEnabled","p2pTestMode","leave","dispose","stop","getLocalTracks","track","onLocalTrackRemoved","closeBridgeChannel","_sendConferenceLeftAnalyticsEvent","_delayedIceFailed","cancel","removeXMPPListeners","destroy","getParticipants","participant","onMemberLeft","_getActiveMediaSession","isP2PActive","_getMediaSessions","getName","isAuthEnabled","isLoggedIn","authIdentity","getAuthLogin","isExternalAuthEnabled","moderator","getExternalAuthUrl","urlForPopup","getPopupLoginUrl","getLoginUrl","mediaType","tracks","getLocalAudioTrack","getLocalVideoTrack","getPerformanceStats","longTasksStats","getLongTasksStats","eventId","addCommandListener","command","addPresenceListener","removeCommandListener","removePresenceListener","sendTextMessage","elementName","sendPrivateTextMessage","sendPrivateMessage","sendCommand","addOrReplaceInPresence","sendCommandOnce","removeCommand","removeFromPresence","setDisplayName","setSubject","subject","isModerator","getTranscriber","transcriber","Transcriber","localAudioTracks","localAudio","addTrack","remoteAudioTracks","getRemoteTracks","remoteTrack","getTranscriptionStatus","transcriptionStatus","getType","localTracks","replaceTrack","_fireAudioLevelChangeEvent","audioLevel","tpc","activeTpc","getActivePeerConnection","_fireMuteChangeEvent","actorParticipant","isAudioTrack","isMuted","muteParticipant","myroomjid","isVideoTrack","actorId","_getInitialLocalTracks","isStartAudioMuted","isStartVideoMuted","_setConference","removeLocalTrack","JitsiTrackEvents","muteHandler","audioLevelHandler","videoType","VideoType","DESKTOP","sendScreenSharingEvent","removeTrack","oldTrack","newTrack","disposed","_doReplaceTrack","_setupNewTrack","setVideoType","NONE","replaceTrackPromises","getTrack","label","videoTypeTagName","CAMERA","getFromPresence","addLocalTrack","setAudioMute","setVideoMute","_addLocalTrackAsUnmute","addAsUnmutePromises","addTrackAsUnmute","allSettled","_removeLocalTrackAsMute","removeAsMutePromises","removeTrackAsMute","getRole","role","isHidden","lock","lockRoom","JitsiConferenceErrors","unlock","selectParticipant","participantId","selectParticipants","participantIds","selectEndpoints","getLastN","lastN","isInteger","isVideoActive","setMediaTransferActive","isInLastN","getParticipantCount","countHidden","getParticipantById","grantOwner","setAffiliation","revokeOwner","isMyself","isMembersOnly","kickParticipant","kick","_maybeClearSITimeout","_sessionInitiateTimeout","createJingleEvent","ACTION_JINGLE_SI_TIMEOUT","muteMediaType","onMemberJoined","nick","statsID","botType","fullJid","JitsiParticipant","setRole","setBotType","setFeatures","_updateFeatures","_maybeStartOrStopP2P","_onMucJoined","getFeatures","_supportsDTMF","updateDTMFSupport","setProperty","_onMemberBotTypeChanged","botParticipant","getBotType","mediaSessions","removePromises","removeRemoteStreamsOnLeave","removedTracks","onMemberKicked","isSelfPresence","kickedParticipantId","kickedParticipant","onLocalRoleChanged","onUserRoleChanged","onDisplayNameChanged","displayName","_displayName","onRemoteTrackAdded","isP2P","getParticipantId","_tracks","onCallAccepted","answer","setAnswer","onTransportInfo","transportInfo","addIceCandidates","onRemoteTrackRemoved","removedTrack","getTracks","_onIncomingCallP2P","jingleSession","jingleOffer","rejectReason","isWebKitBased","reasonDescription","errorMsg","_shouldBeInP2PMode","ACTION_P2P_DECLINED","_rejectIncomingCall","_acceptP2PIncomingCall","onIncomingCall","isFocus","remoteJid","description","_acceptJvbIncomingCall","ACTION_JINGLE_RESTART","serverRegion","ACTION_JINGLE_SI_RECEIVED","initialize","enableInsertableStreams","isE2EEEnabled","_setBridgeChannel","peerconnection","acceptOffer","_suspendMediaTransferForJvbConnection","startCallStats","startRemoteStats","offerIq","pc","wsUrl","webSocket","initializeBridgeChannel","terminate","sendSessionTerminate","onCallEnded","reasonCondition","reasonText","ACTION_JINGLE_TERMINATE","stopRemoteStats","stopCallStats","forceJvb121","p2pFailed","_stopP2PSession","onSuspendDetected","supportsDTMF","isDTMFSupported","sendTones","tones","duration","peerConnection","startRecording","stopRecording","sessionID","isSIPCallingSupported","number","hangup","startTranscriber","stopTranscriber","getPhoneNumber","getPhonePin","getMeetingUniqueId","getMeetingId","getConnectionState","setStartMutedPolicy","policy","getStartMutedPolicy","removeLocalParticipantProperty","getLocalParticipantProperty","presMap","nodes","sendFeedback","overallFeedback","detailedFeedback","isCallstatsEnabled","getSsrcByTrack","isLocal","getLocalSSRC","getSSRC","_onTrackAttach","container","ssrc","remoteUserId","associateStreamWithVideoTag","getUsageLabel","sendApplicationLog","_isFocus","mucJid","_fireIncompatibleVersionsEvent","sendEndpointMessage","payload","sendChannelMessage","sendEndpointStatsMessage","broadcastEndpointMessage","sendThroughVideobridge","messageType","messageToSend","isConnectionInterrupted","_onConferenceRestarted","enableForcedReload","restartInProgress","_onIceConnectionFailed","createP2PEvent","ACTION_P2P_FAILED","initiator","isInitiator","IceFailedHandling","remoteID","getStatsID","_addRemoteJVBTracks","_addRemoteTracks","_addRemoteP2PTracks","logName","remoteTracks","p2pEstablishmentDuration","establishmentDuration","jvbEstablishmentDuration","forceJVB121Ratio","establishmentDurationDiff","ICE_ESTABLISHMENT_DURATION_DIFF","_setP2PStatus","_removeRemoteJVBTracks","ACTION_P2P_ESTABLISHED","changed","isEqual","getProperty","_maybeClearDeferredStartP2P","_removeRemoteTracks","_removeRemoteP2PTracks","sessionNickname","_resumeMediaTransferForJvbConnection","newStatus","sendConnectionResumeOrHoldEvent","_startP2PSession","newP2PJingleSession","invite","userLeftEvent","peers","peerCount","shouldBeInP2P","peer","myId","peersId","getId","ACTION_P2P_SWITCH_TO_JVB","hasBotPeer","hasFeature","wasP2PEstablished","getP2PConnectionState","startP2PSession","peerJid","stopP2PSession","getSpeakerStats","getStats","setReceiverConstraints","videoConstraints","setReceiverVideoConstraint","maxFrameHeight","setPreferredReceiveMaxFrameHeight","setSenderVideoConstraint","setPreferredSendMaxFrameHeight","createVideoSIPGWSession","sipAddress","VideoSIPGWConstants","meetingId","createConferenceEvent","stats","perf","_restartMediaSessions","requestRestart","isEnabled","toggleE2EE","setEnabled","isLobbySupported","getLobby","membersOnlyEnabled","enableLobby","enable","disableLobby","disable","joinLobby","email","lobbyDenyAccess","denyAccess","lobbyApproveAccess","approveAccess","isAVModerationSupported","getAVModeration","enableAVModeration","disableAVModeration","avModerationApprove","approve","getLocalUser","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","predicate","mapToArray","setToArray","uid","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","IE_PROTO","nativeObjectToString","reIsNative","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","nativeGetSymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","assocIndexOf","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isObject","isMasked","isFunction","baseKeys","arrLength","seen","arrValue","othIndex","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","getValue","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","ctorString","isLength","baseUnary","conference","xmppListeners","sendMuteEvent","chatRoom","chatRoomForwarder","EventEmitterForwarder","ICE_RESTARTING","PARTICIPANT_FEATURES_CHANGED","ICE_RESTART_SUCCESS","AUDIO_MUTED_BY_FOCUS","actor","createRemotelyMutedEvent","VIDEO_MUTED_BY_FOCUS","MUC_JOINED","MEETING_ID_SET","createConnectionStageReachedEvent","RENEGOTIATION_FAILED","ROOM_JOIN_ERROR","ROOM_CONNECT_ERROR","ROOM_CONNECT_NOT_ALLOWED_ERROR","ROOM_CONNECT_MEMBERS_ONLY_ERROR","ROOM_MAX_USERS_ERROR","BRIDGE_DOWN","createBridgeDownEvent","CONNECTION_RESTARTED","CONNECTION_ICE_FAILED","MUC_DESTROYED","CHAT_ERROR_RECEIVED","createFocusLeftEvent","SESSION_ACCEPT_TIMEOUT","ACTION_JINGLE_SA_TIMEOUT","getStatus","setTerminator","setInitiator","setParticipantPropertyListener","substring","MUC_LOCK_CHANGED","MUC_MEMBERS_ONLY_CHANGED","MUC_MEMBER_JOINED","MUC_LOBBY_MEMBER_JOINED","MUC_LOBBY_MEMBER_UPDATED","MUC_LOBBY_MEMBER_LEFT","MUC_MEMBER_BOT_TYPE_CHANGED","MUC_MEMBER_LEFT","MUC_LEFT","MUC_DENIED_ACCESS","LOCAL_ROLE_CHANGED","recorderSession","logObject","getError","MUC_ROLE_CHANGED","AuthenticationEvents","IDENTITY_UPDATED","txt","myJid","ts","PRESENCE_STATUS","_status","JSON_MESSAGE_RECEIVED","updated","sendIceConnectionFailedEvent","ADD_ICE_CANDIDATE_FAILED","sendAddIceCandidateFailed","REMOTE_TRACK_ADDED","REMOTE_TRACK_REMOVED","dominant","previous","speakerList","SPEAKERS_AUDIO_LEVELS","setSpeakerList","DATA_CHANNEL_OPEN","LOCAL_UFRAG_CHANGED","ufrag","REMOTE_UFRAG_CHANGED","CREATE_ANSWER_FAILED","sendCreateAnswerFailed","CREATE_OFFER_FAILED","sendCreateOfferFailed","SET_LOCAL_DESCRIPTION_FAILED","sendSetLocalDescFailed","SET_REMOTE_DESCRIPTION_FAILED","sendSetRemoteDescFailed","LOCAL_TRACK_SSRC_UPDATED","eventName","_addConferenceXMPPListener","CALL_INCOMING","CALL_ACCEPTED","TRANSPORT_INFO","CALL_ENDED","START_MUTED_FROM_FOCUS","audioMuted","videoMuted","ignoreStartMuted","mute","createdTimestamp","AV_MODERATION_CHANGED","actorJid","AV_MODERATION_PARTICIPANT_APPROVED","AV_MODERATION_APPROVED","addAudioLevelListener","setAudioLevel","addBeforeDisposedListener","startSilent","addByteSentStatsListener","_onByteSentStatsReceived","hidden","_jid","_id","_conference","_role","_hidden","_statsID","_connectionStatus","ParticipantConnectionStatus","ACTIVE","_properties","_identity","_features","getConference","hasAnyVideoTrackWebRTCMuted","jitsiTrack","isWebRTCTrackMuted","_setConnectionStatus","getConnectionStatus","oldValue","getTracksByMediaType","getDisplayName","isAudioMuted","_isMediaTypeMuted","muted","isVideoMuted","newRole","newFeatures","_botType","newBotType","onLoginSuccessful","roomPassword","rejectPromise","canceled","authenticationError","connectionError","ON","OFF","NetworkInfo","_current","isOnline","updateNetworkInfo","networkInfo","require","default","getAnalyticsAttributesFromOptions","includes","video_requested","resolution","_mergeNamespaceAndModule","SariskaMediaTransport","assign","version","ProxyConnectionService","constants","recording","recordingConstants","sipVideoGW","JitsiTranscriptionStatus","detection","mediaDevices","ConnectionQualityEvents","E2ePingEvents","errorTypes","logLevels","JitsiMediaDevices","externalStorage","enableAnalyticsLogging","enableWindowOnErrorHandler","getGlobalOnErrorHandler","aprops","component","isDesktopSharingEnabled","isWebRtcSupported","addGlobalLogTransport","globalTransport","removeGlobalLogTransport","setGlobalLogOptions","createLocalTracks","oldfirePermissionPromptIsShownEvent","promiseFulfilled","firePermissionPromptIsShownEvent","fireSlowPromiseEvent","restOptions","arePermissionsGrantedForAvailableDevices","obtainAudioAndVideoPermissions","createGetUserMediaEvent","mStream","getOriginalStream","startLocalStats","stopLocalStats","currentlyAvailableMediaDevices","_setRealDeviceIdFromDeviceList","setVideoTrackContentHints","sendGetUserMediaFailed","createTrackVADEmitter","localAudioDeviceId","sampleRate","vadProcessor","TrackVADEmitter","createAudioMixer","AudioMixer","getActiveAudioDevice","isCollectingLocalStats","audioLevelsEnabled","LocalStatsCollector","isLocalStatsSupported","lineno","colno","reportGlobalError","setNetworkInfo","hint","contentHint","precallTest","util","AuthUtil","ScriptUtil","logStorage","stringifyObjects","storeInterval","maxEntryLength","logLevel","_log","storeLogsIntervalID","queue","totalLen","outputCache","someObject","formatLogMessage","timestamp","prevMessage","prevMessageText","_flush","_reschedulePublishInterval","force","reschedule","cachedQueue","storeLogs","webpackPolyfill","deprecate","paths","children","strophe_js","_identities","_items","conn","_onDiscoInfo","_onDiscoItems","addIdentity","category","var_name","addItem","call_back","success","items","_buildIQResult","query_attrs","iqresult"],"mappings":"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","file":"sariska-media-transport.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SariskaMediaTransport\"] = factory();\n\telse\n\t\troot[\"SariskaMediaTransport\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 90);\n","export default Object.getPrototypeOf;\n","import arr from \"./arr.js\";\n\nexport default arr.slice;\n","import arr from \"./arr.js\";\n\n// Support: IE 11+\n// IE doesn't have Array#flat; provide a fallback.\nexport default arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n","import class2type from \"./class2type.js\";\n\nexport default class2type.hasOwnProperty;\n","import hasOwn from \"./hasOwn.js\";\n\nexport default hasOwn.toString;\n","import fnToString from \"./fnToString.js\";\n\nexport default fnToString.call( Object );\n","import document from '../var/document.js';\n\nvar preservedScriptAttributes = {\n\ttype: true,\n\tsrc: true,\n\tnonce: true,\n\tnoModule: true\n};\n\nfunction DOMEval( code, node, doc ) {\n\tdoc = doc || document;\n\n\tvar i,\n\t\tscript = doc.createElement( \"script\" );\n\n\tscript.text = code;\n\tif ( node ) {\n\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\tif ( node[ i ] ) {\n\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t}\n\t\t}\n\t}\n\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n}\n\nexport default DOMEval;\n","import arr from \"./var/arr.js\";\nimport getProto from \"./var/getProto.js\";\nimport slice from \"./var/slice.js\";\nimport flat from \"./var/flat.js\";\nimport push from \"./var/push.js\";\nimport indexOf from \"./var/indexOf.js\";\nimport class2type from \"./var/class2type.js\";\nimport toString from \"./var/toString.js\";\nimport hasOwn from \"./var/hasOwn.js\";\nimport fnToString from \"./var/fnToString.js\";\nimport ObjectFunctionString from \"./var/ObjectFunctionString.js\";\nimport support from \"./var/support.js\";\nimport isWindow from \"./var/isWindow.js\";\nimport DOMEval from \"./core/DOMEval.js\";\nimport toType from \"./core/toType.js\";\n\nvar version = \"@VERSION\",\n\n    rhtmlSuffix = /HTML$/i,\n\n    // Define a local copy of jQuery\n    jQuery = function( selector, context ) {\n\n        // The jQuery object is actually just the init constructor 'enhanced'\n        // Need init if jQuery is called (just allow error to be thrown if not included)\n        return new jQuery.fn.init( selector, context );\n    };\n\njQuery.fn = jQuery.prototype = {\n\n    // The current version of jQuery being used\n    jquery: version,\n\n    constructor: jQuery,\n\n    // The default length of a jQuery object is 0\n    length: 0,\n\n    toArray: function() {\n        return slice.call( this );\n    },\n\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function( num ) {\n\n        // Return all the elements in a clean array\n        if ( num == null ) {\n            return slice.call( this );\n        }\n\n        // Return just the one element from the set\n        return num < 0 ? this[ num + this.length ] : this[ num ];\n    },\n\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function( elems ) {\n\n        // Build a new jQuery matched element set\n        var ret = jQuery.merge( this.constructor(), elems );\n\n        // Add the old object onto the stack (as a reference)\n        ret.prevObject = this;\n\n        // Return the newly-formed element set\n        return ret;\n    },\n\n    // Execute a callback for every element in the matched set.\n    each: function( callback ) {\n        return jQuery.each( this, callback );\n    },\n\n    map: function( callback ) {\n        return this.pushStack( jQuery.map( this, function( elem, i ) {\n            return callback.call( elem, i, elem );\n        } ) );\n    },\n\n    slice: function() {\n        return this.pushStack( slice.apply( this, arguments ) );\n    },\n\n    first: function() {\n        return this.eq( 0 );\n    },\n\n    last: function() {\n        return this.eq( -1 );\n    },\n\n    even: function() {\n        return this.pushStack( jQuery.grep( this, function( _elem, i ) {\n            return ( i + 1 ) % 2;\n        } ) );\n    },\n\n    odd: function() {\n        return this.pushStack( jQuery.grep( this, function( _elem, i ) {\n            return i % 2;\n        } ) );\n    },\n\n    eq: function( i ) {\n        var len = this.length,\n            j = +i + ( i < 0 ? len : 0 );\n        return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n    },\n\n    end: function() {\n        return this.prevObject || this.constructor();\n    }\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n    var options, name, src, copy, copyIsArray, clone,\n        target = arguments[ 0 ] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    // Handle a deep copy situation\n    if ( typeof target === \"boolean\" ) {\n        deep = target;\n\n        // Skip the boolean and the target\n        target = arguments[ i ] || {};\n        i++;\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if ( typeof target !== \"object\" && typeof target !== \"function\" ) {\n        target = {};\n    }\n\n    // Extend jQuery itself if only one argument is passed\n    if ( i === length ) {\n        target = this;\n        i--;\n    }\n\n    for ( ; i < length; i++ ) {\n\n        // Only deal with non-null/undefined values\n        if ( ( options = arguments[ i ] ) != null ) {\n\n            // Extend the base object\n            for ( name in options ) {\n                copy = options[ name ];\n\n                // Prevent Object.prototype pollution\n                // Prevent never-ending loop\n                if ( name === \"__proto__\" || target === copy ) {\n                    continue;\n                }\n\n                // Recurse if we're merging plain objects or arrays\n                if ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n                    ( copyIsArray = Array.isArray( copy ) ) ) ) {\n                    src = target[ name ];\n\n                    // Ensure proper type for the source value\n                    if ( copyIsArray && !Array.isArray( src ) ) {\n                        clone = [];\n                    } else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n                        clone = {};\n                    } else {\n                        clone = src;\n                    }\n                    copyIsArray = false;\n\n                    // Never move original objects, clone them\n                    target[ name ] = jQuery.extend( deep, clone, copy );\n\n                // Don't bring in undefined values\n                } else if ( copy !== undefined ) {\n                    target[ name ] = copy;\n                }\n            }\n        }\n    }\n\n    // Return the modified object\n    return target;\n};\n\njQuery.extend( {\n\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n\n    error: function( msg ) {\n        throw new Error( msg );\n    },\n\n    noop: function() {},\n\n    isPlainObject: function( obj ) {\n        var proto, Ctor;\n\n        // Detect obvious negatives\n        // Use toString instead of jQuery.type to catch host objects\n        if ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n            return false;\n        }\n\n        proto = getProto( obj );\n\n        // Objects with no prototype (e.g., `Object.create( null )`) are plain\n        if ( !proto ) {\n            return true;\n        }\n\n        // Objects with prototype are plain iff they were constructed by a global Object function\n        Ctor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n        return typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n    },\n\n    isEmptyObject: function( obj ) {\n        var name;\n\n        for ( name in obj ) {\n            return false;\n        }\n        return true;\n    },\n\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function( code, options, doc ) {\n        DOMEval( code, { nonce: options && options.nonce }, doc );\n    },\n\n    each: function( obj, callback ) {\n        var length, i = 0;\n\n        if ( isArrayLike( obj ) ) {\n            length = obj.length;\n            for ( ; i < length; i++ ) {\n                if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n                    break;\n                }\n            }\n        } else {\n            for ( i in obj ) {\n                if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n                    break;\n                }\n            }\n        }\n\n        return obj;\n    },\n\n\n    // Retrieve the text value of an array of DOM nodes\n    text: function( elem ) {\n        var node,\n            ret = \"\",\n            i = 0,\n            nodeType = elem.nodeType;\n\n        if ( !nodeType ) {\n\n            // If no nodeType, this is expected to be an array\n            while ( ( node = elem[ i++ ] ) ) {\n\n                // Do not traverse comment nodes\n                ret += jQuery.text( node );\n            }\n        } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n            return elem.textContent;\n        } else if ( nodeType === 3 || nodeType === 4 ) {\n            return elem.nodeValue;\n        }\n\n        // Do not include comment or processing instruction nodes\n\n        return ret;\n    },\n\n\n    // results is for internal usage only\n    makeArray: function( arr, results ) {\n        var ret = results || [];\n\n        if ( arr != null ) {\n            if ( isArrayLike( Object( arr ) ) ) {\n                jQuery.merge( ret,\n                    typeof arr === \"string\" ?\n                        [ arr ] : arr\n                );\n            } else {\n                push.call( ret, arr );\n            }\n        }\n\n        return ret;\n    },\n\n    inArray: function( elem, arr, i ) {\n        return arr == null ? -1 : indexOf.call( arr, elem, i );\n    },\n\n    isXMLDoc: function( elem ) {\n        var namespace = elem.namespaceURI,\n            docElem = ( elem.ownerDocument || elem ).documentElement;\n\n        // Assume HTML when documentElement doesn't yet exist, such as inside\n        // document fragments.\n        return !rhtmlSuffix.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n    },\n\n    merge: function( first, second ) {\n        var len = +second.length,\n            j = 0,\n            i = first.length;\n\n        for ( ; j < len; j++ ) {\n            first[ i++ ] = second[ j ];\n        }\n\n        first.length = i;\n\n        return first;\n    },\n\n    grep: function( elems, callback, invert ) {\n        var callbackInverse,\n            matches = [],\n            i = 0,\n            length = elems.length,\n            callbackExpect = !invert;\n\n        // Go through the array, only saving the items\n        // that pass the validator function\n        for ( ; i < length; i++ ) {\n            callbackInverse = !callback( elems[ i ], i );\n            if ( callbackInverse !== callbackExpect ) {\n                matches.push( elems[ i ] );\n            }\n        }\n\n        return matches;\n    },\n\n    // arg is for internal usage only\n    map: function( elems, callback, arg ) {\n        var length, value,\n            i = 0,\n            ret = [];\n\n        // Go through the array, translating each of the items to their new values\n        if ( isArrayLike( elems ) ) {\n            length = elems.length;\n            for ( ; i < length; i++ ) {\n                value = callback( elems[ i ], i, arg );\n\n                if ( value != null ) {\n                    ret.push( value );\n                }\n            }\n\n        // Go through every key on the object,\n        } else {\n            for ( i in elems ) {\n                value = callback( elems[ i ], i, arg );\n\n                if ( value != null ) {\n                    ret.push( value );\n                }\n            }\n        }\n\n        // Flatten any nested arrays\n        return flat( ret );\n    },\n\n    // A global GUID counter for objects\n    guid: 1,\n\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n    jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n    function( _i, name ) {\n        class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n    } );\n\nfunction isArrayLike( obj ) {\n\n    var length = !!obj && obj.length,\n        type = toType( obj );\n\n    if ( typeof obj === \"function\" || isWindow( obj ) ) {\n        return false;\n    }\n\n    return type === \"array\" || length === 0 ||\n        typeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\n\nexport default jQuery;\n","export default function isWindow( obj ) {\n\treturn obj != null && obj === obj.window;\n}\n","// All support tests are defined in their respective modules.\nexport default {};\n","/**\n * The events for the conference.\n */\n\n/**\n * Event indicates that the current conference audio input switched between audio\n * input states,i.e. with or without audio input.\n */\nexport const AUDIO_INPUT_STATE_CHANGE = 'conference.audio_input_state_changed';\n\n/**\n * Indicates that authentication status changed.\n */\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\n\n/**\n * Fired just before the statistics module is disposed and it's the last chance\n * to submit some logs to the statistics service (ex. CallStats if enabled),\n * before it's disconnected.\n */\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\n\n/**\n * Indicates that an error occured.\n */\nexport const CONFERENCE_ERROR = 'conference.error';\n\n/**\n * Indicates that conference failed.\n */\nexport const CONFERENCE_FAILED = 'conference.failed';\n\n/**\n * Indicates that conference has been joined. The event does NOT provide any\n * parameters to its listeners.\n */\nexport const CONFERENCE_JOINED = 'conference.joined';\n\n/**\n * Indicates that conference has been left.\n */\nexport const CONFERENCE_LEFT = 'conference.left';\n\n/**\n * Indicates that the conference unique identifier has been set.\n */\nexport const CONFERENCE_UNIQUE_ID_SET = 'conference.unique_id_set';\n\n/**\n * Indicates that the connection to the conference has been established\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\n * state for the first time.\n */\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\n\n/**\n * Indicates that the connection to the conference has been interrupted for some\n * reason.\n * XXX This is currently fired when the *ICE* connection is interrupted.\n */\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\n\n/**\n * Indicates that the connection to the conference has been restored.\n * XXX This is currently fired when the *ICE* connection is restored.\n */\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\n\n/**\n * A connection to the video bridge's data channel has been established.\n */\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\n\n/**\n * A user has changed it display name\n */\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\n\n/**\n * The dominant speaker was changed.\n */\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\n\n/**\n * UTC conference timestamp when first participant joined.\n */\nexport const CONFERENCE_CREATED_TIMESTAMP = 'conference.createdTimestamp';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\n\n/**\n * Indicates that a message from another participant is received on data\n * channel.\n */\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\n\n/**\n * Indicates that a message for the remote endpoint statistics has been received on the bridge channel.\n */\nexport const ENDPOINT_STATS_RECEIVED = 'conference.endpoint_stats_received';\n\n/**\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\n *\n * Event emitted when conference transits, between one to one and multiparty JVB\n * conference. If the conference switches to P2P it's neither one to one nor\n * a multiparty JVB conference, but P2P (the status argument of this event will\n * be <tt>false</tt>).\n *\n * The first argument is a boolean which carries the previous value and\n * the seconds argument is a boolean with the new status. The event is emitted\n * only if the previous and the new values are different.\n *\n * @type {string}\n */\nexport const JVB121_STATUS = 'conference.jvb121Status';\n\n/**\n * You are kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n */\nexport const KICKED = 'conference.kicked';\n\n/**\n * Participant was kicked from the conference.\n * @param {JitsiParticipant} the participant that initiated the kick.\n * @param {JitsiParticipant} the participant that was kicked.\n */\nexport const PARTICIPANT_KICKED = 'conference.participant_kicked';\n\n/**\n * The Last N set is changed.\n *\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\n * which are leaving Last N\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\n * which are entering Last N\n */\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\n\n/**\n * Indicates that the room has been locked or unlocked.\n */\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\n\n/**\n * Indicates that the region of the media server (jitsi-videobridge) that we\n * are connected to changed (or was initially set).\n * @type {string} the region.\n */\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\n\n/**\n * An event(library-private) fired when a new media session is added to the conference.\n * @type {string}\n * @private\n */\nexport const _MEDIA_SESSION_STARTED = 'conference.media_session.started';\n\n/**\n * An event(library-private) fired when the conference switches the currently active media session.\n * @type {string}\n * @private\n */\nexport const _MEDIA_SESSION_ACTIVE_CHANGED = 'conference.media_session.active_changed';\n\n/**\n * Indicates that the conference had changed to members only enabled/disabled.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running in members only mode.\n * You may need to use Lobby if supported to ask for permissions to enter the conference.\n */\nexport const MEMBERS_ONLY_CHANGED = 'conference.membersOnlyChanged';\n\n/**\n * New text message was received.\n */\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\n\n/**\n * Event indicates that the current selected input device has no signal\n */\nexport const NO_AUDIO_INPUT = 'conference.no_audio_input';\n\n/**\n * Event indicates that the current microphone used by the conference is noisy.\n */\nexport const NOISY_MIC = 'conference.noisy_mic';\n\n/**\n * New private text message was received.\n */\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\n\n/**\n * Event fired when JVB sends notification about interrupted/restored user's\n * ICE connection status or we detect local problem with the video track.\n * First argument is the ID of the participant and\n * the seconds is a string indicating if the connection is currently\n * - active - the connection is active\n * - inactive - the connection is inactive, was intentionally interrupted by\n * the bridge\n * - interrupted - a network problem occurred\n * - restoring - the connection was inactive and is restoring now\n *\n * The current status value can be obtained by calling\n * JitsiParticipant.getConnectionStatus().\n */\nexport const PARTICIPANT_CONN_STATUS_CHANGED\n    = 'conference.participant_conn_status_changed';\n\n/**\n * Indicates that the features of the participant has been changed.\n */\nexport const PARTCIPANT_FEATURES_CHANGED\n    = 'conference.partcipant_features_changed';\n\n/**\n * Indicates that a the value of a specific property of a specific participant\n * has changed.\n */\nexport const PARTICIPANT_PROPERTY_CHANGED\n    = 'conference.participant_property_changed';\n\n/**\n * Indicates that the conference has switched between JVB and P2P connections.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running on the P2P connection.\n */\nexport const P2P_STATUS = 'conference.p2pStatus';\n\n/**\n * Indicates that phone number changed.\n */\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\n\n/**\n * The conference properties changed.\n * @type {string}\n */\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\n\n/**\n * Indicates that recording state changed.\n */\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\n\n/**\n * Indicates that video SIP GW state changed.\n * @param {VideoSIPGWConstants} status.\n */\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\n    = 'conference.videoSIPGWAvailabilityChanged';\n\n/**\n * Indicates that video SIP GW Session state changed.\n * @param {options} event - {\n *     {string} address,\n *     {VideoSIPGWConstants} oldState,\n *     {VideoSIPGWConstants} newState,\n *     {string} displayName}\n * }.\n */\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\n    = 'conference.videoSIPGWSessionStateChanged';\n\n/**\n * Indicates that start muted settings changed.\n */\nexport const START_MUTED_POLICY_CHANGED\n    = 'conference.start_muted_policy_changed';\n\n/**\n * Indicates that the local user has started muted.\n */\nexport const STARTED_MUTED = 'conference.started_muted';\n\n/**\n * Indicates that subject of the conference has changed.\n */\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\n\n/**\n * Event indicates that local user is talking while he muted himself\n */\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\n\n/**\n * A new media track was added to the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the added JitsiTrack\n */\nexport const TRACK_ADDED = 'conference.trackAdded';\n\n/**\n * Audio levels of a media track ( attached to the conference) was changed.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\n\n/**\n * A media track ( attached to the conference) mute status was changed.\n * @param {JitsiParticipant|null} the participant that initiated the mute\n * if it is a remote mute.\n */\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\n\n/**\n * The media track was removed from the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the removed JitsiTrack\n */\nexport const TRACK_REMOVED = 'conference.trackRemoved';\n\n/**\n * Notifies for transcription status changes. The event provides the\n * following parameters to its listeners:\n *\n * @param {String} status - The new status.\n */\nexport const TRANSCRIPTION_STATUS_CHANGED\n    = 'conference.transcriptionStatusChanged';\n\n\n/**\n * A new user joined the conference.\n */\nexport const USER_JOINED = 'conference.userJoined';\n\n/**\n * A user has left the conference.\n */\nexport const USER_LEFT = 'conference.userLeft';\n\n/**\n * User role changed.\n */\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\n\n/**\n * User status changed.\n */\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\n\n/**\n * Event indicates that the bot participant type changed.\n */\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\n\n/**\n * A new user joined the lobby room.\n */\nexport const LOBBY_USER_JOINED = 'conference.lobby.userJoined';\n\n/**\n * A user from the lobby room has been update.\n */\nexport const LOBBY_USER_UPDATED = 'conference.lobby.userUpdated';\n\n/**\n * A user left the lobby room.\n */\nexport const LOBBY_USER_LEFT = 'conference.lobby.userLeft';\n","(function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n            typeof define === 'function' && define.amd ? define(factory) :\n            (global = global || self, global.strophe = factory());\n}(this, function () { 'use strict';\n\n            var global$1 = (typeof global !== \"undefined\" ? global :\n                        typeof self !== \"undefined\" ? self :\n                        typeof window !== \"undefined\" ? window : {});\n\n            function _typeof(obj) {\n              if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                _typeof = function (obj) {\n                  return typeof obj;\n                };\n              } else {\n                _typeof = function (obj) {\n                  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                };\n              }\n\n              return _typeof(obj);\n            }\n\n            function _toConsumableArray(arr) {\n              return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n            }\n\n            function _arrayWithoutHoles(arr) {\n              if (Array.isArray(arr)) {\n                for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n                return arr2;\n              }\n            }\n\n            function _iterableToArray(iter) {\n              if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n            }\n\n            function _nonIterableSpread() {\n              throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n            }\n\n            /*\n             * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n             * Digest Algorithm, as defined in RFC 1321.\n             * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for more info.\n             */\n\n            /*\n             * Everything that isn't used by Strophe has been stripped here!\n             */\n\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n            var safe_add = function safe_add(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            };\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            var bit_rol = function bit_rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            };\n            /*\n             * Convert a string to an array of little-endian words\n             */\n\n\n            var str2binl = function str2binl(str) {\n              if (typeof str !== \"string\") {\n                throw new Error(\"str2binl was passed a non-string\");\n              }\n\n              var bin = [];\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << i % 32;\n              }\n\n              return bin;\n            };\n            /*\n             * Convert an array of little-endian words to a string\n             */\n\n\n            var binl2str = function binl2str(bin) {\n              var str = \"\";\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> i % 32 & 255);\n              }\n\n              return str;\n            };\n            /*\n             * Convert an array of little-endian words to a hex string.\n             */\n\n\n            var binl2hex = function binl2hex(binarray) {\n              var hex_tab = \"0123456789abcdef\";\n              var str = \"\";\n\n              for (var i = 0; i < binarray.length * 4; i++) {\n                str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n              }\n\n              return str;\n            };\n            /*\n             * These functions implement the four basic operations the algorithm uses.\n             */\n\n\n            var md5_cmn = function md5_cmn(q, a, b, x, s, t) {\n              return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n            };\n\n            var md5_ff = function md5_ff(a, b, c, d, x, s, t) {\n              return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n            };\n\n            var md5_gg = function md5_gg(a, b, c, d, x, s, t) {\n              return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n            };\n\n            var md5_hh = function md5_hh(a, b, c, d, x, s, t) {\n              return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n            };\n\n            var md5_ii = function md5_ii(a, b, c, d, x, s, t) {\n              return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n            };\n            /*\n             * Calculate the MD5 of an array of little-endian words, and a bit length\n             */\n\n\n            var core_md5 = function core_md5(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << len % 32;\n              x[(len + 64 >>> 9 << 4) + 14] = len;\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var olda, oldb, oldc, oldd;\n\n              for (var i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n                d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n                c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n                b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n                a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n                d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n                c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n                b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n                a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n                d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n                c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n                b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n                a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n                d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n                c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n                b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n                a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n                d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n                c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n                b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n                a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n                d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n                c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n                b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n                a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n                d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n                c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n                b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n                a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n                d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n                c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n                b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n                a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n                d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n                c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n                b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n                a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n                d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n                c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n                b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n                a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n                d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n                c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n                b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n                a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n                d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n                c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n                b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n                a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n                d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n                c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n                b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n                a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n                d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n                c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n                b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n                a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n                d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n                c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n                b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n                a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n                d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n                c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n                b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n                a = safe_add(a, olda);\n                b = safe_add(b, oldb);\n                c = safe_add(c, oldc);\n                d = safe_add(d, oldd);\n              }\n\n              return [a, b, c, d];\n            };\n            /*\n             * These are the functions you'll usually want to call.\n             * They take string arguments and return either hex or base-64 encoded\n             * strings.\n             */\n\n\n            var MD5 = {\n              hexdigest: function hexdigest(s) {\n                return binl2hex(core_md5(str2binl(s), s.length * 8));\n              },\n              hash: function hash(s) {\n                return binl2str(core_md5(str2binl(s), s.length * 8));\n              }\n            };\n\n            /*\n             * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n             * in FIPS PUB 180-1\n             * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for details.\n             */\n\n            /* global define */\n\n            /* Some functions and variables have been stripped for use with Strophe */\n\n            /*\n             * Calculate the SHA-1 of an array of big-endian words, and a bit length\n             */\n            function core_sha1(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << 24 - len % 32;\n              x[(len + 64 >> 9 << 4) + 15] = len;\n              var w = new Array(80);\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var e = -1009589776;\n              var i, j, t, olda, oldb, oldc, oldd, olde;\n\n              for (i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                olde = e;\n\n                for (j = 0; j < 80; j++) {\n                  if (j < 16) {\n                    w[j] = x[i + j];\n                  } else {\n                    w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                  }\n\n                  t = safe_add$1(safe_add$1(rol(a, 5), sha1_ft(j, b, c, d)), safe_add$1(safe_add$1(e, w[j]), sha1_kt(j)));\n                  e = d;\n                  d = c;\n                  c = rol(b, 30);\n                  b = a;\n                  a = t;\n                }\n\n                a = safe_add$1(a, olda);\n                b = safe_add$1(b, oldb);\n                c = safe_add$1(c, oldc);\n                d = safe_add$1(d, oldd);\n                e = safe_add$1(e, olde);\n              }\n\n              return [a, b, c, d, e];\n            }\n            /*\n             * Perform the appropriate triplet combination function for the current\n             * iteration\n             */\n\n\n            function sha1_ft(t, b, c, d) {\n              if (t < 20) {\n                return b & c | ~b & d;\n              }\n\n              if (t < 40) {\n                return b ^ c ^ d;\n              }\n\n              if (t < 60) {\n                return b & c | b & d | c & d;\n              }\n\n              return b ^ c ^ d;\n            }\n            /*\n             * Determine the appropriate additive constant for the current iteration\n             */\n\n\n            function sha1_kt(t) {\n              return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n            }\n            /*\n             * Calculate the HMAC-SHA1 of a key and some data\n             */\n\n\n            function core_hmac_sha1(key, data) {\n              var bkey = str2binb(key);\n\n              if (bkey.length > 16) {\n                bkey = core_sha1(bkey, key.length * 8);\n              }\n\n              var ipad = new Array(16),\n                  opad = new Array(16);\n\n              for (var i = 0; i < 16; i++) {\n                ipad[i] = bkey[i] ^ 0x36363636;\n                opad[i] = bkey[i] ^ 0x5C5C5C5C;\n              }\n\n              var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n              return core_sha1(opad.concat(hash), 512 + 160);\n            }\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n\n\n            function safe_add$1(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            }\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            function rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            }\n            /*\n             * Convert an 8-bit or 16-bit string to an array of big-endian words\n             * In 8-bit function, characters >255 have their hi-byte silently ignored.\n             */\n\n\n            function str2binb(str) {\n              var bin = [];\n              var mask = 255;\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << 24 - i % 32;\n              }\n\n              return bin;\n            }\n            /*\n             * Convert an array of big-endian words to a base-64 string\n             */\n\n\n            function binb2b64(binarray) {\n              var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n              var str = \"\";\n              var triplet, j;\n\n              for (var i = 0; i < binarray.length * 4; i += 3) {\n                triplet = (binarray[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;\n\n                for (j = 0; j < 4; j++) {\n                  if (i * 8 + j * 6 > binarray.length * 32) {\n                    str += \"=\";\n                  } else {\n                    str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n                  }\n                }\n              }\n\n              return str;\n            }\n            /*\n             * Convert an array of big-endian words to a string\n             */\n\n\n            function binb2str(bin) {\n              var str = \"\";\n              var mask = 255;\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> 24 - i % 32 & mask);\n              }\n\n              return str;\n            }\n            /*\n             * These are the functions you'll usually want to call\n             * They take string arguments and return either hex or base-64 encoded strings\n             */\n\n\n            var SHA1 = {\n              b64_hmac_sha1: function b64_hmac_sha1(key, data) {\n                return binb2b64(core_hmac_sha1(key, data));\n              },\n              b64_sha1: function b64_sha1(s) {\n                return binb2b64(core_sha1(str2binb(s), s.length * 8));\n              },\n              binb2str: binb2str,\n              core_hmac_sha1: core_hmac_sha1,\n              str_hmac_sha1: function str_hmac_sha1(key, data) {\n                return binb2str(core_hmac_sha1(key, data));\n              },\n              str_sha1: function str_sha1(s) {\n                return binb2str(core_sha1(str2binb(s), s.length * 8));\n              }\n            };\n\n            var utils = {\n              utf16to8: function utf16to8(str) {\n                var i, c;\n                var out = \"\";\n                var len = str.length;\n\n                for (i = 0; i < len; i++) {\n                  c = str.charCodeAt(i);\n\n                  if (c >= 0x0000 && c <= 0x007F) {\n                    out += str.charAt(i);\n                  } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n                    out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  } else {\n                    out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  }\n                }\n\n                return out;\n              },\n              addCookies: function addCookies(cookies) {\n                /* Parameters:\n                 *  (Object) cookies - either a map of cookie names\n                 *    to string values or to maps of cookie values.\n                 *\n                 * For example:\n                 * { \"myCookie\": \"1234\" }\n                 *\n                 * or:\n                 * { \"myCookie\": {\n                 *      \"value\": \"1234\",\n                 *      \"domain\": \".example.org\",\n                 *      \"path\": \"/\",\n                 *      \"expires\": expirationDate\n                 *      }\n                 *  }\n                 *\n                 *  These values get passed to Strophe.Connection via\n                 *   options.cookies\n                 */\n                cookies = cookies || {};\n\n                for (var cookieName in cookies) {\n                  if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                    var expires = '';\n                    var domain = '';\n                    var path = '';\n                    var cookieObj = cookies[cookieName];\n                    var isObj = _typeof(cookieObj) === \"object\";\n                    var cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\n                    if (isObj) {\n                      expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n                      domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n                      path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n                    }\n\n                    document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n                  }\n                }\n              }\n            };\n\n            /** Function: $build\n             *  Create a Strophe.Builder.\n             *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n             *\n             *  Parameters:\n             *    (String) name - The root element name.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n            function $build(name, attrs) {\n              return new Strophe.Builder(name, attrs);\n            }\n            /** Function: $msg\n             *  Create a Strophe.Builder with a <message/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <message/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $msg(attrs) {\n              return new Strophe.Builder(\"message\", attrs);\n            }\n            /** Function: $iq\n             *  Create a Strophe.Builder with an <iq/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <iq/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $iq(attrs) {\n              return new Strophe.Builder(\"iq\", attrs);\n            }\n            /** Function: $pres\n             *  Create a Strophe.Builder with a <presence/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <presence/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $pres(attrs) {\n              return new Strophe.Builder(\"presence\", attrs);\n            }\n            /** Class: Strophe\n             *  An object container for all Strophe library functions.\n             *\n             *  This class is just a container for all the objects and constants\n             *  used in the library.  It is not meant to be instantiated, but to\n             *  provide a namespace for library objects, constants, and functions.\n             */\n\n\n            var Strophe = {\n              /** Constant: VERSION */\n              VERSION: \"@VERSION@\",\n\n              /** Constants: XMPP Namespace Constants\n               *  Common namespace constants from the XMPP RFCs and XEPs.\n               *\n               *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n               *  NS.BOSH - BOSH namespace from XEP 206.\n               *  NS.CLIENT - Main XMPP client namespace.\n               *  NS.AUTH - Legacy authentication namespace.\n               *  NS.ROSTER - Roster operations namespace.\n               *  NS.PROFILE - Profile namespace.\n               *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n               *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n               *  NS.MUC - Multi-User Chat namespace from XEP 45.\n               *  NS.SASL - XMPP SASL namespace from RFC 3920.\n               *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n               *  NS.BIND - XMPP Binding namespace from RFC 3920 and RFC 6120.\n               *  NS.SESSION - XMPP Session namespace from RFC 3920.\n               *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n               *  NS.XHTML - XHTML body namespace from XEP 71.\n               */\n              NS: {\n                HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n                BOSH: \"urn:xmpp:xbosh\",\n                CLIENT: \"jabber:client\",\n                AUTH: \"jabber:iq:auth\",\n                ROSTER: \"jabber:iq:roster\",\n                PROFILE: \"jabber:iq:profile\",\n                DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n                DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n                MUC: \"http://jabber.org/protocol/muc\",\n                SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n                STREAM: \"http://etherx.jabber.org/streams\",\n                FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n                BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n                SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n                VERSION: \"jabber:iq:version\",\n                STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n                XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n                XHTML: \"http://www.w3.org/1999/xhtml\"\n              },\n\n              /** Constants: XHTML_IM Namespace\n               *  contains allowed tags, tag attributes, and css properties.\n               *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n               *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n               *  allowed tags and their attributes.\n               */\n              XHTML: {\n                tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n                attributes: {\n                  'a': ['href'],\n                  'blockquote': ['style'],\n                  'br': [],\n                  'cite': ['style'],\n                  'em': [],\n                  'img': ['src', 'alt', 'style', 'height', 'width'],\n                  'li': ['style'],\n                  'ol': ['style'],\n                  'p': ['style'],\n                  'span': ['style'],\n                  'strong': [],\n                  'ul': ['style'],\n                  'body': []\n                },\n                css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\n                /** Function: XHTML.validTag\n                 *\n                 * Utility method to determine whether a tag is allowed\n                 * in the XHTML_IM namespace.\n                 *\n                 * XHTML tag names are case sensitive and must be lower case.\n                 */\n                validTag: function validTag(tag) {\n                  for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                    if (tag === Strophe.XHTML.tags[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                },\n\n                /** Function: XHTML.validAttribute\n                 *\n                 * Utility method to determine whether an attribute is allowed\n                 * as recommended per XEP-0071\n                 *\n                 * XHTML attribute names are case sensitive and must be lower case.\n                 */\n                validAttribute: function validAttribute(tag, attribute) {\n                  if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                    for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                      if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                      }\n                    }\n                  }\n\n                  return false;\n                },\n                validCSS: function validCSS(style) {\n                  for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                    if (style === Strophe.XHTML.css[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                }\n              },\n\n              /** Constants: Connection Status Constants\n               *  Connection status constants for use by the connection handler\n               *  callback.\n               *\n               *  Status.ERROR - An error has occurred\n               *  Status.CONNECTING - The connection is currently being made\n               *  Status.CONNFAIL - The connection attempt failed\n               *  Status.AUTHENTICATING - The connection is authenticating\n               *  Status.AUTHFAIL - The authentication attempt failed\n               *  Status.CONNECTED - The connection has succeeded\n               *  Status.DISCONNECTED - The connection has been terminated\n               *  Status.DISCONNECTING - The connection is currently being terminated\n               *  Status.ATTACHED - The connection has been attached\n               *  Status.REDIRECT - The connection has been redirected\n               *  Status.CONNTIMEOUT - The connection has timed out\n               */\n              Status: {\n                ERROR: 0,\n                CONNECTING: 1,\n                CONNFAIL: 2,\n                AUTHENTICATING: 3,\n                AUTHFAIL: 4,\n                CONNECTED: 5,\n                DISCONNECTED: 6,\n                DISCONNECTING: 7,\n                ATTACHED: 8,\n                REDIRECT: 9,\n                CONNTIMEOUT: 10,\n                BINDREQUIRED: 11\n              },\n              ErrorCondition: {\n                BAD_FORMAT: \"bad-format\",\n                CONFLICT: \"conflict\",\n                MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n                NO_AUTH_MECH: \"no-auth-mech\",\n                UNKNOWN_REASON: \"unknown\"\n              },\n\n              /** Constants: Log Level Constants\n               *  Logging level indicators.\n               *\n               *  LogLevel.DEBUG - Debug output\n               *  LogLevel.INFO - Informational output\n               *  LogLevel.WARN - Warnings\n               *  LogLevel.ERROR - Errors\n               *  LogLevel.FATAL - Fatal errors\n               */\n              LogLevel: {\n                DEBUG: 0,\n                INFO: 1,\n                WARN: 2,\n                ERROR: 3,\n                FATAL: 4\n              },\n\n              /** PrivateConstants: DOM Element Type Constants\n               *  DOM element types.\n               *\n               *  ElementType.NORMAL - Normal element.\n               *  ElementType.TEXT - Text data element.\n               *  ElementType.FRAGMENT - XHTML fragment element.\n               */\n              ElementType: {\n                NORMAL: 1,\n                TEXT: 3,\n                CDATA: 4,\n                FRAGMENT: 11\n              },\n\n              /** PrivateConstants: Timeout Values\n               *  Timeout values for error states.  These values are in seconds.\n               *  These should not be changed unless you know exactly what you are\n               *  doing.\n               *\n               *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n               *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 1.1, and with default wait, 66 seconds.\n               *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n               *      Strophe can detect early failure, it will consider the request\n               *      failed if it doesn't return after\n               *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 0.1, and with default wait, 6 seconds.\n               */\n              TIMEOUT: 1.1,\n              SECONDARY_TIMEOUT: 0.1,\n\n              /** Function: addNamespace\n               *  This function is used to extend the current namespaces in\n               *  Strophe.NS.  It takes a key and a value with the key being the\n               *  name of the new namespace, with its actual value.\n               *  For example:\n               *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n               *\n               *  Parameters:\n               *    (String) name - The name under which the namespace will be\n               *      referenced under Strophe.NS\n               *    (String) value - The actual namespace.\n               */\n              addNamespace: function addNamespace(name, value) {\n                Strophe.NS[name] = value;\n              },\n\n              /** Function: forEachChild\n               *  Map a function over some or all child elements of a given element.\n               *\n               *  This is a small convenience function for mapping a function over\n               *  some or all of the children of an element.  If elemName is null, all\n               *  children will be passed to the function, otherwise only children\n               *  whose tag names match elemName will be passed.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The element to operate on.\n               *    (String) elemName - The child element tag name filter.\n               *    (Function) func - The function to apply to each child.  This\n               *      function should take a single argument, a DOM element.\n               */\n              forEachChild: function forEachChild(elem, elemName, func) {\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var childNode = elem.childNodes[i];\n\n                  if (childNode.nodeType === Strophe.ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n                    func(childNode);\n                  }\n                }\n              },\n\n              /** Function: isTagEqual\n               *  Compare an element's tag name with a string.\n               *\n               *  This function is case sensitive.\n               *\n               *  Parameters:\n               *    (XMLElement) el - A DOM element.\n               *    (String) name - The element name.\n               *\n               *  Returns:\n               *    true if the element's tag name matches _el_, and false\n               *    otherwise.\n               */\n              isTagEqual: function isTagEqual(el, name) {\n                return el.tagName === name;\n              },\n\n              /** PrivateVariable: _xmlGenerator\n               *  _Private_ variable that caches a DOM document to\n               *  generate elements.\n               */\n              _xmlGenerator: null,\n\n              /** PrivateFunction: _makeGenerator\n               *  _Private_ function that creates a dummy XML DOM document to serve as\n               *  an element and text node generator.\n               */\n              _makeGenerator: function _makeGenerator() {\n                var doc; // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n                // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n\n                if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n                  doc = this._getIEXmlDom();\n                  doc.appendChild(doc.createElement('strophe'));\n                } else {\n                  doc = document.implementation.createDocument('jabber:client', 'strophe', null);\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlGenerator\n               *  Get the DOM document to generate elements.\n               *\n               *  Returns:\n               *    The currently used DOM document.\n               */\n              xmlGenerator: function xmlGenerator() {\n                if (!Strophe._xmlGenerator) {\n                  Strophe._xmlGenerator = Strophe._makeGenerator();\n                }\n\n                return Strophe._xmlGenerator;\n              },\n\n              /** PrivateFunction: _getIEXmlDom\n               *  Gets IE xml doc object\n               *\n               *  Returns:\n               *    A Microsoft XML DOM Object\n               *  See Also:\n               *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n               */\n              _getIEXmlDom: function _getIEXmlDom() {\n                var doc = null;\n                var docStrings = [\"Msxml2.DOMDocument.6.0\", \"Msxml2.DOMDocument.5.0\", \"Msxml2.DOMDocument.4.0\", \"MSXML2.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XMLDOM\"];\n\n                for (var d = 0; d < docStrings.length; d++) {\n                  if (doc === null) {\n                    try {\n                      doc = new ActiveXObject(docStrings[d]);\n                    } catch (e) {\n                      doc = null;\n                    }\n                  } else {\n                    break;\n                  }\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlElement\n               *  Create an XML DOM element.\n               *\n               *  This function creates an XML DOM element correctly across all\n               *  implementations. Note that these are not HTML DOM elements, which\n               *  aren't appropriate for XMPP stanzas.\n               *\n               *  Parameters:\n               *    (String) name - The name for the element.\n               *    (Array|Object) attrs - An optional array or object containing\n               *      key/value pairs to use as element attributes. The object should\n               *      be in the format {'key': 'value'} or {key: 'value'}. The array\n               *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n               *    (String) text - The text child data for the element.\n               *\n               *  Returns:\n               *    A new XML DOM element.\n               */\n              xmlElement: function xmlElement(name) {\n                if (!name) {\n                  return null;\n                }\n\n                var node = Strophe.xmlGenerator().createElement(name); // FIXME: this should throw errors if args are the wrong type or\n                // there are more than two optional args\n\n                for (var a = 1; a < arguments.length; a++) {\n                  var arg = arguments[a];\n\n                  if (!arg) {\n                    continue;\n                  }\n\n                  if (typeof arg === \"string\" || typeof arg === \"number\") {\n                    node.appendChild(Strophe.xmlTextNode(arg));\n                  } else if (_typeof(arg) === \"object\" && typeof arg.sort === \"function\") {\n                    for (var i = 0; i < arg.length; i++) {\n                      var attr = arg[i];\n\n                      if (_typeof(attr) === \"object\" && typeof attr.sort === \"function\" && attr[1] !== undefined && attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                      }\n                    }\n                  } else if (_typeof(arg) === \"object\") {\n                    for (var k in arg) {\n                      if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                        node.setAttribute(k, arg[k]);\n                      }\n                    }\n                  }\n                }\n\n                return node;\n              },\n\n              /*  Function: xmlescape\n               *  Excapes invalid xml characters.\n               *\n               *  Parameters:\n               *     (String) text - text to escape.\n               *\n               *  Returns:\n               *      Escaped text.\n               */\n              xmlescape: function xmlescape(text) {\n                text = text.replace(/\\&/g, \"&amp;\");\n                text = text.replace(/</g, \"&lt;\");\n                text = text.replace(/>/g, \"&gt;\");\n                text = text.replace(/'/g, \"&apos;\");\n                text = text.replace(/\"/g, \"&quot;\");\n                return text;\n              },\n\n              /*  Function: xmlunescape\n              *  Unexcapes invalid xml characters.\n              *\n              *  Parameters:\n              *     (String) text - text to unescape.\n              *\n              *  Returns:\n              *      Unescaped text.\n              */\n              xmlunescape: function xmlunescape(text) {\n                text = text.replace(/\\&amp;/g, \"&\");\n                text = text.replace(/&lt;/g, \"<\");\n                text = text.replace(/&gt;/g, \">\");\n                text = text.replace(/&apos;/g, \"'\");\n                text = text.replace(/&quot;/g, \"\\\"\");\n                return text;\n              },\n\n              /** Function: xmlTextNode\n               *  Creates an XML DOM text node.\n               *\n               *  Provides a cross implementation version of document.createTextNode.\n               *\n               *  Parameters:\n               *    (String) text - The content of the text node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlTextNode: function xmlTextNode(text) {\n                return Strophe.xmlGenerator().createTextNode(text);\n              },\n\n              /** Function: xmlHtmlNode\n               *  Creates an XML DOM html node.\n               *\n               *  Parameters:\n               *    (String) html - The content of the html node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlHtmlNode: function xmlHtmlNode(html) {\n                var node; //ensure text is escaped\n\n                if (DOMParser) {\n                  var parser = new DOMParser();\n                  node = parser.parseFromString(html, \"text/xml\");\n                } else {\n                  node = new ActiveXObject(\"Microsoft.XMLDOM\");\n                  node.async = \"false\";\n                  node.loadXML(html);\n                }\n\n                return node;\n              },\n\n              /** Function: getText\n               *  Get the concatenation of all text children of an element.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A String with the concatenated text of all text element children.\n               */\n              getText: function getText(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                var str = \"\";\n\n                if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n                  str += elem.nodeValue;\n                }\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                    str += elem.childNodes[i].nodeValue;\n                  }\n                }\n\n                return Strophe.xmlescape(str);\n              },\n\n              /** Function: copyElement\n               *  Copy an XML DOM element.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              copyElement: function copyElement(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  el = Strophe.xmlElement(elem.tagName);\n\n                  for (var i = 0; i < elem.attributes.length; i++) {\n                    el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n                  }\n\n                  for (var _i = 0; _i < elem.childNodes.length; _i++) {\n                    el.appendChild(Strophe.copyElement(elem.childNodes[_i]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: createHtml\n               *  Copy an HTML DOM element into an XML DOM.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (HTMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              createHtml: function createHtml(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  var tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\n                  if (Strophe.XHTML.validTag(tag)) {\n                    try {\n                      el = Strophe.xmlElement(tag);\n\n                      for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        var attribute = Strophe.XHTML.attributes[tag][i];\n                        var value = elem.getAttribute(attribute);\n\n                        if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                          continue;\n                        }\n\n                        if (attribute === 'style' && _typeof(value) === 'object' && typeof value.cssText !== 'undefined') {\n                          value = value.cssText; // we're dealing with IE, need to get CSS out\n                        } // filter out invalid css styles\n\n\n                        if (attribute === 'style') {\n                          var css = [];\n                          var cssAttrs = value.split(';');\n\n                          for (var j = 0; j < cssAttrs.length; j++) {\n                            var attr = cssAttrs[j].split(':');\n                            var cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\n                            if (Strophe.XHTML.validCSS(cssName)) {\n                              var cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                              css.push(cssName + ': ' + cssValue);\n                            }\n                          }\n\n                          if (css.length > 0) {\n                            value = css.join('; ');\n                            el.setAttribute(attribute, value);\n                          }\n                        } else {\n                          el.setAttribute(attribute, value);\n                        }\n                      }\n\n                      for (var _i2 = 0; _i2 < elem.childNodes.length; _i2++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[_i2]));\n                      }\n                    } catch (e) {\n                      // invalid elements\n                      el = Strophe.xmlTextNode('');\n                    }\n                  } else {\n                    el = Strophe.xmlGenerator().createDocumentFragment();\n\n                    for (var _i3 = 0; _i3 < elem.childNodes.length; _i3++) {\n                      el.appendChild(Strophe.createHtml(elem.childNodes[_i3]));\n                    }\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n                  el = Strophe.xmlGenerator().createDocumentFragment();\n\n                  for (var _i4 = 0; _i4 < elem.childNodes.length; _i4++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[_i4]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: escapeNode\n               *  Escape the node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An escaped node (or local part).\n               */\n              escapeNode: function escapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, \"\\\\5c\").replace(/ /g, \"\\\\20\").replace(/\\\"/g, \"\\\\22\").replace(/\\&/g, \"\\\\26\").replace(/\\'/g, \"\\\\27\").replace(/\\//g, \"\\\\2f\").replace(/:/g, \"\\\\3a\").replace(/</g, \"\\\\3c\").replace(/>/g, \"\\\\3e\").replace(/@/g, \"\\\\40\");\n              },\n\n              /** Function: unescapeNode\n               *  Unescape a node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An unescaped node (or local part).\n               */\n              unescapeNode: function unescapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/\\\\20/g, \" \").replace(/\\\\22/g, '\"').replace(/\\\\26/g, \"&\").replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, \"/\").replace(/\\\\3a/g, \":\").replace(/\\\\3c/g, \"<\").replace(/\\\\3e/g, \">\").replace(/\\\\40/g, \"@\").replace(/\\\\5c/g, \"\\\\\");\n              },\n\n              /** Function: getNodeFromJid\n               *  Get the node portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the node.\n               */\n              getNodeFromJid: function getNodeFromJid(jid) {\n                if (jid.indexOf(\"@\") < 0) {\n                  return null;\n                }\n\n                return jid.split(\"@\")[0];\n              },\n\n              /** Function: getDomainFromJid\n               *  Get the domain portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the domain.\n               */\n              getDomainFromJid: function getDomainFromJid(jid) {\n                var bare = Strophe.getBareJidFromJid(jid);\n\n                if (bare.indexOf(\"@\") < 0) {\n                  return bare;\n                } else {\n                  var parts = bare.split(\"@\");\n                  parts.splice(0, 1);\n                  return parts.join('@');\n                }\n              },\n\n              /** Function: getResourceFromJid\n               *  Get the resource portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the resource.\n               */\n              getResourceFromJid: function getResourceFromJid(jid) {\n                if (!jid) {\n                  return null;\n                }\n\n                var s = jid.split(\"/\");\n\n                if (s.length < 2) {\n                  return null;\n                }\n\n                s.splice(0, 1);\n                return s.join('/');\n              },\n\n              /** Function: getBareJidFromJid\n               *  Get the bare JID from a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the bare JID.\n               */\n              getBareJidFromJid: function getBareJidFromJid(jid) {\n                return jid ? jid.split(\"/\")[0] : null;\n              },\n\n              /** PrivateFunction: _handleError\n               *  _Private_ function that properly logs an error to the console\n               */\n              _handleError: function _handleError(e) {\n                if (typeof e.stack !== \"undefined\") {\n                  Strophe.fatal(e.stack);\n                }\n\n                if (e.sourceURL) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" + e.line + \" - \" + e.name + \": \" + e.message);\n                } else if (e.fileName) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.fileName + \":\" + e.lineNumber + \" - \" + e.name + \": \" + e.message);\n                } else {\n                  Strophe.fatal(\"error: \" + e.message);\n                }\n              },\n\n              /** Function: log\n               *  User overrideable logging function.\n               *\n               *  This function is called whenever the Strophe library calls any\n               *  of the logging functions.  The default implementation of this\n               *  function logs only fatal errors.  If client code wishes to handle the logging\n               *  messages, it should override this with\n               *  > Strophe.log = function (level, msg) {\n               *  >   (user code here)\n               *  > };\n               *\n               *  Please note that data sent and received over the wire is logged\n               *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n               *\n               *  The different levels and their meanings are\n               *\n               *    DEBUG - Messages useful for debugging purposes.\n               *    INFO - Informational messages.  This is mostly information like\n               *      'disconnect was called' or 'SASL auth succeeded'.\n               *    WARN - Warnings about potential problems.  This is mostly used\n               *      to report transient connection errors like request timeouts.\n               *    ERROR - Some error occurred.\n               *    FATAL - A non-recoverable fatal error occurred.\n               *\n               *  Parameters:\n               *    (Integer) level - The log level of the log message.  This will\n               *      be one of the values in Strophe.LogLevel.\n               *    (String) msg - The log message.\n               */\n              log: function log(level, msg) {\n                if (level === this.LogLevel.FATAL && _typeof(window.console) === 'object' && typeof window.console.error === 'function') {\n                  window.console.error(msg);\n                }\n              },\n\n              /** Function: debug\n               *  Log a message at the Strophe.LogLevel.DEBUG level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              debug: function debug(msg) {\n                this.log(this.LogLevel.DEBUG, msg);\n              },\n\n              /** Function: info\n               *  Log a message at the Strophe.LogLevel.INFO level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              info: function info(msg) {\n                this.log(this.LogLevel.INFO, msg);\n              },\n\n              /** Function: warn\n               *  Log a message at the Strophe.LogLevel.WARN level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              warn: function warn(msg) {\n                this.log(this.LogLevel.WARN, msg);\n              },\n\n              /** Function: error\n               *  Log a message at the Strophe.LogLevel.ERROR level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              error: function error(msg) {\n                this.log(this.LogLevel.ERROR, msg);\n              },\n\n              /** Function: fatal\n               *  Log a message at the Strophe.LogLevel.FATAL level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              fatal: function fatal(msg) {\n                this.log(this.LogLevel.FATAL, msg);\n              },\n\n              /** Function: serialize\n               *  Render a DOM element and all descendants to a String.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The serialized element tree as a String.\n               */\n              serialize: function serialize(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var names = _toConsumableArray(Array(elem.attributes.length).keys()).map(function (i) {\n                  return elem.attributes[i].nodeName;\n                });\n\n                names.sort();\n                var result = names.reduce(function (a, n) {\n                  return \"\".concat(a, \" \").concat(n, \"=\\\"\").concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value), \"\\\"\");\n                }, \"<\".concat(elem.nodeName));\n\n                if (elem.childNodes.length > 0) {\n                  result += \">\";\n\n                  for (var i = 0; i < elem.childNodes.length; i++) {\n                    var child = elem.childNodes[i];\n\n                    switch (child.nodeType) {\n                      case Strophe.ElementType.NORMAL:\n                        // normal element, so recurse\n                        result += Strophe.serialize(child);\n                        break;\n\n                      case Strophe.ElementType.TEXT:\n                        // text element to escape values\n                        result += Strophe.xmlescape(child.nodeValue);\n                        break;\n\n                      case Strophe.ElementType.CDATA:\n                        // cdata section so don't escape values\n                        result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n                    }\n                  }\n\n                  result += \"</\" + elem.nodeName + \">\";\n                } else {\n                  result += \"/>\";\n                }\n\n                return result;\n              },\n\n              /** PrivateVariable: _requestId\n               *  _Private_ variable that keeps track of the request ids for\n               *  connections.\n               */\n              _requestId: 0,\n\n              /** PrivateVariable: Strophe.connectionPlugins\n               *  _Private_ variable Used to store plugin names that need\n               *  initialization on Strophe.Connection construction.\n               */\n              _connectionPlugins: {},\n\n              /** Function: addConnectionPlugin\n               *  Extends the Strophe.Connection object with the given plugin.\n               *\n               *  Parameters:\n               *    (String) name - The name of the extension.\n               *    (Object) ptype - The plugin's prototype.\n               */\n              addConnectionPlugin: function addConnectionPlugin(name, ptype) {\n                Strophe._connectionPlugins[name] = ptype;\n              }\n            };\n            /** Class: Strophe.Builder\n             *  XML DOM builder.\n             *\n             *  This object provides an interface similar to JQuery but for building\n             *  DOM elements easily and rapidly.  All the functions except for toString()\n             *  and tree() return the object, so calls can be chained.  Here's an\n             *  example using the $iq() builder helper.\n             *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n             *  >     .c('query', {xmlns: 'strophe:example'})\n             *  >     .c('example')\n             *  >     .toString()\n             *\n             *  The above generates this XML fragment\n             *  > <iq to='you' from='me' type='get' id='1'>\n             *  >   <query xmlns='strophe:example'>\n             *  >     <example/>\n             *  >   </query>\n             *  > </iq>\n             *  The corresponding DOM manipulations to get a similar fragment would be\n             *  a lot more tedious and probably involve several helper variables.\n             *\n             *  Since adding children makes new operations operate on the child, up()\n             *  is provided to traverse up the tree.  To add two children, do\n             *  > builder.c('child1', ...).up().c('child2', ...)\n             *  The next operation on the Builder will be relative to the second child.\n             */\n\n            /** Constructor: Strophe.Builder\n             *  Create a Strophe.Builder object.\n             *\n             *  The attributes should be passed in object notation.  For example\n             *  > let b = new Builder('message', {to: 'you', from: 'me'});\n             *  or\n             *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n             *\n             *  Parameters:\n             *    (String) name - The name of the root element.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder.\n             */\n\n            Strophe.Builder = function (name, attrs) {\n              // Set correct namespace for jabber:client elements\n              if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n                if (attrs && !attrs.xmlns) {\n                  attrs.xmlns = Strophe.NS.CLIENT;\n                } else if (!attrs) {\n                  attrs = {\n                    xmlns: Strophe.NS.CLIENT\n                  };\n                }\n              } // Holds the tree being built.\n\n\n              this.nodeTree = Strophe.xmlElement(name, attrs); // Points to the current operation node.\n\n              this.node = this.nodeTree;\n            };\n\n            Strophe.Builder.prototype = {\n              /** Function: tree\n               *  Return the DOM tree.\n               *\n               *  This function returns the current DOM tree as an element object.  This\n               *  is suitable for passing to functions like Strophe.Connection.send().\n               *\n               *  Returns:\n               *    The DOM tree as a element object.\n               */\n              tree: function tree() {\n                return this.nodeTree;\n              },\n\n              /** Function: toString\n               *  Serialize the DOM tree to a String.\n               *\n               *  This function returns a string serialization of the current DOM\n               *  tree.  It is often used internally to pass data to a\n               *  Strophe.Request object.\n               *\n               *  Returns:\n               *    The serialized DOM tree in a String.\n               */\n              toString: function toString() {\n                return Strophe.serialize(this.nodeTree);\n              },\n\n              /** Function: up\n               *  Make the current parent element the new current element.\n               *\n               *  This function is often used after c() to traverse back up the tree.\n               *  For example, to add two children to the same element\n               *  > builder.c('child1', {}).up().c('child2', {});\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              up: function up() {\n                this.node = this.node.parentNode;\n                return this;\n              },\n\n              /** Function: root\n               *  Make the root element the new current element.\n               *\n               *  When at a deeply nested element in the tree, this function can be used\n               *  to jump back to the root of the tree, instead of having to repeatedly\n               *  call up().\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              root: function root() {\n                this.node = this.nodeTree;\n                return this;\n              },\n\n              /** Function: attrs\n               *  Add or modify attributes of the current element.\n               *\n               *  The attributes should be passed in object notation.  This function\n               *  does not move the current element pointer.\n               *\n               *  Parameters:\n               *    (Object) moreattrs - The attributes to add/modify in object notation.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              attrs: function attrs(moreattrs) {\n                for (var k in moreattrs) {\n                  if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                    if (moreattrs[k] === undefined) {\n                      this.node.removeAttribute(k);\n                    } else {\n                      this.node.setAttribute(k, moreattrs[k]);\n                    }\n                  }\n                }\n\n                return this;\n              },\n\n              /** Function: c\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function moves the current element pointer to the child,\n               *  unless text is provided.  If you need to add another child, it\n               *  is necessary to use up() to go back to the parent in the tree.\n               *\n               *  Parameters:\n               *    (String) name - The name of the child.\n               *    (Object) attrs - The attributes of the child in object notation.\n               *    (String) text - The text to add to the child.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              c: function c(name, attrs, text) {\n                var child = Strophe.xmlElement(name, attrs, text);\n                this.node.appendChild(child);\n\n                if (typeof text !== \"string\" && typeof text !== \"number\") {\n                  this.node = child;\n                }\n\n                return this;\n              },\n\n              /** Function: cnode\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function is the same as c() except that instead of using a\n               *  name and an attributes object to create the child it uses an\n               *  existing DOM element object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              cnode: function cnode(elem) {\n                var impNode;\n                var xmlGen = Strophe.xmlGenerator();\n\n                try {\n                  impNode = xmlGen.importNode !== undefined;\n                } catch (e) {\n                  impNode = false;\n                }\n\n                var newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n                this.node.appendChild(newElem);\n                this.node = newElem;\n                return this;\n              },\n\n              /** Function: t\n               *  Add a child text element.\n               *\n               *  This *does not* make the child the new current element since there\n               *  are no children of text elements.\n               *\n               *  Parameters:\n               *    (String) text - The text data to append to the current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              t: function t(text) {\n                var child = Strophe.xmlTextNode(text);\n                this.node.appendChild(child);\n                return this;\n              },\n\n              /** Function: h\n               *  Replace current element contents with the HTML passed in.\n               *\n               *  This *does not* make the child the new current element\n               *\n               *  Parameters:\n               *    (String) html - The html to insert as contents of current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              h: function h(html) {\n                var fragment = document.createElement('body'); // force the browser to try and fix any invalid HTML tags\n\n                fragment.innerHTML = html; // copy cleaned html into an xml dom\n\n                var xhtml = Strophe.createHtml(fragment);\n\n                while (xhtml.childNodes.length > 0) {\n                  this.node.appendChild(xhtml.childNodes[0]);\n                }\n\n                return this;\n              }\n            };\n            /** PrivateClass: Strophe.Handler\n             *  _Private_ helper class for managing stanza handlers.\n             *\n             *  A Strophe.Handler encapsulates a user provided callback function to be\n             *  executed when matching stanzas are received by the connection.\n             *  Handlers can be either one-off or persistant depending on their\n             *  return value. Returning true will cause a Handler to remain active, and\n             *  returning false will remove the Handler.\n             *\n             *  Users will not use Strophe.Handler objects directly, but instead they\n             *  will use Strophe.Connection.addHandler() and\n             *  Strophe.Connection.deleteHandler().\n             */\n\n            /** PrivateConstructor: Strophe.Handler\n             *  Create and initialize a new Strophe.Handler.\n             *\n             *  Parameters:\n             *    (Function) handler - A function to be executed when the handler is run.\n             *    (String) ns - The namespace to match.\n             *    (String) name - The element name to match.\n             *    (String) type - The element type to match.\n             *    (String) id - The element id attribute to match.\n             *    (String) from - The element from attribute to match.\n             *    (Object) options - Handler options\n             *\n             *  Returns:\n             *    A new Strophe.Handler object.\n             */\n\n            Strophe.Handler = function (handler, ns, name, type, id, from, options) {\n              this.handler = handler;\n              this.ns = ns;\n              this.name = name;\n              this.type = type;\n              this.id = id;\n              this.options = options || {\n                'matchBareFromJid': false,\n                'ignoreNamespaceFragment': false\n              }; // BBB: Maintain backward compatibility with old `matchBare` option\n\n              if (this.options.matchBare) {\n                Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n                this.options.matchBareFromJid = this.options.matchBare;\n                delete this.options.matchBare;\n              }\n\n              if (this.options.matchBareFromJid) {\n                this.from = from ? Strophe.getBareJidFromJid(from) : null;\n              } else {\n                this.from = from;\n              } // whether the handler is a user handler or a system handler\n\n\n              this.user = true;\n            };\n\n            Strophe.Handler.prototype = {\n              /** PrivateFunction: getNamespace\n               *  Returns the XML namespace attribute on an element.\n               *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n               *  URL fragment will be stripped.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element with the namespace.\n               *\n               *  Returns:\n               *    The namespace, with optionally the fragment stripped.\n               */\n              getNamespace: function getNamespace(elem) {\n                var elNamespace = elem.getAttribute(\"xmlns\");\n\n                if (elNamespace && this.options.ignoreNamespaceFragment) {\n                  elNamespace = elNamespace.split('#')[0];\n                }\n\n                return elNamespace;\n              },\n\n              /** PrivateFunction: namespaceMatch\n               *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              namespaceMatch: function namespaceMatch(elem) {\n                var _this = this;\n\n                var nsMatch = false;\n\n                if (!this.ns) {\n                  return true;\n                } else {\n                  Strophe.forEachChild(elem, null, function (elem) {\n                    if (_this.getNamespace(elem) === _this.ns) {\n                      nsMatch = true;\n                    }\n                  });\n                  return nsMatch || this.getNamespace(elem) === this.ns;\n                }\n              },\n\n              /** PrivateFunction: isMatch\n               *  Tests if a stanza matches the Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              isMatch: function isMatch(elem) {\n                var from = elem.getAttribute('from');\n\n                if (this.options.matchBareFromJid) {\n                  from = Strophe.getBareJidFromJid(from);\n                }\n\n                var elem_type = elem.getAttribute(\"type\");\n\n                if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute(\"id\") === this.id) && (!this.from || from === this.from)) {\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: run\n               *  Run the callback on a matching stanza.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The DOM element that triggered the\n               *      Strophe.Handler.\n               *\n               *  Returns:\n               *    A boolean indicating if the handler should remain active.\n               */\n              run: function run(elem) {\n                var result = null;\n\n                try {\n                  result = this.handler(elem);\n                } catch (e) {\n                  Strophe._handleError(e);\n\n                  throw e;\n                }\n\n                return result;\n              },\n\n              /** PrivateFunction: toString\n               *  Get a String representation of the Strophe.Handler object.\n               *\n               *  Returns:\n               *    A String.\n               */\n              toString: function toString() {\n                return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" + this.id + \",\" + this.ns + \")}\";\n              }\n            };\n            /** PrivateClass: Strophe.TimedHandler\n             *  _Private_ helper class for managing timed handlers.\n             *\n             *  A Strophe.TimedHandler encapsulates a user provided callback that\n             *  should be called after a certain period of time or at regular\n             *  intervals.  The return value of the callback determines whether the\n             *  Strophe.TimedHandler will continue to fire.\n             *\n             *  Users will not use Strophe.TimedHandler objects directly, but instead\n             *  they will use Strophe.Connection.addTimedHandler() and\n             *  Strophe.Connection.deleteTimedHandler().\n             */\n\n            /** PrivateConstructor: Strophe.TimedHandler\n             *  Create and initialize a new Strophe.TimedHandler object.\n             *\n             *  Parameters:\n             *    (Integer) period - The number of milliseconds to wait before the\n             *      handler is called.\n             *    (Function) handler - The callback to run when the handler fires.  This\n             *      function should take no arguments.\n             *\n             *  Returns:\n             *    A new Strophe.TimedHandler object.\n             */\n\n            Strophe.TimedHandler = function (period, handler) {\n              this.period = period;\n              this.handler = handler;\n              this.lastCalled = new Date().getTime();\n              this.user = true;\n            };\n\n            Strophe.TimedHandler.prototype = {\n              /** PrivateFunction: run\n               *  Run the callback for the Strophe.TimedHandler.\n               *\n               *  Returns:\n               *    true if the Strophe.TimedHandler should be called again, and false\n               *      otherwise.\n               */\n              run: function run() {\n                this.lastCalled = new Date().getTime();\n                return this.handler();\n              },\n\n              /** PrivateFunction: reset\n               *  Reset the last called time for the Strophe.TimedHandler.\n               */\n              reset: function reset() {\n                this.lastCalled = new Date().getTime();\n              },\n\n              /** PrivateFunction: toString\n               *  Get a string representation of the Strophe.TimedHandler object.\n               *\n               *  Returns:\n               *    The string representation.\n               */\n              toString: function toString() {\n                return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n              }\n            };\n            /** Class: Strophe.Connection\n             *  XMPP Connection manager.\n             *\n             *  This class is the main part of Strophe.  It manages a BOSH or websocket\n             *  connection to an XMPP server and dispatches events to the user callbacks\n             *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n             *  and legacy authentication.\n             *\n             *  After creating a Strophe.Connection object, the user will typically\n             *  call connect() with a user supplied callback to handle connection level\n             *  events like authentication failure, disconnection, or connection\n             *  complete.\n             *\n             *  The user will also have several event handlers defined by using\n             *  addHandler() and addTimedHandler().  These will allow the user code to\n             *  respond to interesting stanzas or do something periodically with the\n             *  connection. These handlers will be active once authentication is\n             *  finished.\n             *\n             *  To send data to the connection, use send().\n             */\n\n            /** Constructor: Strophe.Connection\n             *  Create and initialize a Strophe.Connection object.\n             *\n             *  The transport-protocol for this connection will be chosen automatically\n             *  based on the given service parameter. URLs starting with \"ws://\" or\n             *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n             *  or without a protocol will use BOSH.\n             *\n             *  To make Strophe connect to the current host you can leave out the protocol\n             *  and host part and just pass the path, e.g.\n             *\n             *  > let conn = new Strophe.Connection(\"/http-bind/\");\n             *\n             *  Options common to both Websocket and BOSH:\n             *  ------------------------------------------\n             *\n             *  cookies:\n             *\n             *  The *cookies* option allows you to pass in cookies to be added to the\n             *  document. These cookies will then be included in the BOSH XMLHttpRequest\n             *  or in the websocket connection.\n             *\n             *  The passed in value must be a map of cookie names and string values.\n             *\n             *  > { \"myCookie\": {\n             *  >     \"value\": \"1234\",\n             *  >     \"domain\": \".example.org\",\n             *  >     \"path\": \"/\",\n             *  >     \"expires\": expirationDate\n             *  >     }\n             *  > }\n             *\n             *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n             *  Those cookies need to be set under those domains, for example they can be\n             *  set server-side by making a XHR call to that domain to ask it to set any\n             *  necessary cookies.\n             *\n             *  mechanisms:\n             *\n             *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n             *  instance of Strophe.Connection (and therefore your XMPP client) will\n             *  support.\n             *\n             *  The value must be an array of objects with Strophe.SASLMechanism\n             *  prototypes.\n             *\n             *  If nothing is specified, then the following mechanisms (and their\n             *  priorities) are registered:\n             *\n             *      SCRAM-SHA1 - 70\n             *      DIGEST-MD5 - 60\n             *      PLAIN - 50\n             *      OAUTH-BEARER - 40\n             *      OAUTH-2 - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  explicitResourceBinding:\n             *\n             *  If `explicitResourceBinding` is set to a truthy value, then the XMPP client\n             *  needs to explicitly call `Strophe.Connection.prototype.bind` once the XMPP\n             *  server has advertised the \"urn:ietf:params:xml:ns:xmpp-bind\" feature.\n             *\n             *  Making this step explicit allows client authors to first finish other\n             *  stream related tasks, such as setting up an XEP-0198 Stream Management\n             *  session, before binding the JID resource for this session.\n             *\n             *  WebSocket options:\n             *  ------------------\n             *\n             *  If you want to connect to the current host with a WebSocket connection you\n             *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n             *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n             *  for Secure WebSocket.\n             *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n             *\n             *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n             *\n             *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n             *  of the current site.\n             *\n             *  Also because downgrading security is not permitted by browsers, when using\n             *  relative URLs both BOSH and WebSocket connections will use their secure\n             *  variants if the current connection to the site is also secure (https).\n             *\n             *  BOSH options:\n             *  -------------\n             *\n             *  By adding \"sync\" to the options, you can control if requests will\n             *  be made synchronously or not. The default behaviour is asynchronous.\n             *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n             *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n             *\n             *  You can also toggle this on an already established connection.\n             *  > conn.options.sync = true;\n             *\n             *  The *customHeaders* option can be used to provide custom HTTP headers to be\n             *  included in the XMLHttpRequests made.\n             *\n             *  The *keepalive* option can be used to instruct Strophe to maintain the\n             *  current BOSH session across interruptions such as webpage reloads.\n             *\n             *  It will do this by caching the sessions tokens in sessionStorage, and when\n             *  \"restore\" is called it will check whether there are cached tokens with\n             *  which it can resume an existing session.\n             *\n             *  The *withCredentials* option should receive a Boolean value and is used to\n             *  indicate wether cookies should be included in ajax requests (by default\n             *  they're not).\n             *  Set this value to true if you are connecting to a BOSH service\n             *  and for some reason need to send cookies to it.\n             *  In order for this to work cross-domain, the server must also enable\n             *  credentials by setting the Access-Control-Allow-Credentials response header\n             *  to \"true\". For most usecases however this setting should be false (which\n             *  is the default).\n             *  Additionally, when using Access-Control-Allow-Credentials, the\n             *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n             *  instead must be restricted to actual domains.\n             *\n             *  The *contentType* option can be set to change the default Content-Type\n             *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n             *  CORS preflight requests that are sent to the server.\n             *\n             *  Parameters:\n             *    (String) service - The BOSH or WebSocket service URL.\n             *    (Object) options - A hash of configuration options\n             *\n             *  Returns:\n             *    A new Strophe.Connection object.\n             */\n\n            Strophe.Connection = function (service, options) {\n              var _this2 = this;\n\n              // The service URL\n              this.service = service; // Configuration options\n\n              this.options = options || {};\n              var proto = this.options.protocol || \"\"; // Select protocal based on service or options\n\n              if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 || proto.indexOf(\"ws\") === 0) {\n                this._proto = new Strophe.Websocket(this);\n              } else {\n                this._proto = new Strophe.Bosh(this);\n              }\n              /* The connected JID. */\n\n\n              this.jid = \"\";\n              /* the JIDs domain */\n\n              this.domain = null;\n              /* stream:features */\n\n              this.features = null; // SASL\n\n              this._sasl_data = {};\n              this.do_session = false;\n              this.do_bind = false; // handler lists\n\n              this.timedHandlers = [];\n              this.handlers = [];\n              this.removeTimeds = [];\n              this.removeHandlers = [];\n              this.addTimeds = [];\n              this.addHandlers = [];\n              this.protocolErrorHandlers = {\n                'HTTP': {},\n                'websocket': {}\n              };\n              this._idleTimeout = null;\n              this._disconnectTimeout = null;\n              this.authenticated = false;\n              this.connected = false;\n              this.disconnecting = false;\n              this.do_authentication = true;\n              this.paused = false;\n              this.restored = false;\n              this._data = [];\n              this._uniqueId = 0;\n              this._sasl_success_handler = null;\n              this._sasl_failure_handler = null;\n              this._sasl_challenge_handler = null; // Max retries before disconnecting\n\n              this.maxRetries = 5; // Call onIdle callback every 1/10th of a second\n\n              this._idleTimeout = setTimeout(function () {\n                return _this2._onIdle();\n              }, 100);\n              utils.addCookies(this.options.cookies);\n              this.registerSASLMechanisms(this.options.mechanisms); // initialize plugins\n\n              for (var k in Strophe._connectionPlugins) {\n                if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                  var F = function F() {};\n\n                  F.prototype = Strophe._connectionPlugins[k];\n                  this[k] = new F();\n                  this[k].init(this);\n                }\n              }\n            };\n\n            Strophe.Connection.prototype = {\n              /** Function: reset\n               *  Reset the connection.\n               *\n               *  This function should be called after a connection is disconnected\n               *  before that connection is reused.\n               */\n              reset: function reset() {\n                this._proto._reset(); // SASL\n\n\n                this.do_session = false;\n                this.do_bind = false; // handler lists\n\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.restored = false;\n                this._data = [];\n                this._requests = [];\n                this._uniqueId = 0;\n              },\n\n              /** Function: pause\n               *  Pause the request manager.\n               *\n               *  This will prevent Strophe from sending any more requests to the\n               *  server.  This is very useful for temporarily pausing\n               *  BOSH-Connections while a lot of send() calls are happening quickly.\n               *  This causes Strophe to send the data in a single request, saving\n               *  many request trips.\n               */\n              pause: function pause() {\n                this.paused = true;\n              },\n\n              /** Function: resume\n               *  Resume the request manager.\n               *\n               *  This resumes after pause() has been called.\n               */\n              resume: function resume() {\n                this.paused = false;\n              },\n\n              /** Function: getUniqueId\n               *  Generate a unique ID for use in <iq/> elements.\n               *\n               *  All <iq/> stanzas are required to have unique id attributes.  This\n               *  function makes creating these easy.  Each connection instance has\n               *  a counter which starts from zero, and the value of this counter\n               *  plus a colon followed by the suffix becomes the unique id. If no\n               *  suffix is supplied, the counter is used as the unique id.\n               *\n               *  Suffixes are used to make debugging easier when reading the stream\n               *  data, and their use is recommended.  The counter resets to 0 for\n               *  every new connection for the same reason.  For connections to the\n               *  same server that authenticate the same way, all the ids should be\n               *  the same, which makes it easy to see changes.  This is useful for\n               *  automated testing as well.\n               *\n               *  Parameters:\n               *    (String) suffix - A optional suffix to append to the id.\n               *\n               *  Returns:\n               *    A unique string to be used for the id attribute.\n               */\n              getUniqueId: function getUniqueId(suffix) {\n                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  var r = Math.random() * 16 | 0,\n                      v = c === 'x' ? r : r & 0x3 | 0x8;\n                  return v.toString(16);\n                });\n\n                if (typeof suffix === \"string\" || typeof suffix === \"number\") {\n                  return uuid + \":\" + suffix;\n                } else {\n                  return uuid + \"\";\n                }\n              },\n\n              /** Function: addProtocolErrorHandler\n               *  Register a handler function for when a protocol (websocker or HTTP)\n               *  error occurs.\n               *\n               *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n               *  Patches that handle websocket errors would be very welcome.\n               *\n               *  Parameters:\n               *    (String) protocol - 'HTTP' or 'websocket'\n               *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n               *    (Function) callback - Function that will fire on Http error\n               *\n               *  Example:\n               *  function onError(err_code){\n               *    //do stuff\n               *  }\n               *\n               *  let conn = Strophe.connect('http://example.com/http-bind');\n               *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n               *  // Triggers HTTP 500 error and onError handler will be called\n               *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n               */\n              addProtocolErrorHandler: function addProtocolErrorHandler(protocol, status_code, callback) {\n                this.protocolErrorHandlers[protocol][status_code] = callback;\n              },\n\n              /** Function: connect\n               *  Starts the connection process.\n               *\n               *  As the connection process proceeds, the user supplied callback will\n               *  be triggered multiple times with status updates.  The callback\n               *  should take two arguments - the status code and the error condition.\n               *\n               *  The status code will be one of the values in the Strophe.Status\n               *  constants.  The error condition will be one of the conditions\n               *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n               *\n               *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n               *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n               *  of the optional parameters.\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID,\n               *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n               *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n               *      process the provided password value as an access token).\n               *    (String) pass - The user's password.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (String) route - The optional route value.\n               *    (String) authcid - The optional alternative authentication identity\n               *      (username) if intending to impersonate another user.\n               *      When using the SASL-EXTERNAL authentication mechanism, for example\n               *      with client certificates, then the authcid value is used to\n               *      determine whether an authorization JID (authzid) should be sent to\n               *      the server. The authzid should not be sent to the server if the\n               *      authzid and authcid are the same. So to prevent it from being sent\n               *      (for example when the JID is already contained in the client\n               *      certificate), set authcid to that same JID. See XEP-178 for more\n               *      details.\n               */\n              connect: function connect(jid, pass, callback, wait, hold, route, authcid) {\n                this.jid = jid;\n                /** Variable: authzid\n                 *  Authorization identity.\n                 */\n\n                this.authzid = Strophe.getBareJidFromJid(this.jid);\n                /** Variable: authcid\n                 *  Authentication identity (User name).\n                 */\n\n                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n                /** Variable: pass\n                 *  Authentication identity (User password).\n                 */\n\n                this.pass = pass;\n                /** Variable: servtype\n                 *  Digest MD5 compatibility.\n                 */\n\n                this.servtype = \"xmpp\";\n                this.connect_callback = callback;\n                this.disconnecting = false;\n                this.connected = false;\n                this.authenticated = false;\n                this.restored = false; // parse jid for domain\n\n                this.domain = Strophe.getDomainFromJid(this.jid);\n\n                this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n                this._proto._connect(wait, hold, route);\n              },\n\n              /** Function: attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              attach: function attach(jid, sid, rid, callback, wait, hold, wind) {\n                if (this._proto instanceof Strophe.Bosh) {\n                  this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** Function: restore\n               *  Attempt to restore a cached BOSH session.\n               *\n               *  This function is only useful in conjunction with providing the\n               *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n               *\n               *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n               *  RID (Request ID) and SID (Session ID) and then when this function is\n               *  called, it will attempt to restore the session from those cached\n               *  tokens.\n               *\n               *  This function must therefore be called instead of connect or attach.\n               *\n               *  For an example on how to use it, please see examples/restore.js\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              restore: function restore(jid, callback, wait, hold, wind) {\n                if (this._sessionCachingSupported()) {\n                  this._proto._restore(jid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _sessionCachingSupported\n               * Checks whether sessionStorage and JSON are supported and whether we're\n               * using BOSH.\n               */\n              _sessionCachingSupported: function _sessionCachingSupported() {\n                if (this._proto instanceof Strophe.Bosh) {\n                  if (!JSON) {\n                    return false;\n                  }\n\n                  try {\n                    sessionStorage.setItem('_strophe_', '_strophe_');\n                    sessionStorage.removeItem('_strophe_');\n                  } catch (e) {\n                    return false;\n                  }\n\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** Function: xmlInput\n               *  User overrideable function that receives XML data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlInput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data received by the connection.\n               */\n              xmlInput: function xmlInput(elem) {\n                return;\n              },\n\n              /** Function: xmlOutput\n               *  User overrideable function that receives XML data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlOutput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XMLdata sent by the connection.\n               */\n              xmlOutput: function xmlOutput(elem) {\n                return;\n              },\n\n              /** Function: rawInput\n               *  User overrideable function that receives raw data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawInput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data received by the connection.\n               */\n              rawInput: function rawInput(data) {\n                return;\n              },\n\n              /** Function: rawOutput\n               *  User overrideable function that receives raw data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawOutput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data sent by the connection.\n               */\n              rawOutput: function rawOutput(data) {\n                return;\n              },\n\n              /** Function: nextValidRid\n               *  User overrideable function that receives the new valid rid.\n               *\n               *  The default function does nothing. User code can override this with\n               *  > Strophe.Connection.nextValidRid = function (rid) {\n               *  >    (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (Number) rid - The next valid rid\n               */\n              nextValidRid: function nextValidRid(rid) {\n                return;\n              },\n\n              /** Function: send\n               *  Send a stanza.\n               *\n               *  This function is called to push data onto the send queue to\n               *  go out over the wire.  Whenever a request is sent to the BOSH\n               *  server, all pending data is sent and the queue is flushed.\n               *\n               *  Parameters:\n               *    (XMLElement |\n               *     [XMLElement] |\n               *     Strophe.Builder) elem - The stanza to send.\n               */\n              send: function send(elem) {\n                if (elem === null) {\n                  return;\n                }\n\n                if (typeof elem.sort === \"function\") {\n                  for (var i = 0; i < elem.length; i++) {\n                    this._queueData(elem[i]);\n                  }\n                } else if (typeof elem.tree === \"function\") {\n                  this._queueData(elem.tree());\n                } else {\n                  this._queueData(elem);\n                }\n\n                this._proto._send();\n              },\n\n              /** Function: flush\n               *  Immediately send any pending outgoing data.\n               *\n               *  Normally send() queues outgoing data until the next idle period\n               *  (100ms), which optimizes network use in the common cases when\n               *  several send()s are called in succession. flush() can be used to\n               *  immediately send all pending data.\n               */\n              flush: function flush() {\n                // cancel the pending idle period and run the idle function\n                // immediately\n                clearTimeout(this._idleTimeout);\n\n                this._onIdle();\n              },\n\n              /** Function: sendPresence\n               *  Helper function to send presence stanzas. The main benefit is for\n               *  sending presence stanzas for which you expect a responding presence\n               *  stanza with the same id (for example when leaving a chat room).\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the presence.\n               */\n              sendPresence: function sendPresence(elem, callback, errback, timeout) {\n                var _this3 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendPresence\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this3.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    if (stanza.getAttribute('type') === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else if (callback) {\n                      callback(stanza);\n                    }\n                  }, null, 'presence', null, id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this3.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** Function: sendIQ\n               *  Helper function to send IQ stanzas.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the IQ.\n              */\n              sendIQ: function sendIQ(elem, callback, errback, timeout) {\n                var _this4 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendIQ\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this4.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    var iqtype = stanza.getAttribute('type');\n\n                    if (iqtype === 'result') {\n                      if (callback) {\n                        callback(stanza);\n                      }\n                    } else if (iqtype === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else {\n                      var error = new Error(\"Got bad IQ type of \".concat(iqtype));\n                      error.name = \"StropheError\";\n                      throw error;\n                    }\n                  }, null, 'iq', ['error', 'result'], id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this4.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** PrivateFunction: _queueData\n               *  Queue outgoing data for later sending.  Also ensures that the data\n               *  is a DOMElement.\n               */\n              _queueData: function _queueData(element) {\n                if (element === null || !element.tagName || !element.childNodes) {\n                  var error = new Error(\"Cannot queue non-DOMElement.\");\n                  error.name = \"StropheError\";\n                  throw error;\n                }\n\n                this._data.push(element);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                var _this5 = this;\n\n                this._data.push(\"restart\");\n\n                this._proto._sendRestart();\n\n                this._idleTimeout = setTimeout(function () {\n                  return _this5._onIdle();\n                }, 100);\n              },\n\n              /** Function: addTimedHandler\n               *  Add a timed handler to the connection.\n               *\n               *  This function adds a timed handler.  The provided handler will\n               *  be called every period milliseconds until it returns false,\n               *  the connection is terminated, or the handler is removed.  Handlers\n               *  that wish to continue being invoked should return true.\n               *\n               *  Because of method binding it is necessary to save the result of\n               *  this function if you wish to remove a handler with\n               *  deleteTimedHandler().\n               *\n               *  Note that user handlers are not active until authentication is\n               *  successful.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addTimedHandler: function addTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** Function: deleteTimedHandler\n               *  Delete a timed handler for a connection.\n               *\n               *  This function removes a timed handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addTimedHandler(),\n               *  but is the reference returned from addTimedHandler().\n               *\n               *  Parameters:\n               *    (Strophe.TimedHandler) handRef - The handler reference.\n               */\n              deleteTimedHandler: function deleteTimedHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeTimeds.push(handRef);\n              },\n\n              /** Function: addHandler\n               *  Add a stanza handler for the connection.\n               *\n               *  This function adds a stanza handler to the connection.  The\n               *  handler callback will be called for any stanza that matches\n               *  the parameters.  Note that if multiple parameters are supplied,\n               *  they must all match for the handler to be invoked.\n               *\n               *  The handler will receive the stanza that triggered it as its argument.\n               *  *The handler should return true if it is to be invoked again;\n               *  returning false will remove the handler after it returns.*\n               *\n               *  As a convenience, the ns parameters applies to the top level element\n               *  and also any of its immediate children.  This is primarily to make\n               *  matching /iq/query elements easy.\n               *\n               *  Options\n               *  ~~~~~~~\n               *  With the options argument, you can specify boolean flags that affect how\n               *  matches are being done.\n               *\n               *  Currently two flags exist:\n               *\n               *  - matchBareFromJid:\n               *      When set to true, the from parameter and the\n               *      from attribute on the stanza will be matched as bare JIDs instead\n               *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n               *      value of options. The default value for matchBareFromJid is false.\n               *\n               *  - ignoreNamespaceFragment:\n               *      When set to true, a fragment specified on the stanza's namespace\n               *      URL will be ignored when it's matched with the one configured for\n               *      the handler.\n               *\n               *      This means that if you register like this:\n               *      >   connection.addHandler(\n               *      >       handler,\n               *      >       'http://jabber.org/protocol/muc',\n               *      >       null, null, null, null,\n               *      >       {'ignoreNamespaceFragment': true}\n               *      >   );\n               *\n               *      Then a stanza with XML namespace of\n               *      'http://jabber.org/protocol/muc#user' will also be matched. If\n               *      'ignoreNamespaceFragment' is false, then only stanzas with\n               *      'http://jabber.org/protocol/muc' will be matched.\n               *\n               *  Deleting the handler\n               *  ~~~~~~~~~~~~~~~~~~~~\n               *  The return value should be saved if you wish to remove the handler\n               *  with deleteHandler().\n               *\n               *  Parameters:\n               *    (Function) handler - The user callback.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String|Array) type - The stanza type (or types if an array) to match.\n               *    (String) id - The stanza id attribute to match.\n               *    (String) from - The stanza from attribute to match.\n               *    (String) options - The handler options\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addHandler: function addHandler(handler, ns, name, type, id, from, options) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** Function: deleteHandler\n               *  Delete a stanza handler for a connection.\n               *\n               *  This function removes a stanza handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addHandler(),\n               *  but is the reference returned from addHandler().\n               *\n               *  Parameters:\n               *    (Strophe.Handler) handRef - The handler reference.\n               */\n              deleteHandler: function deleteHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeHandlers.push(handRef); // If a handler is being deleted while it is being added,\n                // prevent it from getting added\n\n                var i = this.addHandlers.indexOf(handRef);\n\n                if (i >= 0) {\n                  this.addHandlers.splice(i, 1);\n                }\n              },\n\n              /** Function: registerSASLMechanisms\n               *\n               * Register the SASL mechanisms which will be supported by this instance of\n               * Strophe.Connection (i.e. which this XMPP client will support).\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n               *\n               */\n              registerSASLMechanisms: function registerSASLMechanisms(mechanisms) {\n                this.mechanisms = {};\n                mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLMD5, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1];\n                mechanisms.forEach(this.registerSASLMechanism.bind(this));\n              },\n\n              /** Function: registerSASLMechanism\n               *\n               * Register a single SASL mechanism, to be supported by this client.\n               *\n               *  Parameters:\n               *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n               *\n               */\n              registerSASLMechanism: function registerSASLMechanism(mechanism) {\n                this.mechanisms[mechanism.prototype.name] = mechanism;\n              },\n\n              /** Function: disconnect\n               *  Start the graceful disconnection process.\n               *\n               *  This function starts the disconnection process.  This process starts\n               *  by sending unavailable presence and sending BOSH body of type\n               *  terminate.  A timeout handler makes sure that disconnection happens\n               *  even if the BOSH server does not respond.\n               *  If the Connection object isn't connected, at least tries to abort all pending requests\n               *  so the connection object won't generate successful requests (which were already opened).\n               *\n               *  The user supplied connection callback will be notified of the\n               *  progress as this process happens.\n               *\n               *  Parameters:\n               *    (String) reason - The reason the disconnect is occuring.\n               */\n              disconnect: function disconnect(reason) {\n                this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n                Strophe.warn(\"Disconnect was called because: \" + reason);\n\n                if (this.connected) {\n                  var pres = false;\n                  this.disconnecting = true;\n\n                  if (this.authenticated) {\n                    pres = $pres({\n                      'xmlns': Strophe.NS.CLIENT,\n                      'type': 'unavailable'\n                    });\n                  } // setup timeout handler\n\n\n                  this._disconnectTimeout = this._addSysTimedHandler(3000, this._onDisconnectTimeout.bind(this));\n\n                  this._proto._disconnect(pres);\n                } else {\n                  Strophe.warn(\"Disconnect was called before Strophe connected to the server\");\n\n                  this._proto._abortAllRequests();\n\n                  this._doDisconnect();\n                }\n              },\n\n              /** PrivateFunction: _changeConnectStatus\n               *  _Private_ helper function that makes sure plugins and the user's\n               *  callback are notified of connection status changes.\n               *\n               *  Parameters:\n               *    (Integer) status - the new connection status, one of the values\n               *      in Strophe.Status\n               *    (String) condition - the error condition or null\n               *    (XMLElement) elem - The triggering stanza.\n               */\n              _changeConnectStatus: function _changeConnectStatus(status, condition, elem) {\n                // notify all plugins listening for status changes\n                for (var k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    var plugin = this[k];\n\n                    if (plugin.statusChanged) {\n                      try {\n                        plugin.statusChanged(status, condition);\n                      } catch (err) {\n                        Strophe.error(\"\".concat(k, \" plugin caused an exception changing status: \").concat(err));\n                      }\n                    }\n                  }\n                } // notify the user's callback\n\n\n                if (this.connect_callback) {\n                  try {\n                    this.connect_callback(status, condition, elem);\n                  } catch (e) {\n                    Strophe._handleError(e);\n\n                    Strophe.error(\"User connection callback caused an exception: \".concat(e));\n                  }\n                }\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  This is the last piece of the disconnection logic.  This resets the\n               *  connection and alerts the user's connection callback.\n               */\n              _doDisconnect: function _doDisconnect(condition) {\n                if (typeof this._idleTimeout === \"number\") {\n                  clearTimeout(this._idleTimeout);\n                } // Cancel Disconnect Timeout\n\n\n                if (this._disconnectTimeout !== null) {\n                  this.deleteTimedHandler(this._disconnectTimeout);\n                  this._disconnectTimeout = null;\n                }\n\n                Strophe.debug(\"_doDisconnect was called\");\n\n                this._proto._doDisconnect();\n\n                this.authenticated = false;\n                this.disconnecting = false;\n                this.restored = false; // delete handlers\n\n                this.handlers = [];\n                this.timedHandlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = []; // tell the parent we disconnected\n\n                this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\n                this.connected = false;\n              },\n\n              /** PrivateFunction: _dataRecv\n               *  _Private_ handler to processes incoming data from the the connection.\n               *\n               *  Except for _connect_cb handling the initial connection request,\n               *  this function handles the incoming data for all requests.  This\n               *  function also fires stanza handlers that match each incoming\n               *  stanza.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that has data ready.\n               *    (string) req - The stanza a raw string (optiona).\n               */\n              _dataRecv: function _dataRecv(req, raw) {\n                var _this6 = this;\n\n                Strophe.debug(\"_dataRecv called\");\n\n                var elem = this._proto._reqToData(req);\n\n                if (elem === null) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                    this.xmlInput(elem.childNodes[0]);\n                  } else {\n                    this.xmlInput(elem);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(elem));\n                  }\n                } // remove handlers scheduled for deletion\n\n\n                while (this.removeHandlers.length > 0) {\n                  var hand = this.removeHandlers.pop();\n                  var i = this.handlers.indexOf(hand);\n\n                  if (i >= 0) {\n                    this.handlers.splice(i, 1);\n                  }\n                } // add handlers scheduled for addition\n\n\n                while (this.addHandlers.length > 0) {\n                  this.handlers.push(this.addHandlers.pop());\n                } // handle graceful disconnect\n\n\n                if (this.disconnecting && this._proto._emptyQueue()) {\n                  this._doDisconnect();\n\n                  return;\n                }\n\n                var type = elem.getAttribute(\"type\");\n\n                if (type !== null && type === \"terminate\") {\n                  // Don't process stanzas that come in after disconnect\n                  if (this.disconnecting) {\n                    return;\n                  } // an error occurred\n\n\n                  var cond = elem.getAttribute(\"condition\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n                  } else {\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n                  }\n\n                  this._doDisconnect(cond);\n\n                  return;\n                } // send each incoming stanza through the handler chain\n\n\n                Strophe.forEachChild(elem, null, function (child) {\n                  // process handlers\n                  var newList = _this6.handlers;\n                  _this6.handlers = [];\n\n                  for (var _i5 = 0; _i5 < newList.length; _i5++) {\n                    var _hand = newList[_i5]; // encapsulate 'handler.run' not to lose the whole handler list if\n                    // one of the handlers throws an exception\n\n                    try {\n                      if (_hand.isMatch(child) && (_this6.authenticated || !_hand.user)) {\n                        if (_hand.run(child)) {\n                          _this6.handlers.push(_hand);\n                        }\n                      } else {\n                        _this6.handlers.push(_hand);\n                      }\n                    } catch (e) {\n                      // if the handler throws an exception, we consider it as false\n                      Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n                    }\n                  }\n                });\n              },\n\n              /** Attribute: mechanisms\n               *  SASL Mechanisms available for Connection.\n               */\n              mechanisms: {},\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the initial connection request\n               *  response from the BOSH server. It is used to set up authentication\n               *  handlers and start the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The current request.\n               *    (Function) _callback - low level (xmpp) connect callback function.\n               *      Useful for plugins with their own xmpp connect callback (when they\n               *      want to do something special).\n               */\n              _connect_cb: function _connect_cb(req, _callback, raw) {\n                Strophe.debug(\"_connect_cb was called\");\n                this.connected = true;\n                var bodyWrap;\n\n                try {\n                  bodyWrap = this._proto._reqToData(req);\n                } catch (e) {\n                  if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n                    throw e;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n\n                  this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n                }\n\n                if (!bodyWrap) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                    this.xmlInput(bodyWrap.childNodes[0]);\n                  } else {\n                    this.xmlInput(bodyWrap);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(bodyWrap));\n                  }\n                }\n\n                var conncheck = this._proto._connect_cb(bodyWrap);\n\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                  return;\n                } // Check for the stream:features tag\n\n\n                var hasFeatures;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n                } else {\n                  hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n                }\n\n                if (!hasFeatures) {\n                  this._proto._no_auth_received(_callback);\n\n                  return;\n                }\n\n                var matched = [];\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\n                if (mechanisms.length > 0) {\n                  for (var i = 0; i < mechanisms.length; i++) {\n                    var mech = Strophe.getText(mechanisms[i]);\n                    if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n                  }\n                }\n\n                if (matched.length === 0) {\n                  if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                    // There are no matching SASL mechanisms and also no legacy\n                    // auth available.\n                    this._proto._no_auth_received(_callback);\n\n                    return;\n                  }\n                }\n\n                if (this.do_authentication !== false) {\n                  this.authenticate(matched);\n                }\n              },\n\n              /** Function: sortMechanismsByPriority\n               *\n               *  Sorts an array of objects with prototype SASLMechanism according to\n               *  their priorities.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               */\n              sortMechanismsByPriority: function sortMechanismsByPriority(mechanisms) {\n                // Sorting mechanisms according to priority.\n                for (var i = 0; i < mechanisms.length - 1; ++i) {\n                  var higher = i;\n\n                  for (var j = i + 1; j < mechanisms.length; ++j) {\n                    if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                      higher = j;\n                    }\n                  }\n\n                  if (higher !== i) {\n                    var swap = mechanisms[i];\n                    mechanisms[i] = mechanisms[higher];\n                    mechanisms[higher] = swap;\n                  }\n                }\n\n                return mechanisms;\n              },\n\n              /** Function: authenticate\n               * Set up authentication\n               *\n               *  Continues the initial connection request by setting up authentication\n               *  handlers and starting the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Array) matched - Array of SASL mechanisms supported.\n               *\n               */\n              authenticate: function authenticate(matched) {\n                if (!this._attemptSASLAuth(matched)) {\n                  this._attemptLegacyAuth();\n                }\n              },\n\n              /** PrivateFunction: _attemptSASLAuth\n               *\n               *  Iterate through an array of SASL mechanisms and attempt authentication\n               *  with the highest priority (enabled) mechanism.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               *  Returns:\n               *    (Boolean) mechanism_found - true or false, depending on whether a\n               *          valid SASL mechanism was found with which authentication could be\n               *          started.\n               */\n              _attemptSASLAuth: function _attemptSASLAuth(mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                var mechanism_found = false;\n\n                for (var i = 0; i < mechanisms.length; ++i) {\n                  if (!mechanisms[i].prototype.test(this)) {\n                    continue;\n                  }\n\n                  this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, \"success\", null, null);\n                  this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, \"failure\", null, null);\n                  this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, \"challenge\", null, null);\n                  this._sasl_mechanism = new mechanisms[i]();\n\n                  this._sasl_mechanism.onStart(this);\n\n                  var request_auth_exchange = $build(\"auth\", {\n                    'xmlns': Strophe.NS.SASL,\n                    'mechanism': this._sasl_mechanism.name\n                  });\n\n                  if (this._sasl_mechanism.isClientFirst) {\n                    var response = this._sasl_mechanism.onChallenge(this, null);\n\n                    request_auth_exchange.t(btoa(response));\n                  }\n\n                  this.send(request_auth_exchange.tree());\n                  mechanism_found = true;\n                  break;\n                }\n\n                return mechanism_found;\n              },\n\n              /** PrivateFunction: _sasl_challenge_cb\n               *  _Private_ handler for the SASL challenge\n               *\n               */\n              _sasl_challenge_cb: function _sasl_challenge_cb(elem) {\n                var challenge = atob(Strophe.getText(elem));\n\n                var response = this._sasl_mechanism.onChallenge(this, challenge);\n\n                var stanza = $build('response', {\n                  'xmlns': Strophe.NS.SASL\n                });\n\n                if (response !== \"\") {\n                  stanza.t(btoa(response));\n                }\n\n                this.send(stanza.tree());\n                return true;\n              },\n\n              /** PrivateFunction: _attemptLegacyAuth\n               *\n               *  Attempt legacy (i.e. non-SASL) authentication.\n               */\n              _attemptLegacyAuth: function _attemptLegacyAuth() {\n                if (Strophe.getNodeFromJid(this.jid) === null) {\n                  // we don't have a node, which is required for non-anonymous\n                  // client connections\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n\n                  this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n                } else {\n                  // Fall back to legacy authentication\n                  this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\n                  this._addSysHandler(this._onLegacyAuthIQResult.bind(this), null, null, null, \"_auth_1\");\n\n                  this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                  }).c(\"query\", {\n                    xmlns: Strophe.NS.AUTH\n                  }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n                }\n              },\n\n              /** PrivateFunction: _onLegacyAuthIQResult\n               *  _Private_ handler for legacy authentication.\n               *\n               *  This handler is called in response to the initial <iq type='get'/>\n               *  for legacy authentication.  It builds an authentication <iq/> and\n               *  sends it, creating a handler (calling back to _auth2_cb()) to\n               *  handle the result\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onLegacyAuthIQResult: function _onLegacyAuthIQResult(elem) {\n                // build plaintext auth iq\n                var iq = $iq({\n                  type: \"set\",\n                  id: \"_auth_2\"\n                }).c('query', {\n                  xmlns: Strophe.NS.AUTH\n                }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n\n                if (!Strophe.getResourceFromJid(this.jid)) {\n                  // since the user has not supplied a resource, we pick\n                  // a default one here.  unlike other auth methods, the server\n                  // cannot do this for us.\n                  this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n                }\n\n                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n                this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n\n                this.send(iq.tree());\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_success_cb\n               *  _Private_ handler for succesful SASL authentication.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_success_cb: function _sasl_success_cb(elem) {\n                var _this7 = this;\n\n                if (this._sasl_data[\"server-signature\"]) {\n                  var serverSignature;\n                  var success = atob(Strophe.getText(elem));\n                  var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n                  var matches = success.match(attribMatch);\n\n                  if (matches[1] === \"v\") {\n                    serverSignature = matches[2];\n                  }\n\n                  if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n                    // remove old handlers\n                    this.deleteHandler(this._sasl_failure_handler);\n                    this._sasl_failure_handler = null;\n\n                    if (this._sasl_challenge_handler) {\n                      this.deleteHandler(this._sasl_challenge_handler);\n                      this._sasl_challenge_handler = null;\n                    }\n\n                    this._sasl_data = {};\n                    return this._sasl_failure_cb(null);\n                  }\n                }\n\n                Strophe.info(\"SASL authentication succeeded.\");\n\n                if (this._sasl_mechanism) {\n                  this._sasl_mechanism.onSuccess();\n                } // remove old handlers\n\n\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                var streamfeature_handlers = [];\n\n                var wrapper = function wrapper(handlers, elem) {\n                  while (handlers.length) {\n                    _this7.deleteHandler(handlers.pop());\n                  }\n\n                  _this7._onStreamFeaturesAfterSASL(elem);\n\n                  return false;\n                };\n\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, null, \"stream:features\", null, null));\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, Strophe.NS.STREAM, \"features\", null, null)); // we must send an xmpp:restart now\n\n                this._sendRestart();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onStreamFeaturesAfterSASL\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onStreamFeaturesAfterSASL: function _onStreamFeaturesAfterSASL(elem) {\n                // save stream:features for future usage\n                this.features = elem;\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var child = elem.childNodes[i];\n\n                  if (child.nodeName === 'bind') {\n                    this.do_bind = true;\n                  }\n\n                  if (child.nodeName === 'session') {\n                    this.do_session = true;\n                  }\n                }\n\n                if (!this.do_bind) {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\n                  return false;\n                } else if (!this.options.explicitResourceBinding) {\n                  this.bind();\n                } else {\n                  this._changeConnectStatus(Strophe.Status.BINDREQUIRED, null);\n                }\n\n                return false;\n              },\n\n              /** Function: bind\n               *\n               *  Sends an IQ to the XMPP server to bind a JID resource for this session.\n               *\n               *  https://tools.ietf.org/html/rfc6120#section-7.5\n               *\n               *  If `explicitResourceBinding` was set to a truthy value in the options\n               *  passed to the Strophe.Connection constructor, then this function needs\n               *  to be called explicitly by the client author.\n               *\n               *  Otherwise it'll be called automatically as soon as the XMPP server\n               *  advertises the \"urn:ietf:params:xml:ns:xmpp-bind\" stream feature.\n               */\n              bind: function bind() {\n                if (!this.do_bind) {\n                  Strophe.log(Strophe.LogLevel.INFO, \"Strophe.Connection.prototype.bind called but \\\"do_bind\\\" is false\");\n                  return;\n                }\n\n                this._addSysHandler(this._onResourceBindResultIQ.bind(this), null, null, null, \"_bind_auth_2\");\n\n                var resource = Strophe.getResourceFromJid(this.jid);\n\n                if (resource) {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).c('resource', {}).t(resource).tree());\n                } else {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).tree());\n                }\n              },\n\n              /** PrivateFunction: _onResourceBindIQ\n               *  _Private_ handler for binding result and session start.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onResourceBindResultIQ: function _onResourceBindResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Resource binding failed.\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n                  var condition;\n\n                  if (conflict.length > 0) {\n                    condition = Strophe.ErrorCondition.CONFLICT;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n\n                  return false;\n                } // TODO - need to grab errors\n\n\n                var bind = elem.getElementsByTagName(\"bind\");\n\n                if (bind.length > 0) {\n                  var jidNode = bind[0].getElementsByTagName(\"jid\");\n\n                  if (jidNode.length > 0) {\n                    this.jid = Strophe.getText(jidNode[0]);\n\n                    if (this.do_session) {\n                      this._establishSession();\n                    } else {\n                      this.authenticated = true;\n\n                      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                    }\n                  }\n                } else {\n                  Strophe.warn(\"Resource binding failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n              },\n\n              /** PrivateFunction: _establishSession\n               *  Send IQ request to establish a session with the XMPP server.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               */\n              _establishSession: function _establishSession() {\n                if (!this.do_session) {\n                  throw new Error(\"Strophe.Connection.prototype._establishSession \" + \"called but apparently \".concat(Strophe.NS.SESSION, \" wasn't advertised by the server\"));\n                }\n\n                this._addSysHandler(this._onSessionResultIQ.bind(this), null, null, null, \"_session_auth_2\");\n\n                this.send($iq({\n                  type: \"set\",\n                  id: \"_session_auth_2\"\n                }).c('session', {\n                  xmlns: Strophe.NS.SESSION\n                }).tree());\n              },\n\n              /** PrivateFunction: _onSessionResultIQ\n               *  _Private_ handler for the server's IQ response to a client's session\n               *  request.\n               *\n               *  This sets Connection.authenticated to true on success, which\n               *  starts the processing of user handlers.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onSessionResultIQ: function _onSessionResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Session creation failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_failure_cb\n               *  _Private_ handler for SASL authentication failure.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_failure_cb: function _sasl_failure_cb(elem) {\n                // delete unneeded handlers\n                if (this._sasl_success_handler) {\n                  this.deleteHandler(this._sasl_success_handler);\n                  this._sasl_success_handler = null;\n                }\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n\n                this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                return false;\n              },\n\n              /** PrivateFunction: _auth2_cb\n               *  _Private_ handler to finish legacy authentication.\n               *\n               *  This handler is called when the result from the jabber:iq:auth\n               *  <iq/> stanza is returned.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _auth2_cb: function _auth2_cb(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  this.disconnect('authentication failed');\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _addSysTimedHandler\n               *  _Private_ function to add a system level timed handler.\n               *\n               *  This function is used to add a Strophe.TimedHandler for the\n               *  library code.  System timed handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               */\n              _addSysTimedHandler: function _addSysTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                thand.user = false;\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** PrivateFunction: _addSysHandler\n               *  _Private_ function to add a system level stanza handler.\n               *\n               *  This function is used to add a Strophe.Handler for the\n               *  library code.  System stanza handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Function) handler - The callback function.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String) type - The stanza type attribute to match.\n               *    (String) id - The stanza id attribute to match.\n               */\n              _addSysHandler: function _addSysHandler(handler, ns, name, type, id) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id);\n                hand.user = false;\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  If the graceful disconnect process does not complete within the\n               *  time allotted, this handler finishes the disconnect anyway.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                Strophe.debug(\"_onDisconnectTimeout was called\");\n\n                this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\n                this._proto._onDisconnectTimeout(); // actually disconnect\n\n\n                this._doDisconnect();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler to process events during idle cycle.\n               *\n               *  This handler is called every 100ms to fire timed handlers that\n               *  are ready and keep poll requests going.\n               */\n              _onIdle: function _onIdle() {\n                var _this8 = this;\n\n                // add timed handlers scheduled for addition\n                // NOTE: we add before remove in the case a timed handler is\n                // added and then deleted before the next _onIdle() call.\n                while (this.addTimeds.length > 0) {\n                  this.timedHandlers.push(this.addTimeds.pop());\n                } // remove timed handlers that have been scheduled for deletion\n\n\n                while (this.removeTimeds.length > 0) {\n                  var thand = this.removeTimeds.pop();\n                  var i = this.timedHandlers.indexOf(thand);\n\n                  if (i >= 0) {\n                    this.timedHandlers.splice(i, 1);\n                  }\n                } // call ready timed handlers\n\n\n                var now = new Date().getTime();\n                var newList = [];\n\n                for (var _i6 = 0; _i6 < this.timedHandlers.length; _i6++) {\n                  var _thand = this.timedHandlers[_i6];\n\n                  if (this.authenticated || !_thand.user) {\n                    var since = _thand.lastCalled + _thand.period;\n\n                    if (since - now <= 0) {\n                      if (_thand.run()) {\n                        newList.push(_thand);\n                      }\n                    } else {\n                      newList.push(_thand);\n                    }\n                  }\n                }\n\n                this.timedHandlers = newList;\n                clearTimeout(this._idleTimeout);\n\n                this._proto._onIdle(); // reactivate the timer only if connected\n\n\n                if (this.connected) {\n                  this._idleTimeout = setTimeout(function () {\n                    return _this8._onIdle();\n                  }, 100);\n                }\n              }\n            };\n            /** Class: Strophe.SASLMechanism\n             *\n             *  encapsulates SASL authentication mechanisms.\n             *\n             *  User code may override the priority for each mechanism or disable it completely.\n             *  See <priority> for information about changing priority and <test> for informatian on\n             *  how to disable a mechanism.\n             *\n             *  By default, all mechanisms are enabled and the priorities are\n             *\n             *      OAUTHBEARER - 60\n             *      SCRAM-SHA1 - 50\n             *      DIGEST-MD5 - 40\n             *      PLAIN - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  See: Strophe.Connection.addSupportedSASLMechanisms\n             */\n\n            /**\n             * PrivateConstructor: Strophe.SASLMechanism\n             * SASL auth mechanism abstraction.\n             *\n             *  Parameters:\n             *    (String) name - SASL Mechanism name.\n             *    (Boolean) isClientFirst - If client should send response first without challenge.\n             *    (Number) priority - Priority.\n             *\n             *  Returns:\n             *    A new Strophe.SASLMechanism object.\n             */\n\n            Strophe.SASLMechanism = function (name, isClientFirst, priority) {\n              /** PrivateVariable: name\n               *  Mechanism name.\n               */\n              this.name = name;\n              /** PrivateVariable: isClientFirst\n               *  If client sends response without initial server challenge.\n               */\n\n              this.isClientFirst = isClientFirst;\n              /** Variable: priority\n               *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n               *  Users may override this to prioritize mechanisms differently.\n               *\n               *  In the default configuration the priorities are\n               *\n               *  SCRAM-SHA1 - 40\n               *  DIGEST-MD5 - 30\n               *  Plain - 20\n               *\n               *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n               *\n               *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               */\n\n              this.priority = priority;\n            };\n\n            Strophe.SASLMechanism.prototype = {\n              /**\n               *  Function: test\n               *  Checks if mechanism able to run.\n               *  To disable a mechanism, make this return false;\n               *\n               *  To disable plain authentication run\n               *  > Strophe.SASLPlain.test = function() {\n               *  >   return false;\n               *  > }\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (Boolean) If mechanism was able to run.\n               */\n              test: function test(connection) {\n                return true;\n              },\n\n              /** PrivateFunction: onStart\n               *  Called before starting mechanism on some connection.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               */\n              onStart: function onStart(connection) {\n                this._connection = connection;\n              },\n\n              /** PrivateFunction: onChallenge\n               *  Called by protocol implementation on incoming challenge. If client is\n               *  first (isClientFirst === true) challenge will be null on the first call.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *    (String) challenge - current challenge to handle.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              onChallenge: function onChallenge(connection, challenge) {\n                throw new Error(\"You should implement challenge handling!\");\n              },\n\n              /** PrivateFunction: onFailure\n               *  Protocol informs mechanism implementation about SASL failure.\n               */\n              onFailure: function onFailure() {\n                this._connection = null;\n              },\n\n              /** PrivateFunction: onSuccess\n               *  Protocol informs mechanism implementation about SASL success.\n               */\n              onSuccess: function onSuccess() {\n                this._connection = null;\n              }\n            };\n            /** Constants: SASL mechanisms\n             *  Available authentication mechanisms\n             *\n             *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n             *  Strophe.SASLPlain - SASL PLAIN authentication.\n             *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n             *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n             *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n             *  Strophe.SASLExternal - SASL EXTERNAL authentication\n             *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n             */\n            // Building SASL callbacks\n\n            /** PrivateConstructor: SASLAnonymous\n             *  SASL ANONYMOUS authentication.\n             */\n\n            Strophe.SASLAnonymous = function () {};\n\n            Strophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\n            Strophe.SASLAnonymous.prototype.test = function (connection) {\n              return connection.authcid === null;\n            };\n            /** PrivateConstructor: SASLPlain\n             *  SASL PLAIN authentication.\n             */\n\n\n            Strophe.SASLPlain = function () {};\n\n            Strophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\n            Strophe.SASLPlain.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLPlain.prototype.onChallenge = function (connection) {\n              var auth_str = connection.authzid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.authcid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLSHA1\n             *  SASL SCRAM SHA 1 authentication.\n             */\n\n\n            Strophe.SASLSHA1 = function () {};\n\n            Strophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\n            Strophe.SASLSHA1.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n              auth_str += \",r=\";\n              auth_str += cnonce;\n              connection._sasl_data.cnonce = cnonce;\n              connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n              auth_str = \"n,,\" + auth_str;\n\n              this.onChallenge = function (connection, challenge) {\n                var nonce, salt, iter, Hi, U, U_old, i, k;\n                var responseText = \"c=biws,\";\n                var authMessage = \"\".concat(connection._sasl_data[\"client-first-message-bare\"], \",\").concat(challenge, \",\");\n                var cnonce = connection._sasl_data.cnonce;\n                var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n                while (challenge.match(attribMatch)) {\n                  var matches = challenge.match(attribMatch);\n                  challenge = challenge.replace(matches[0], \"\");\n\n                  switch (matches[1]) {\n                    case \"r\":\n                      nonce = matches[2];\n                      break;\n\n                    case \"s\":\n                      salt = matches[2];\n                      break;\n\n                    case \"i\":\n                      iter = matches[2];\n                      break;\n                  }\n                }\n\n                if (nonce.substr(0, cnonce.length) !== cnonce) {\n                  connection._sasl_data = {};\n                  return connection._sasl_failure_cb();\n                }\n\n                responseText += \"r=\" + nonce;\n                authMessage += responseText;\n                salt = atob(salt);\n                salt += \"\\x00\\x00\\x00\\x01\";\n                var pass = utils.utf16to8(connection.pass);\n                Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n\n                for (i = 1; i < iter; i++) {\n                  U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n\n                  for (k = 0; k < 5; k++) {\n                    Hi[k] ^= U[k];\n                  }\n\n                  U_old = U;\n                }\n\n                Hi = SHA1.binb2str(Hi);\n                var clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n                var serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n                var clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n                connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n                for (k = 0; k < 5; k++) {\n                  clientKey[k] ^= clientSignature[k];\n                }\n\n                responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n                return responseText;\n              };\n\n              return auth_str;\n            };\n            /** PrivateConstructor: SASLMD5\n             *  SASL DIGEST MD5 authentication.\n             */\n\n\n            Strophe.SASLMD5 = function () {};\n\n            Strophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\n            Strophe.SASLMD5.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n            /** PrivateFunction: _quote\n             *  _Private_ utility function to backslash escape and quote strings.\n             *\n             *  Parameters:\n             *    (String) str - The string to be quoted.\n             *\n             *  Returns:\n             *    quoted string\n             */\n\n\n            Strophe.SASLMD5.prototype._quote = function (str) {\n              return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"'; //\" end string workaround for emacs\n            };\n\n            Strophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var realm = \"\";\n              var host = null;\n              var nonce = \"\";\n              var qop = \"\";\n\n              while (challenge.match(attribMatch)) {\n                var matches = challenge.match(attribMatch);\n                challenge = challenge.replace(matches[0], \"\");\n                matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\n                switch (matches[1]) {\n                  case \"realm\":\n                    realm = matches[2];\n                    break;\n\n                  case \"nonce\":\n                    nonce = matches[2];\n                    break;\n\n                  case \"qop\":\n                    qop = matches[2];\n                    break;\n\n                  case \"host\":\n                    host = matches[2];\n                    break;\n                }\n              }\n\n              var digest_uri = connection.servtype + \"/\" + connection.domain;\n\n              if (host !== null) {\n                digest_uri = digest_uri + \"/\" + host;\n              }\n\n              var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n              var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n              var A2 = 'AUTHENTICATE:' + digest_uri;\n              var responseText = \"\";\n              responseText += 'charset=utf-8,';\n              responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n              responseText += 'realm=' + this._quote(realm) + ',';\n              responseText += 'nonce=' + this._quote(nonce) + ',';\n              responseText += 'nc=00000001,';\n              responseText += 'cnonce=' + this._quote(cnonce) + ',';\n              responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n              responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" + nonce + \":00000001:\" + cnonce + \":auth:\" + MD5.hexdigest(A2)) + \",\";\n              responseText += 'qop=auth';\n\n              this.onChallenge = function () {\n                return \"\";\n              };\n\n              return responseText;\n            };\n            /** PrivateConstructor: SASLOAuthBearer\n             *  SASL OAuth Bearer authentication.\n             */\n\n\n            Strophe.SASLOAuthBearer = function () {};\n\n            Strophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\n            Strophe.SASLOAuthBearer.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n              var auth_str = 'n,';\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + 'a=' + connection.authzid;\n              }\n\n              auth_str = auth_str + ',';\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + 'auth=Bearer ';\n              auth_str = auth_str + connection.pass;\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + \"\\x01\";\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLExternal\n             *  SASL EXTERNAL authentication.\n             *\n             *  The EXTERNAL mechanism allows a client to request the server to use\n             *  credentials established by means external to the mechanism to\n             *  authenticate the client. The external means may be, for instance,\n             *  TLS services.\n             */\n\n\n            Strophe.SASLExternal = function () {};\n\n            Strophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\n            Strophe.SASLExternal.prototype.onChallenge = function (connection) {\n              /** According to XEP-178, an authzid SHOULD NOT be presented when the\n               * authcid contained or implied in the client certificate is the JID (i.e.\n               * authzid) with which the user wants to log in as.\n               *\n               * To NOT send the authzid, the user should therefore set the authcid equal\n               * to the JID when instantiating a new Strophe.Connection object.\n               */\n              return connection.authcid === connection.authzid ? '' : connection.authzid;\n            };\n            /** PrivateConstructor: SASLXOAuth2\n             *  SASL X-OAuth2 authentication.\n             */\n\n\n            Strophe.SASLXOAuth2 = function () {};\n\n            Strophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\n            Strophe.SASLXOAuth2.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n              var auth_str = \"\\0\";\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + connection.authzid;\n              }\n\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            var core = {\n              'Strophe': Strophe,\n              '$build': $build,\n              '$iq': $iq,\n              '$msg': $msg,\n              '$pres': $pres,\n              'SHA1': SHA1,\n              'MD5': MD5,\n              'b64_hmac_sha1': SHA1.b64_hmac_sha1,\n              'b64_sha1': SHA1.b64_sha1,\n              'str_hmac_sha1': SHA1.str_hmac_sha1,\n              'str_sha1': SHA1.str_sha1\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$1 = core.Strophe;\n            var $build$1 = core.$build;\n            /** PrivateClass: Strophe.Request\n             *  _Private_ helper class that provides a cross implementation abstraction\n             *  for a BOSH related XMLHttpRequest.\n             *\n             *  The Strophe.Request class is used internally to encapsulate BOSH request\n             *  information.  It is not meant to be used from user's code.\n             */\n\n            /** PrivateConstructor: Strophe.Request\n             *  Create and initialize a new Strophe.Request object.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The XML data to be sent in the request.\n             *    (Function) func - The function that will be called when the\n             *      XMLHttpRequest readyState changes.\n             *    (Integer) rid - The BOSH rid attribute associated with this request.\n             *    (Integer) sends - The number of times this same request has been sent.\n             */\n\n            Strophe$1.Request = function (elem, func, rid, sends) {\n              this.id = ++Strophe$1._requestId;\n              this.xmlData = elem;\n              this.data = Strophe$1.serialize(elem); // save original function in case we need to make a new request\n              // from this one.\n\n              this.origFunc = func;\n              this.func = func;\n              this.rid = rid;\n              this.date = NaN;\n              this.sends = sends || 0;\n              this.abort = false;\n              this.dead = null;\n\n              this.age = function () {\n                if (!this.date) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.date) / 1000;\n              };\n\n              this.timeDead = function () {\n                if (!this.dead) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.dead) / 1000;\n              };\n\n              this.xhr = this._newXHR();\n            };\n\n            Strophe$1.Request.prototype = {\n              /** PrivateFunction: getResponse\n               *  Get a response from the underlying XMLHttpRequest.\n               *\n               *  This function attempts to get a response from the request and checks\n               *  for errors.\n               *\n               *  Throws:\n               *    \"parsererror\" - A parser error occured.\n               *    \"bad-format\" - The entity has sent XML that cannot be processed.\n               *\n               *  Returns:\n               *    The DOM element tree of the response.\n               */\n              getResponse: function getResponse() {\n                var node = null;\n\n                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n                  node = this.xhr.responseXML.documentElement;\n\n                  if (node.tagName === \"parsererror\") {\n                    Strophe$1.error(\"invalid response received\");\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    Strophe$1.error(\"responseXML: \" + Strophe$1.serialize(this.xhr.responseXML));\n                    throw new Error(\"parsererror\");\n                  }\n                } else if (this.xhr.responseText) {\n                  // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n                  Strophe$1.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n                  node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n\n                  if (!node) {\n                    throw new Error('Parsing produced null node');\n                  } else if (node.querySelector('parsererror')) {\n                    Strophe$1.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    var error = new Error();\n                    error.name = Strophe$1.ErrorCondition.BAD_FORMAT;\n                    throw error;\n                  }\n                }\n\n                return node;\n              },\n\n              /** PrivateFunction: _newXHR\n               *  _Private_ helper function to create XMLHttpRequests.\n               *\n               *  This function creates XMLHttpRequests across all implementations.\n               *\n               *  Returns:\n               *    A new XMLHttpRequest.\n               */\n              _newXHR: function _newXHR() {\n                var xhr = null;\n\n                if (window.XMLHttpRequest) {\n                  xhr = new XMLHttpRequest();\n\n                  if (xhr.overrideMimeType) {\n                    xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n                  }\n                } else if (window.ActiveXObject) {\n                  xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                } // use Function.bind() to prepend ourselves as an argument\n\n\n                xhr.onreadystatechange = this.func.bind(null, this);\n                return xhr;\n              }\n            };\n            /** Class: Strophe.Bosh\n             *  _Private_ helper class that handles BOSH Connections\n             *\n             *  The Strophe.Bosh class is used internally by Strophe.Connection\n             *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: bosh.js\n             *  A JavaScript library to enable BOSH in Strophejs.\n             *\n             *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n             *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n             *  More information on BOSH can be found in XEP 124.\n             */\n\n            /** PrivateConstructor: Strophe.Bosh\n             *  Create and initialize a Strophe.Bosh object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n             *\n             *  Returns:\n             *    A new Strophe.Bosh object.\n             */\n\n            Strophe$1.Bosh = function (connection) {\n              this._conn = connection;\n              /* request id for body tags */\n\n              this.rid = Math.floor(Math.random() * 4294967295);\n              /* The current session ID. */\n\n              this.sid = null; // default BOSH values\n\n              this.hold = 1;\n              this.wait = 60;\n              this.window = 5;\n              this.errors = 0;\n              this.inactivity = null;\n              this.lastResponseHeaders = null;\n              this._requests = [];\n            };\n\n            Strophe$1.Bosh.prototype = {\n              /** Variable: strip\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n               *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n               *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n               *\n               *  > Strophe.Bosh.prototype.strip = \"body\";\n               *\n               *  This will enable stripping of the body tag in both\n               *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n               */\n              strip: null,\n\n              /** PrivateFunction: _buildBody\n               *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <body/> element.\n               */\n              _buildBody: function _buildBody() {\n                var bodyWrap = $build$1('body', {\n                  'rid': this.rid++,\n                  'xmlns': Strophe$1.NS.HTTPBIND\n                });\n\n                if (this.sid !== null) {\n                  bodyWrap.attrs({\n                    'sid': this.sid\n                  });\n                }\n\n                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n                  this._cacheSession();\n                }\n\n                return bodyWrap;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection\n               */\n              _reset: function _reset() {\n                this.rid = Math.floor(Math.random() * 4294967295);\n                this.sid = null;\n                this.errors = 0;\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function that initializes the BOSH connection.\n               *\n               *  Creates and sends the Request that initializes the BOSH connection.\n               */\n              _connect: function _connect(wait, hold, route) {\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.errors = 0;\n\n                var body = this._buildBody().attrs({\n                  \"to\": this._conn.domain,\n                  \"xml:lang\": \"en\",\n                  \"wait\": this.wait,\n                  \"hold\": this.hold,\n                  \"content\": \"text/xml; charset=utf-8\",\n                  \"ver\": \"1.6\",\n                  \"xmpp:version\": \"1.0\",\n                  \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                });\n\n                if (route) {\n                  body.attrs({\n                    'route': route\n                  });\n                }\n\n                var _connect_cb = this._conn._connect_cb;\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _attach: function _attach(jid, sid, rid, callback, wait, hold, wind) {\n                this._conn.jid = jid;\n                this.sid = sid;\n                this.rid = rid;\n                this._conn.connect_callback = callback;\n                this._conn.domain = Strophe$1.getDomainFromJid(this._conn.jid);\n                this._conn.authenticated = true;\n                this._conn.connected = true;\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.window = wind || this.window;\n\n                this._conn._changeConnectStatus(Strophe$1.Status.ATTACHED, null);\n              },\n\n              /** PrivateFunction: _restore\n               *  Attempt to restore a cached BOSH session\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *      This parameter is optional but recommended, specifically in cases\n               *      where prebinded BOSH sessions are used where it's important to know\n               *      that the right session is being restored.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _restore: function _restore(jid, callback, wait, hold, wind) {\n                var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\n                if (typeof session !== \"undefined\" && session !== null && session.rid && session.sid && session.jid && (typeof jid === \"undefined\" || jid === null || Strophe$1.getBareJidFromJid(session.jid) === Strophe$1.getBareJidFromJid(jid) || // If authcid is null, then it's an anonymous login, so\n                // we compare only the domains:\n                Strophe$1.getNodeFromJid(jid) === null && Strophe$1.getDomainFromJid(session.jid) === jid)) {\n                  this._conn.restored = true;\n\n                  this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error(\"_restore: no restoreable session.\");\n                  error.name = \"StropheSessionError\";\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _cacheSession\n               *  _Private_ handler for the beforeunload event.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _cacheSession: function _cacheSession() {\n                if (this._conn.authenticated) {\n                  if (this._conn.jid && this.rid && this.sid) {\n                    window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                      'jid': this._conn.jid,\n                      'rid': this.rid,\n                      'sid': this.sid\n                    }));\n                  }\n                } else {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var typ = bodyWrap.getAttribute(\"type\");\n\n                if (typ !== null && typ === \"terminate\") {\n                  // an error occurred\n                  var cond = bodyWrap.getAttribute(\"condition\");\n                  Strophe$1.error(\"BOSH-Connection failed: \" + cond);\n                  var conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, cond);\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"unknown\");\n                  }\n\n                  this._conn._doDisconnect(cond);\n\n                  return Strophe$1.Status.CONNFAIL;\n                } // check to make sure we don't overwrite these if _connect_cb is\n                // called multiple times in the case of missing stream:features\n\n\n                if (!this.sid) {\n                  this.sid = bodyWrap.getAttribute(\"sid\");\n                }\n\n                var wind = bodyWrap.getAttribute('requests');\n\n                if (wind) {\n                  this.window = parseInt(wind, 10);\n                }\n\n                var hold = bodyWrap.getAttribute('hold');\n\n                if (hold) {\n                  this.hold = parseInt(hold, 10);\n                }\n\n                var wait = bodyWrap.getAttribute('wait');\n\n                if (wait) {\n                  this.wait = parseInt(wait, 10);\n                }\n\n                var inactivity = bodyWrap.getAttribute('inactivity');\n\n                if (inactivity) {\n                  this.inactivity = parseInt(inactivity, 10);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ part of Connection.disconnect for Bosh\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                this._sendTerminate(pres);\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Resets the SID and RID.\n               */\n              _doDisconnect: function _doDisconnect() {\n                this.sid = null;\n                this.rid = Math.floor(Math.random() * 4294967295);\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the Request queue is empty.\n               *\n               *  Returns:\n               *    True, if there are no Requests queued, False otherwise.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return this._requests.length === 0;\n              },\n\n              /** PrivateFunction: _callProtocolErrorHandlers\n               *  _Private_ function to call error handlers registered for HTTP errors.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _callProtocolErrorHandlers: function _callProtocolErrorHandlers(req) {\n                var reqStatus = this._getRequestStatus(req);\n\n                var err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n\n                if (err_callback) {\n                  err_callback.call(this, reqStatus);\n                }\n              },\n\n              /** PrivateFunction: _hitError\n               *  _Private_ function to handle the error count.\n               *\n               *  Requests are resent automatically until their error count reaches\n               *  5.  Each time an error is encountered, this function is called to\n               *  increment the count and disconnect if the count is too high.\n               *\n               *  Parameters:\n               *    (Integer) reqStatus - The request status.\n               */\n              _hitError: function _hitError(reqStatus) {\n                this.errors++;\n                Strophe$1.warn(\"request errored, status: \" + reqStatus + \", number of errors: \" + this.errors);\n\n                if (this.errors > 4) {\n                  this._conn._onDisconnectTimeout();\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received and sends a blank poll request.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$1.warn(\"Server did not yet offer a supported authentication \" + \"mechanism. Sending a blank poll request.\");\n\n                if (callback) {\n                  callback = callback.bind(this._conn);\n                } else {\n                  callback = this._conn._connect_cb.bind(this._conn);\n                }\n\n                var body = this._buildBody();\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  Cancels all remaining Requests and clears the queue.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                this._abortAllRequests();\n              },\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {\n                while (this._requests.length > 0) {\n                  var req = this._requests.pop();\n\n                  req.abort = true;\n                  req.xhr.abort();\n\n                  req.xhr.onreadystatechange = function () {};\n                }\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler called by Strophe.Connection._onIdle\n               *\n               *  Sends all queued Requests or polls with empty Request if there are none.\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data; // if no requests are in progress, poll\n\n                if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n                  Strophe$1.debug(\"no requests during idle cycle, sending blank request\");\n                  data.push(null);\n                }\n\n                if (this._conn.paused) {\n                  return;\n                }\n\n                if (this._requests.length < 2 && data.length > 0) {\n                  var body = this._buildBody();\n\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      if (data[i] === \"restart\") {\n                        body.attrs({\n                          \"to\": this._conn.domain,\n                          \"xml:lang\": \"en\",\n                          \"xmpp:restart\": \"true\",\n                          \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                        });\n                      } else {\n                        body.cnode(data[i]).up();\n                      }\n                    }\n                  }\n\n                  delete this._conn._data;\n                  this._conn._data = [];\n\n                  this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                  this._throttledRequestHandler();\n                }\n\n                if (this._requests.length > 0) {\n                  var time_elapsed = this._requests[0].age();\n\n                  if (this._requests[0].dead !== null) {\n                    if (this._requests[0].timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                      this._throttledRequestHandler();\n                    }\n                  }\n\n                  if (time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait)) {\n                    Strophe$1.warn(\"Request \" + this._requests[0].id + \" timed out, over \" + Math.floor(Strophe$1.TIMEOUT * this.wait) + \" seconds since last activity\");\n\n                    this._throttledRequestHandler();\n                  }\n                }\n              },\n\n              /** PrivateFunction: _getRequestStatus\n               *\n               *  Returns the HTTP status code from a Strophe.Request\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The Strophe.Request instance.\n               *    (Integer) def - The default value that should be returned if no\n               *          status value was found.\n               */\n              _getRequestStatus: function _getRequestStatus(req, def) {\n                var reqStatus;\n\n                if (req.xhr.readyState === 4) {\n                  try {\n                    reqStatus = req.xhr.status;\n                  } catch (e) {\n                    // ignore errors from undefined status attribute. Works\n                    // around a browser bug\n                    Strophe$1.error(\"Caught an error while retrieving a request's status, \" + \"reqStatus: \" + reqStatus);\n                  }\n                }\n\n                if (typeof reqStatus === \"undefined\") {\n                  reqStatus = typeof def === 'number' ? def : 0;\n                }\n\n                return reqStatus;\n              },\n\n              /** PrivateFunction: _onRequestStateChange\n               *  _Private_ handler for Strophe.Request state changes.\n               *\n               *  This function is called when the XMLHttpRequest readyState changes.\n               *  It contains a lot of error handling logic for the many ways that\n               *  requests can fail, and calls the request callback when requests\n               *  succeed.\n               *\n               *  Parameters:\n               *    (Function) func - The handler for the request.\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _onRequestStateChange: function _onRequestStateChange(func, req) {\n                Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" state changed to \" + req.xhr.readyState);\n\n                if (req.abort) {\n                  req.abort = false;\n                  return;\n                }\n\n                if (req.xhr.readyState !== 4) {\n                  // The request is not yet complete\n                  return;\n                }\n\n                var reqStatus = this._getRequestStatus(req);\n\n                this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n\n                if (this.disconnecting && reqStatus >= 400) {\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  return;\n                }\n\n                var valid_request = reqStatus > 0 && reqStatus < 500;\n                var too_many_retries = req.sends > this._conn.maxRetries;\n\n                if (valid_request || too_many_retries) {\n                  // remove from internal queue\n                  this._removeRequest(req);\n\n                  Strophe$1.debug(\"request id \" + req.id + \" should now be removed\");\n                }\n\n                if (reqStatus === 200) {\n                  // request succeeded\n                  var reqIs0 = this._requests[0] === req;\n                  var reqIs1 = this._requests[1] === req; // if request 1 finished, or request 0 finished and request\n                  // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n                  // restart the other - both will be in the first spot, as the\n                  // completed request has been removed from the queue already\n\n                  if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                    this._restartRequest(0);\n                  }\n\n                  this._conn.nextValidRid(Number(req.rid) + 1);\n\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" got 200\");\n                  func(req); // call handler\n\n                  this.errors = 0;\n                } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n                  // request failed\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  if (reqStatus >= 400 && reqStatus < 500) {\n                    this._conn._changeConnectStatus(Strophe$1.Status.DISCONNECTING, null);\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n                }\n\n                if (!valid_request && !too_many_retries) {\n                  this._throttledRequestHandler();\n                } else if (too_many_retries && !this._conn.connected) {\n                  this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"giving-up\");\n                }\n              },\n\n              /** PrivateFunction: _processRequest\n               *  _Private_ function to process a request in the queue.\n               *\n               *  This function takes requests off the queue and sends them and\n               *  restarts dead requests.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _processRequest: function _processRequest(i) {\n                var _this = this;\n\n                var req = this._requests[i];\n\n                var reqStatus = this._getRequestStatus(req, -1); // make sure we limit the number of retries\n\n\n                if (req.sends > this._conn.maxRetries) {\n                  this._conn._onDisconnectTimeout();\n\n                  return;\n                }\n\n                var time_elapsed = req.age();\n                var primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait);\n                var secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait);\n                var server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n\n                if (primary_timeout || secondary_timeout || server_error) {\n                  if (secondary_timeout) {\n                    Strophe$1.error(\"Request \".concat(this._requests[i].id, \" timed out (secondary), restarting\"));\n                  }\n\n                  req.abort = true;\n                  req.xhr.abort(); // setting to null fails on IE6, so set to empty function\n\n                  req.xhr.onreadystatechange = function () {};\n\n                  this._requests[i] = new Strophe$1.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n                  req = this._requests[i];\n                }\n\n                if (req.xhr.readyState === 0) {\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" posting\");\n\n                  try {\n                    var content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                    req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\n                    if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                      // IE9 doesn't have setRequestHeader\n                      req.xhr.setRequestHeader(\"Content-Type\", content_type);\n                    }\n\n                    if (this._conn.options.withCredentials) {\n                      req.xhr.withCredentials = true;\n                    }\n                  } catch (e2) {\n                    Strophe$1.error(\"XHR open failed: \" + e2.toString());\n\n                    if (!this._conn.connected) {\n                      this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"bad-service\");\n                    }\n\n                    this._conn.disconnect();\n\n                    return;\n                  } // Fires the XHR request -- may be invoked immediately\n                  // or on a gradually expanding retry window for reconnects\n\n\n                  var sendFunc = function sendFunc() {\n                    req.date = new Date();\n\n                    if (_this._conn.options.customHeaders) {\n                      var headers = _this._conn.options.customHeaders;\n\n                      for (var header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                          req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                      }\n                    }\n\n                    req.xhr.send(req.data);\n                  }; // Implement progressive backoff for reconnects --\n                  // First retry (send === 1) should also be instantaneous\n\n\n                  if (req.sends > 1) {\n                    // Using a cube of the retry number creates a nicely\n                    // expanding retry window\n                    var backoff = Math.min(Math.floor(Strophe$1.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n                    setTimeout(function () {\n                      // XXX: setTimeout should be called only with function expressions (23974bc1)\n                      sendFunc();\n                    }, backoff);\n                  } else {\n                    sendFunc();\n                  }\n\n                  req.sends++;\n\n                  if (this._conn.xmlOutput !== Strophe$1.Connection.prototype.xmlOutput) {\n                    if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                      this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                    } else {\n                      this._conn.xmlOutput(req.xmlData);\n                    }\n                  }\n\n                  if (this._conn.rawOutput !== Strophe$1.Connection.prototype.rawOutput) {\n                    this._conn.rawOutput(req.data);\n                  }\n                } else {\n                  Strophe$1.debug(\"_processRequest: \" + (i === 0 ? \"first\" : \"second\") + \" request has readyState of \" + req.xhr.readyState);\n                }\n              },\n\n              /** PrivateFunction: _removeRequest\n               *  _Private_ function to remove a request from the queue.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request to remove.\n               */\n              _removeRequest: function _removeRequest(req) {\n                Strophe$1.debug(\"removing request\");\n\n                for (var i = this._requests.length - 1; i >= 0; i--) {\n                  if (req === this._requests[i]) {\n                    this._requests.splice(i, 1);\n                  }\n                } // IE6 fails on setting to null, so set to empty function\n\n\n                req.xhr.onreadystatechange = function () {};\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _restartRequest\n               *  _Private_ function to restart a request that is presumed dead.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _restartRequest: function _restartRequest(i) {\n                var req = this._requests[i];\n\n                if (req.dead === null) {\n                  req.dead = new Date();\n                }\n\n                this._processRequest(i);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * Tries to extract a stanza out of a Request Object.\n               * When this fails the current connection will be disconnected.\n               *\n               *  Parameters:\n               *    (Object) req - The Request.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(req) {\n                try {\n                  return req.getResponse();\n                } catch (e) {\n                  if (e.message !== \"parsererror\") {\n                    throw e;\n                  }\n\n                  this._conn.disconnect(\"strophe-parsererror\");\n                }\n              },\n\n              /** PrivateFunction: _sendTerminate\n               *  _Private_ function to send initial disconnect sequence.\n               *\n               *  This is the first step in a graceful disconnect.  It sends\n               *  the BOSH server a terminate body and includes an unavailable\n               *  presence if authentication has completed.\n               */\n              _sendTerminate: function _sendTerminate(pres) {\n                Strophe$1.debug(\"_sendTerminate was called\");\n\n                var body = this._buildBody().attrs({\n                  type: \"terminate\"\n                });\n\n                if (pres) {\n                  body.cnode(pres.tree());\n                }\n\n                var req = new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\"));\n\n                this._requests.push(req);\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for BOSH\n               *\n               * Just triggers the RequestHandler to send the messages that are in the queue\n               */\n              _send: function _send() {\n                var _this2 = this;\n\n                clearTimeout(this._conn._idleTimeout);\n\n                this._throttledRequestHandler();\n\n                this._conn._idleTimeout = setTimeout(function () {\n                  return _this2._conn._onIdle();\n                }, 100);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                this._throttledRequestHandler();\n\n                clearTimeout(this._conn._idleTimeout);\n              },\n\n              /** PrivateFunction: _throttledRequestHandler\n               *  _Private_ function to throttle requests to the connection window.\n               *\n               *  This function makes sure we don't send requests so fast that the\n               *  request ids overflow the connection window in the case that one\n               *  request died.\n               */\n              _throttledRequestHandler: function _throttledRequestHandler() {\n                if (!this._requests) {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + \"undefined requests\");\n                } else {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + this._requests.length + \" requests\");\n                }\n\n                if (!this._requests || this._requests.length === 0) {\n                  return;\n                }\n\n                if (this._requests.length > 0) {\n                  this._processRequest(0);\n                }\n\n                if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n                  this._processRequest(1);\n                }\n              }\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$2 = core.Strophe;\n            var $build$2 = core.$build;\n            /** Class: Strophe.WebSocket\n             *  _Private_ helper class that handles WebSocket Connections\n             *\n             *  The Strophe.WebSocket class is used internally by Strophe.Connection\n             *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: websocket.js\n             *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n             *\n             *  This file implements XMPP over WebSockets for Strophejs.\n             *  If a Connection is established with a Websocket url (ws://...)\n             *  Strophe will use WebSockets.\n             *  For more information on XMPP-over-WebSocket see RFC 7395:\n             *  http://tools.ietf.org/html/rfc7395\n             *\n             *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n             */\n\n            /** PrivateConstructor: Strophe.Websocket\n             *  Create and initialize a Strophe.WebSocket object.\n             *  Currently only sets the connection Object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n             *\n             *  Returns:\n             *    A new Strophe.WebSocket object.\n             */\n\n            Strophe$2.Websocket = function (connection) {\n              this._conn = connection;\n              this.strip = \"wrapper\";\n              var service = connection.service;\n\n              if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n                // If the service is not an absolute URL, assume it is a path and put the absolute\n                // URL together from options, current URL and the path.\n                var new_service = \"\";\n\n                if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n                  new_service += \"ws\";\n                } else {\n                  new_service += \"wss\";\n                }\n\n                new_service += \"://\" + window.location.host;\n\n                if (service.indexOf(\"/\") !== 0) {\n                  new_service += window.location.pathname + service;\n                } else {\n                  new_service += service;\n                }\n\n                connection.service = new_service;\n              }\n            };\n\n            Strophe$2.Websocket.prototype = {\n              /** PrivateFunction: _buildStream\n               *  _Private_ helper function to generate the <stream> start tag for WebSockets\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <stream> element.\n               */\n              _buildStream: function _buildStream() {\n                return $build$2(\"open\", {\n                  \"xmlns\": Strophe$2.NS.FRAMING,\n                  \"to\": this._conn.domain,\n                  \"version\": '1.0'\n                });\n              },\n\n              /** PrivateFunction: _check_streamerror\n               * _Private_ checks a message for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               *    connectstatus - The ConnectStatus that will be set on error.\n               *  Returns:\n               *     true if there was a streamerror, false otherwise.\n               */\n              _check_streamerror: function _check_streamerror(bodyWrap, connectstatus) {\n                var errors;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  errors = bodyWrap.getElementsByTagNameNS(Strophe$2.NS.STREAM, \"error\");\n                } else {\n                  errors = bodyWrap.getElementsByTagName(\"stream:error\");\n                }\n\n                if (errors.length === 0) {\n                  return false;\n                }\n\n                var error = errors[0];\n                var condition = \"\";\n                var text = \"\";\n                var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\n                for (var i = 0; i < error.childNodes.length; i++) {\n                  var e = error.childNodes[i];\n\n                  if (e.getAttribute(\"xmlns\") !== ns) {\n                    break;\n                  }\n\n                  if (e.nodeName === \"text\") {\n                    text = e.textContent;\n                  } else {\n                    condition = e.nodeName;\n                  }\n                }\n\n                var errorString = \"WebSocket stream error: \";\n\n                if (condition) {\n                  errorString += condition;\n                } else {\n                  errorString += \"unknown\";\n                }\n\n                if (text) {\n                  errorString += \" - \" + text;\n                }\n\n                Strophe$2.error(errorString); // close the connection on stream_error\n\n                this._conn._changeConnectStatus(connectstatus, condition);\n\n                this._conn._doDisconnect();\n\n                return true;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection.\n               *  Is not needed by WebSockets.\n               */\n              _reset: function _reset() {\n                return;\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function called by Strophe.Connection.connect\n               *\n               *  Creates a WebSocket for a connection and assigns Callbacks to it.\n               *  Does nothing if there already is a WebSocket.\n               */\n              _connect: function _connect() {\n                // Ensure that there is no open WebSocket from a previous Connection.\n                this._closeSocket(); // Create the new WobSocket\n\n\n                this.socket = new WebSocket(this._conn.service, \"xmpp\");\n                this.socket.onopen = this._onOpen.bind(this);\n                this.socket.onerror = this._onError.bind(this);\n                this.socket.onclose = this._onClose.bind(this);\n                this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ function called by Strophe.Connection._connect_cb\n               *\n               * checks for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var error = this._check_streamerror(bodyWrap, Strophe$2.Status.CONNFAIL);\n\n                if (error) {\n                  return Strophe$2.Status.CONNFAIL;\n                }\n              },\n\n              /** PrivateFunction: _handleStreamStart\n               * _Private_ function that checks the opening <open /> tag for errors.\n               *\n               * Disconnects if there is an error and returns false, true otherwise.\n               *\n               *  Parameters:\n               *    (Node) message - Stanza containing the <open /> tag.\n               */\n              _handleStreamStart: function _handleStreamStart(message) {\n                var error = false; // Check for errors in the <open /> tag\n\n                var ns = message.getAttribute(\"xmlns\");\n\n                if (typeof ns !== \"string\") {\n                  error = \"Missing xmlns in <open />\";\n                } else if (ns !== Strophe$2.NS.FRAMING) {\n                  error = \"Wrong xmlns in <open />: \" + ns;\n                }\n\n                var ver = message.getAttribute(\"version\");\n\n                if (typeof ver !== \"string\") {\n                  error = \"Missing version in <open />\";\n                } else if (ver !== \"1.0\") {\n                  error = \"Wrong version in <open />: \" + ver;\n                }\n\n                if (error) {\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, error);\n\n                  this._conn._doDisconnect();\n\n                  return false;\n                }\n\n                return true;\n              },\n\n              /** PrivateFunction: _connect_cb_wrapper\n               * _Private_ function that handles the first connection messages.\n               *\n               * On receiving an opening stream tag this callback replaces itself with the real\n               * message handler. On receiving a stream error the connection is terminated.\n               */\n              _connect_cb_wrapper: function _connect_cb_wrapper(message) {\n                if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n                  // Strip the XML Declaration, if there is one\n                  var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n                  if (data === '') return;\n                  var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\n                  this._conn.xmlInput(streamStart);\n\n                  this._conn.rawInput(message.data); //_handleStreamSteart will check for XML errors and disconnect on error\n\n\n                  if (this._handleStreamStart(streamStart)) {\n                    //_connect_cb will check for stream:error and disconnect on error\n                    this._connect_cb(streamStart);\n                  }\n                } else if (message.data.indexOf(\"<close \") === 0) {\n                  // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n                  // Parse the raw string to an XML element\n                  var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement; // Report this input to the raw and xml handlers\n\n                  this._conn.xmlInput(parsedMessage);\n\n                  this._conn.rawInput(message.data);\n\n                  var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n\n                  if (see_uri) {\n                    var service = this._conn.service; // Valid scenarios: WSS->WSS, WS->ANY\n\n                    var isSecureRedirect = service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0 || service.indexOf(\"ws:\") >= 0;\n\n                    if (isSecureRedirect) {\n                      this._conn._changeConnectStatus(Strophe$2.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\n                      this._conn.reset();\n\n                      this._conn.service = see_uri;\n\n                      this._connect();\n                    }\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"Received closing stream\");\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  var string = this._streamWrap(message.data);\n\n                  var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n                  this.socket.onmessage = this._onMessage.bind(this);\n\n                  this._conn._connect_cb(elem, null, message.data);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ function called by Strophe.Connection.disconnect\n               *\n               *  Disconnects and sends a last stanza if one is given\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n                  if (pres) {\n                    this._conn.send(pres);\n                  }\n\n                  var close = $build$2(\"close\", {\n                    \"xmlns\": Strophe$2.NS.FRAMING\n                  });\n\n                  this._conn.xmlOutput(close.tree());\n\n                  var closeString = Strophe$2.serialize(close);\n\n                  this._conn.rawOutput(closeString);\n\n                  try {\n                    this.socket.send(closeString);\n                  } catch (e) {\n                    Strophe$2.warn(\"Couldn't send <close /> tag.\");\n                  }\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Just closes the Socket for WebSockets\n               */\n              _doDisconnect: function _doDisconnect() {\n                Strophe$2.debug(\"WebSockets _doDisconnect was called\");\n\n                this._closeSocket();\n              },\n\n              /** PrivateFunction _streamWrap\n               *  _Private_ helper function to wrap a stanza in a <stream> tag.\n               *  This is used so Strophe can process stanzas from WebSockets like BOSH\n               */\n              _streamWrap: function _streamWrap(stanza) {\n                return \"<wrapper>\" + stanza + '</wrapper>';\n              },\n\n              /** PrivateFunction: _closeSocket\n               *  _Private_ function to close the WebSocket.\n               *\n               *  Closes the socket if it is still open and deletes it\n               */\n              _closeSocket: function _closeSocket() {\n                if (this.socket) {\n                  try {\n                    this.socket.onclose = null;\n                    this.socket.onerror = null;\n                    this.socket.onmessage = null;\n                    this.socket.close();\n                  } catch (e) {\n                    Strophe$2.debug(e.message);\n                  }\n                }\n\n                this.socket = null;\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the message queue is empty.\n               *\n               *  Returns:\n               *    True, because WebSocket messages are send immediately after queueing.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return true;\n              },\n\n              /** PrivateFunction: _onClose\n               * _Private_ function to handle websockets closing.\n               *\n               * Nothing to do here for WebSockets\n               */\n              _onClose: function _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe$2.error(\"Websocket closed unexpectedly\");\n\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe$2.error(\"Websocket closed unexcectedly\");\n\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe$2.debug(\"Websocket closed\");\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$2.error(\"Server did not offer a supported authentication mechanism\");\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, Strophe$2.ErrorCondition.NO_AUTH_MECH);\n\n                if (callback) {\n                  callback.call(this._conn);\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  This does nothing for WebSockets\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {},\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {},\n\n              /** PrivateFunction: _onError\n               * _Private_ function to handle websockets errors.\n               *\n               * Parameters:\n               * (Object) error - The websocket error.\n               */\n              _onError: function _onError(error) {\n                Strophe$2.error(\"Websocket error \" + error);\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                this._disconnect();\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ function called by Strophe.Connection._onIdle\n               *\n               *  sends all queued stanzas\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data;\n\n                if (data.length > 0 && !this._conn.paused) {\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      var stanza = void 0;\n\n                      if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                      } else {\n                        stanza = data[i];\n                      }\n\n                      var rawStanza = Strophe$2.serialize(stanza);\n\n                      this._conn.xmlOutput(stanza);\n\n                      this._conn.rawOutput(rawStanza);\n\n                      this.socket.send(rawStanza);\n                    }\n                  }\n\n                  this._conn._data = [];\n                }\n              },\n\n              /** PrivateFunction: _onMessage\n               * _Private_ function to handle websockets messages.\n               *\n               * This function parses each of the messages as if they are full documents.\n               * [TODO : We may actually want to use a SAX Push parser].\n               *\n               * Since all XMPP traffic starts with\n               *  <stream:stream version='1.0'\n               *                 xml:lang='en'\n               *                 xmlns='jabber:client'\n               *                 xmlns:stream='http://etherx.jabber.org/streams'\n               *                 id='3697395463'\n               *                 from='SERVER'>\n               *\n               * The first stanza will always fail to be parsed.\n               *\n               * Additionally, the seconds stanza will always be <stream:features> with\n               * the stream NS defined in the previous stanza, so we need to 'force'\n               * the inclusion of the NS in this stanza.\n               *\n               * Parameters:\n               * (string) message - The websocket message.\n               */\n              _onMessage: function _onMessage(message) {\n                var elem; // check for closing stream\n\n                var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\n                if (message.data === close) {\n                  this._conn.rawInput(close);\n\n                  this._conn.xmlInput(message);\n\n                  if (!this._conn.disconnecting) {\n                    this._conn._doDisconnect();\n                  }\n\n                  return;\n                } else if (message.data.search(\"<open \") === 0) {\n                  // This handles stream restarts\n                  elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\n                  if (!this._handleStreamStart(elem)) {\n                    return;\n                  }\n                } else {\n                  var data = this._streamWrap(message.data);\n\n                  elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n                }\n\n                if (this._check_streamerror(elem, Strophe$2.Status.ERROR)) {\n                  return;\n                } //handle unavailable presence stanza before disconnecting\n\n\n                if (this._conn.disconnecting && elem.firstChild.nodeName === \"presence\" && elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n                  this._conn.xmlInput(elem);\n\n                  this._conn.rawInput(Strophe$2.serialize(elem)); // if we are already disconnecting we will ignore the unavailable stanza and\n                  // wait for the </stream:stream> tag before we close the connection\n\n\n                  return;\n                }\n\n                this._conn._dataRecv(elem, message.data);\n              },\n\n              /** PrivateFunction: _onOpen\n               * _Private_ function to handle websockets connection setup.\n               *\n               * The opening stream tag is sent here.\n               */\n              _onOpen: function _onOpen() {\n                Strophe$2.debug(\"Websocket open\");\n\n                var start = this._buildStream();\n\n                this._conn.xmlOutput(start.tree());\n\n                var startString = Strophe$2.serialize(start);\n\n                this._conn.rawOutput(startString);\n\n                this.socket.send(startString);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * WebSockets don't use requests, so the passed argument is just returned.\n               *\n               *  Parameters:\n               *    (Object) stanza - The stanza.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(stanza) {\n                return stanza;\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for WebSocket\n               *\n               * Just flushes the messages that are in the queue\n               */\n              _send: function _send() {\n                this._conn.flush();\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                clearTimeout(this._conn._idleTimeout);\n\n                this._conn._onIdle.bind(this._conn)();\n              }\n            };\n\n            global$1.Strophe = core.Strophe;\n            global$1.$build = core.$build;\n            global$1.$iq = core.$iq;\n            global$1.$msg = core.$msg;\n            global$1.$pres = core.$pres;\n\n            return core;\n\n}));\n","/**\n * The errors for the conference.\n */\n\n/**\n * Indicates that client must be authenticated to create the conference.\n */\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\n\n/**\n * Indicates that chat error occurred.\n */\nexport const CHAT_ERROR = 'conference.chatError';\n\n/**\n * Indicates that conference has been destroyed.\n */\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\n\n/**\n * Indicates that max users limit has been reached.\n */\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\n\n/**\n * Indicates that a connection error occurred when trying to join a conference.\n */\nexport const CONNECTION_ERROR = 'conference.connectionError';\n\n/**\n * Indicates that the client has been forced to restart by jicofo when the\n * conference was migrated from one bridge to another.\n */\nexport const CONFERENCE_RESTARTED = 'conference.restarted';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference.\n */\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference, only approved members are allowed to join.\n */\nexport const MEMBERS_ONLY_ERROR = 'conference.connectionError.membersOnly';\n\n/**\n * Indicates that a connection error is due to denied access to the room,\n * occurred after joining a lobby room and access is denied by the room moderators.\n */\nexport const CONFERENCE_ACCESS_DENIED = 'conference.connectionError.accessDenied';\n\n/**\n * Indicates that focus error happened.\n */\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\n\n/**\n * Indicates that focus left the conference.\n */\nexport const FOCUS_LEFT = 'conference.focusLeft';\n\n/**\n * Indicates that graceful shutdown happened.\n */\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\n\n/**\n * Indicates that the media connection has failed.\n */\nexport const ICE_FAILED = 'conference.iceFailed';\n\n/**\n * Indicates that the versions of the server side components are incompatible\n * with the client side.\n */\nexport const INCOMPATIBLE_SERVER_VERSIONS\n    = 'conference.incompatible_server_versions';\n\n/**\n * Indicates that offer/answer had failed.\n */\nexport const OFFER_ANSWER_FAILED = 'conference.offerAnswerFailed';\n\n/**\n * Indicates that password cannot be set for this conference.\n */\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\n\n/**\n * Indicates that reservation system returned error.\n */\nexport const RESERVATION_ERROR = 'conference.reservationError';\n\n/**\n * Indicates that there is no available videobridge.\n */\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\n","/**\n * The errors for the JitsiTrack objects.\n */\n\n/**\n * An error which indicates that some of requested constraints in\n * getUserMedia call were not satisfied.\n */\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\n\n/**\n * A generic error which indicates an error occurred while selecting\n * a DesktopCapturerSource from the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_ERROR\n    = 'gum.electron_desktop_picker_error';\n\n/**\n * An error which indicates a custom desktop picker could not be detected\n * for the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\n    = 'gum.electron_desktop_picker_not_found';\n\n/**\n * Generic getUserMedia error.\n */\nexport const GENERAL = 'gum.general';\n\n/**\n * An error which indicates that requested device was not found.\n */\nexport const NOT_FOUND = 'gum.not_found';\n\n/**\n * An error which indicates that user denied permission to share requested\n * device.\n */\nexport const PERMISSION_DENIED = 'gum.permission_denied';\n\n/**\n * Generic error for screensharing failure.\n */\nexport const SCREENSHARING_GENERIC_ERROR\n    = 'gum.screensharing_generic_error';\n\n/**\n * An error which indicates that user canceled screen sharing window\n * selection dialog.\n */\nexport const SCREENSHARING_USER_CANCELED\n    = 'gum.screensharing_user_canceled';\n\n\n/**\n * Indicates that the timeout passed to the obtainAudioAndVideoPermissions has expired without GUM resolving.\n */\nexport const TIMEOUT = 'gum.timeout';\n\n/**\n * An error which indicates that track has been already disposed and cannot\n * be longer used.\n */\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\n\n/**\n * An error which indicates that track has no MediaStream associated.\n */\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\n\n/**\n * An error which indicates that requested video resolution is not supported\n * by a webcam.\n */\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\n","/**\n * The events for the connection.\n */\n\n/**\n * Indicates that the connection has been disconnected. The event provides\n * the following parameters to its listeners:\n *\n * @param msg {string} a message associated with the disconnect such as the\n * last (known) error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\n\n/**\n * Indicates that the connection has been established. The event provides\n * the following parameters to its listeners:\n *\n * @param id {string} the ID of the local endpoint/participant/peer (within\n * the context of the established connection)\n */\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\n\n/**\n * Indicates that the connection has been failed for some reason. The event\n * provides the following parameters to its listeners:\n *\n * @param errType {JitsiConnectionErrors} the type of error associated with\n * the failure\n * @param errReason {string} the error (message) associated with the failure\n * @param credentials {object} the credentials used to connect (if any)\n * @param errReasonDetails {object} an optional object with details about\n * the error, like shard moving, suspending. Used for analytics purposes.\n */\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\n\n/**\n * Indicates that the performed action cannot be executed because the\n * connection is not in the correct state(connected, disconnected, etc.)\n */\nexport const WRONG_STATE = 'connection.wrongState';\n\n/**\n * Indicates that the display name is required over this connection and need to be supplied when\n * joining the room.\n * There are cases like lobby room where display name is required.\n */\nexport const DISPLAY_NAME_REQUIRED = 'connection.display_name_required';\n","export default window.document;\n","export default [];\n","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require(\"./Logger\");\nvar LogCollector = require(\"./LogCollector\");\n\n/**\n * Definition of the log method\n * @name log_method\n * @function\n * @param {...*} log_args the arguments to be logged\n */\n/**\n * The logger's transport type definition.\n *\n * @typedef {object} LoggerTransport\n *\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\n */\n\n/**\n * Map with the created loggers with ID.\n */\nvar idLoggers = {};\n\n/**\n * Array with the loggers without id.\n */\nvar loggers = [];\n\n/**\n * Log level for the lbrary.\n */\nvar curLevel = Logger.levels.TRACE;\n\n\nmodule.exports = {\n    /**\n     * Adds given {@link LoggerTransport} instance to the list of global\n     * transports which means that it'll be used by all {@link Logger}s\n     * @param {LoggerTransport} transport\n     */\n    addGlobalTransport: function(transport) {\n        Logger.addGlobalTransport(transport);\n    },\n    /**\n     * Removes given {@link LoggerTransport} instance from the list of global\n     * transports\n     * @param {LoggerTransport} transport\n     */\n    removeGlobalTransport: function(transport) {\n        Logger.removeGlobalTransport(transport);\n    },\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    */\n    setGlobalOptions: function(options) {\n        Logger.setGlobalOptions(options);\n    },\n    /**\n     * Creates new logger.\n     * @arguments the same as Logger constructor\n     */\n    getLogger: function(id, transports, options) {\n        var logger = new Logger(curLevel, id, transports, options);\n        if(id) {\n            idLoggers[id] = idLoggers[id] || [];\n            idLoggers[id].push(logger);\n        } else {\n            loggers.push(logger);\n        }\n        return logger;\n    },\n    /**\n     * Changes the log level for the existing loggers by id.\n     * @param level the new log level.\n     * @param id if specified the level will be changed only for loggers with the\n     * same id. Otherwise the operation will affect all loggers that don't\n     * have id.\n     */\n    setLogLevelById: function(level, id) {\n        var l = id? (idLoggers[id] || []) : loggers;\n        for(var i = 0; i < l.length; i++) {\n            l[i].setLevel(level);\n        }\n    },\n    /**\n     * Changes the log level for all existing loggers.\n     * @param level the new log level.\n     */\n    setLogLevel: function (level) {\n        curLevel = level;\n        var i = 0;\n        for(; i < loggers.length; i++) {\n            loggers[i].setLevel(level);\n        }\n\n        for(var id in idLoggers) {\n            var l = idLoggers[id] || [];\n            for(i = 0; i < l.length; i++) {\n                l[i].setLevel(level);\n            }\n        }\n    },\n    /**\n     * The supported log levels.\n     */\n    levels: Logger.levels,\n    /**\n     * Exports the <tt>LogCollector</tt>.\n     */\n    LogCollector: LogCollector\n};\n","import arr from \"./arr.js\";\n\nexport default arr.push;\n","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $msg, Strophe } from 'strophe.js';\nimport 'strophejs-plugin-disco';\n\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport browser from '../browser';\nimport { E2EEncryption } from '../e2ee/E2EEncryption';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport Listenable from '../util/Listenable';\nimport RandomUtil from '../util/RandomUtil';\n\nimport Caps, { parseDiscoInfo } from './Caps';\nimport XmppConnection from './XmppConnection';\nimport MucConnectionPlugin from './strophe.emuc';\nimport JingleConnectionPlugin from './strophe.jingle';\nimport initStropheLogger from './strophe.logger';\nimport RayoConnectionPlugin from './strophe.rayo';\nimport initStropheUtil from './strophe.util';\n\nconst logger = getLogger(__filename);\n\n/**\n* Regex to extract exact error message on jwt error.\n*/\nconst FAILURE_REGEX = /<failure.*><not-allowed\\/><text>(.*)<\\/text><\\/failure>/gi;\n\n/**\n * Creates XMPP connection.\n *\n * @param {Object} options\n * @param {string} [options.token] - JWT token used for authentication(JWT authentication module must be enabled in\n * Prosody).\n * @param {string} options.serviceUrl - The service URL for XMPP connection.\n * @param {string} options.shard - The shard where XMPP connection initially landed.\n * @param {string} options.enableWebsocketResume - True to enable stream resumption.\n * @param {number} [options.websocketKeepAlive] - See {@link XmppConnection} constructor.\n * @param {number} [options.websocketKeepAliveUrl] - See {@link XmppConnection} constructor.\n * @param {Object} [options.xmppPing] - See {@link XmppConnection} constructor.\n * @returns {XmppConnection}\n */\nfunction createConnection({\n    enableWebsocketResume,\n    name,\n    serviceUrl = '/http-bind',\n    shard,\n    token,\n    websocketKeepAlive,\n    websocketKeepAliveUrl,\n    xmppPing }) {\n\n    // Append token as URL param\n    if (token) {\n        // eslint-disable-next-line no-param-reassign\n        serviceUrl += `${serviceUrl.indexOf('?') === -1 ? '?' : '&'}token=${token}&room=${name}`;\n\n    }\n\n    return new XmppConnection({\n        enableWebsocketResume,\n        serviceUrl,\n        name,\n        websocketKeepAlive,\n        websocketKeepAliveUrl,\n        xmppPing,\n        shard\n    });\n}\n\n/**\n * Initializes Strophe plugins that need to work with Strophe.Connection directly rather than the lib-jitsi-meet's\n * {@link XmppConnection} wrapper.\n *\n * @returns {void}\n */\nfunction initStropheNativePlugins() {\n    initStropheUtil();\n    initStropheLogger();\n}\n\n// FIXME: remove once we have a default config template. -saghul\n/**\n * A list of ice servers to use by default for P2P.\n */\nexport const DEFAULT_STUN_SERVERS = [\n    { urls: 'stun:meet-jit-si-turnrelay.jitsi.net:443' }\n];\n\n/**\n * The name of the field used to recognize a chat message as carrying a JSON\n * payload from another endpoint.\n * If the json-message of a chat message contains a valid JSON object, and\n * the JSON has this key, then it is a valid json-message to be sent.\n */\nexport const JITSI_MEET_MUC_TYPE = 'type';\n\n/**\n * The feature used by jigasi participants.\n * @type {string}\n */\nexport const FEATURE_JIGASI = 'http://jitsi.org/protocol/jigasi';\n\n/**\n * The feature used by the lib to mark support for e2ee. We use the feature by putting it in the presence\n * to avoid additional signaling (disco-info).\n * @type {string}\n */\nexport const FEATURE_E2EE = 'https://jitsi.org/meet/e2ee';\n\n/**\n *\n */\nexport default class XMPP extends Listenable {\n    /**\n     * FIXME describe all options\n     * @param {Object} options\n     * @param {String} options.serviceUrl - URL passed to the XMPP client which will be used to establish XMPP\n     * connection with the server.\n     * @param {String} options.bosh - Deprecated, use {@code serviceUrl}.\n     * @param {boolean} options.enableWebsocketResume - Enables XEP-0198 stream management which will make the XMPP\n     * module try to resume the session in case the Websocket connection breaks.\n     * @param {number} [options.websocketKeepAlive] - The websocket keep alive interval. See {@link XmppConnection}\n     * constructor for more details.\n     * @param {number} [options.websocketKeepAliveUrl] - The websocket keep alive url. See {@link XmppConnection}\n     * constructor for more details.\n     * @param {Object} [options.xmppPing] - The xmpp ping settings.\n     * @param {Array<Object>} options.p2pStunServers see {@link JingleConnectionPlugin} for more details.\n     * @param token\n     */\n    constructor(options, token, roomName) {\n        super();\n        this.connection = null;\n        this.disconnectInProgress = false;\n        this.connectionTimes = {};\n        this.options = options;\n        this.token = token;\n        this.authenticatedUser = false;\n\n        initStropheNativePlugins();\n\n        const xmppPing = options.xmppPing || {};\n\n        // let's ping the main domain (in case a guest one is used for the connection)\n        xmppPing.domain = options.hosts.domain;\n\n        this.connection = createConnection({\n            name: roomName,\n            enableWebsocketResume: options.enableWebsocketResume,\n\n            // FIXME remove deprecated bosh option at some point\n            serviceUrl: options.serviceUrl || options.bosh,\n            token,\n            websocketKeepAlive: options.websocketKeepAlive,\n            websocketKeepAliveUrl: options.websocketKeepAliveUrl,\n            xmppPing,\n            shard: options.deploymentInfo?.shard\n        });\n\n        // forwards the shard changed event\n        this.connection.on(XmppConnection.Events.CONN_SHARD_CHANGED, () => {\n            /* eslint-disable camelcase */\n            const details = {\n                shard_changed: true,\n                suspend_time: this.connection.ping.getPingSuspendTime(),\n                time_since_last_success: this.connection.getTimeSinceLastSuccess()\n            };\n            /* eslint-enable camelcase */\n\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.OTHER_ERROR,\n                undefined,\n                undefined,\n                details);\n        });\n\n        this._initStrophePlugins();\n\n        this.caps = new Caps(this.connection, this.options.clientNode);\n\n        // Initialize features advertised in disco-info\n        this.initFeaturesList();\n\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\n        // sounds like they would want that. A problem for them though may be if\n        // they wanted to utilize the connected connection in an unload handler\n        // of their own. However, it should be fairly easy for them to do that\n        // by registering their unload handler before us.\n        // $(window).on('beforeunload unload', ev => {\n        //     this.disconnect(ev).catch(() => {\n        //         // ignore errors in order to not brake the unload.\n        //     });\n        // });\n    }\n\n    /**\n     * Initializes the list of feature advertised through the disco-info\n     * mechanism.\n     */\n    initFeaturesList() {\n        // http://xmpp.org/extensions/xep-0167.html#support\n        // http://xmpp.org/extensions/xep-0176.html#support\n        this.caps.addFeature('urn:xmpp:jingle:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\n\n        // Disable RTX on Firefox 83 and older versions because of\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1668028\n        if (!(this.options.disableRtx || (browser.isFirefox() && browser.isVersionLessThan(84)))) {\n            this.caps.addFeature('urn:ietf:rfc:4588');\n        }\n        if (this.options.enableOpusRed === true && browser.supportsAudioRed()) {\n            this.caps.addFeature('http://jitsi.org/opus-red');\n        }\n\n        if (typeof this.options.enableRemb === 'undefined' || this.options.enableRemb) {\n            this.caps.addFeature('http://jitsi.org/remb');\n        }\n        if (typeof this.options.enableTcc === 'undefined' || this.options.enableTcc) {\n            this.caps.addFeature('http://jitsi.org/tcc');\n        }\n\n        // this is dealt with by SDP O/A so we don't need to announce this\n        // XEP-0293\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\n        // XEP-0294\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\n\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\n\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\n\n        // Enable Lipsync ?\n        if (browser.isChromiumBased() && this.options.enableLipSync === true) {\n            logger.info('Lip-sync enabled !');\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\n        }\n\n        if (this.connection.rayo) {\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\n        }\n\n        if (E2EEncryption.isSupported(this.options)) {\n            this.caps.addFeature(FEATURE_E2EE, false, true);\n        }\n    }\n\n    /**\n     *\n     */\n    getConnection() {\n        return this.connection;\n    }\n\n    /**\n     * Receive connection status changes and handles them.\n     *\n     * @param {Object} credentials\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\n     * connect method. For example, 'user@xmpp.com'.\n     * @param {string} credentials.password - The password passed to the connect\n     * method.\n     * @param {string} status - One of Strophe's connection status strings.\n     * @param {string} [msg] - The connection error message provided by Strophe.\n     */\n    connectionHandler(credentials = {}, status, msg) {\n        const now = window.performance.now();\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\n\n        this.connectionTimes[statusStr] = now;\n        logger.log(\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\t`,\n            now);\n\n        this.eventEmitter.emit(XMPPEvents.CONNECTION_STATUS_CHANGED, credentials, status, msg);\n        if (status === Strophe.Status.CONNECTED || status === Strophe.Status.ATTACHED) {\n            // once connected or attached we no longer need this handle, drop it if it exist\n            if (this._sysMessageHandler) {\n                this.connection._stropheConn.deleteHandler(this._sysMessageHandler);\n            }\n\n            this.sendDiscoInfo && this.connection.jingle.getStunAndTurnCredentials();\n\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\n\n            // XmppConnection emits CONNECTED again on reconnect - a good opportunity to clear any \"last error\" flags\n            this._resetState();\n\n            this.sendDiscoInfo && this.caps.getFeaturesAndIdentities(this.options.hosts.domain)\n                .then(({ features, identities }) => {\n                    if (!features.has(Strophe.NS.PING)) {\n                        logger.error(`Ping NOT supported by ${\n                            this.options.hosts.domain} - please enable ping in your XMPP server config`);\n                    }\n\n                    this._processDiscoInfoIdentities(\n                        identities, undefined /* when querying we will query for features */);\n                })\n                .catch(error => {\n                    const errmsg = 'Feature discovery error';\n\n                    GlobalOnErrorHandler.callErrorHandler(\n                        new Error(`${errmsg}: ${error}`));\n                    logger.error(errmsg, error);\n                });\n\n            // make sure we don't query again\n            this.sendDiscoInfo = false;\n\n            if (credentials.password) {\n                this.authenticatedUser = true;\n            }\n            if (this.connection && this.connection.connected\n                && Strophe.getResourceFromJid(this.connection.jid)) {\n                // .connected is true while connecting?\n                // this.connection.send($pres());\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\n                    Strophe.getResourceFromJid(this.connection.jid));\n            }\n        } else if (status === Strophe.Status.CONNFAIL) {\n            if (msg === 'x-strophe-bad-non-anon-jid') {\n                this.anonymousConnectionFailed = true;\n            } else {\n                this.connectionFailed = true;\n            }\n            this.lastErrorMsg = msg;\n            if (msg === 'giving-up') {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\n            }\n        } else if (status === Strophe.Status.ERROR) {\n            this.lastErrorMsg = msg;\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            // Stop ping interval\n            this.connection.ping.stopInterval();\n            const wasIntentionalDisconnect = Boolean(this.disconnectInProgress);\n            const errMsg = msg || this.lastErrorMsg;\n\n            if (this.anonymousConnectionFailed) {\n                // prompt user for username and password\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\n            } else if (this.connectionFailed) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR,\n                    errMsg,\n                    undefined, /* credentials */\n                    this._getConnectionFailedReasonDetails());\n            } else if (wasIntentionalDisconnect) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\n            } else {\n                // XXX if Strophe drops the connection while not being asked to,\n                // it means that most likely some serious error has occurred.\n                // One currently known case is when a BOSH request fails for\n                // more than 4 times. The connection is dropped without\n                // supplying a reason(error message/event) through the API.\n                logger.error('XMPP connection dropped!');\n\n                // XXX if the last request error is within 5xx range it means it\n                // was a server failure\n                const lastErrorStatus = Strophe.getLastErrorStatus();\n\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.SERVER_ERROR,\n                        errMsg || 'server-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                } else {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\n                        errMsg || 'connection-dropped-error',\n                        /* credentials */ undefined,\n                        this._getConnectionFailedReasonDetails());\n                }\n            }\n        } else if (status === Strophe.Status.AUTHFAIL) {\n            const lastFailedRawMessage = this.getConnection().getLastFailedMessage();\n\n            // wrong password or username, prompt user\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\n                msg || this._parseConnectionFailedMessage(lastFailedRawMessage),\n                credentials);\n        }\n    }\n\n    /**\n     * Process received identities.\n     * @param {Set<String>} identities The identities to process.\n     * @param {Set<String>} features The features to process, optional. If missing lobby component will be queried\n     * for more features.\n     * @private\n     */\n    _processDiscoInfoIdentities(identities, features) {\n        // check for speakerstats\n        identities.forEach(identity => {\n            if (identity.type === 'speakerstats') {\n                this.speakerStatsComponentAddress = identity.name;\n            }\n\n            if (identity.type === 'conference_duration') {\n                this.conferenceDurationComponentAddress = identity.name;\n            }\n\n            if (identity.type === 'lobbyrooms') {\n                this.lobbySupported = true;\n                const processLobbyFeatures = f => {\n                    f.forEach(fr => {\n                        if (fr.endsWith('#displayname_required')) {\n                            this.eventEmitter.emit(JitsiConnectionEvents.DISPLAY_NAME_REQUIRED);\n                        }\n                    });\n                };\n\n                if (features) {\n                    processLobbyFeatures(features);\n                } else {\n                    identity.name && this.caps.getFeaturesAndIdentities(identity.name, identity.type)\n                        .then(({ features: f }) => processLobbyFeatures(f))\n                        .catch(e => logger.warn('Error getting features from lobby.', e && e.message));\n                }\n            }\n        });\n\n        if (this.speakerStatsComponentAddress\n            || this.conferenceDurationComponentAddress) {\n            this.connection.addHandler(this._onPrivateMessage.bind(this), null, 'message', null, null);\n        }\n    }\n\n    /**\n    * Parses a raw failure xmpp xml message received on auth failed.\n    *\n    * @param {string} msg - The raw failure message from xmpp.\n    * @returns {string|null} - The parsed message from the raw xmpp message.\n    */\n    _parseConnectionFailedMessage(msg) {\n        if (!msg) {\n            return null;\n        }\n\n        const matches = FAILURE_REGEX.exec(msg);\n\n        return matches ? matches[1] : null;\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    _connect(jid, password) {\n        // connection.connect() starts the connection process.\n        //\n        // As the connection process proceeds, the user supplied callback will\n        // be triggered multiple times with status updates. The callback should\n        // take two arguments - the status code and the error condition.\n        //\n        // The status code will be one of the values in the Strophe.Status\n        // constants. The error condition will be one of the conditions defined\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\n        //\n        // The Parameters wait, hold and route are optional and only relevant\n        // for BOSH connections. Please see XEP 124 for a more detailed\n        // explanation of the optional parameters.\n        //\n        // Connection status constants for use by the connection handler\n        // callback.\n        //\n        //  Status.ERROR - An error has occurred (websockets specific)\n        //  Status.CONNECTING - The connection is currently being made\n        //  Status.CONNFAIL - The connection attempt failed\n        //  Status.AUTHENTICATING - The connection is authenticating\n        //  Status.AUTHFAIL - The authentication attempt failed\n        //  Status.CONNECTED - The connection has succeeded\n        //  Status.DISCONNECTED - The connection has been terminated\n        //  Status.DISCONNECTING - The connection is currently being terminated\n        //  Status.ATTACHED - The connection has been attached\n\n        this._resetState();\n\n        // we want to send this only on the initial connect\n        this.sendDiscoInfo = true;\n\n        if (this.connection._stropheConn && this.connection._stropheConn._addSysHandler) {\n            this._sysMessageHandler = this._onSystemMessage.bind(this);\n            this.connection._stropheConn._addSysHandler(this._sysMessageHandler, null, 'message');\n        } else {\n            logger.warn('Cannot attach strophe system handler, jiconop cannot operate');\n        }\n\n        this.connection.connect(\n            jid,\n            password,\n            this.connectionHandler.bind(this, {\n                jid,\n                password\n            }));\n    }\n\n    /**\n     * Receives system messages during the connect/login process and checks for services or\n     * @param msg The received message.\n     * @returns {void}\n     * @private\n     */\n    _onSystemMessage(msg) {\n        this.sendDiscoInfo = false;\n\n        const foundIceServers = this.connection.jingle.onReceiveStunAndTurnCredentials(msg);\n\n        const { features, identities } = parseDiscoInfo(msg);\n\n        this._processDiscoInfoIdentities(identities, features);\n\n        // check for shard name in identities\n        identities.forEach(i => {\n            if (i.type === 'shard') {\n                this.options.deploymentInfo.shard = i.name;\n            }\n        });\n\n        if (foundIceServers || identities.size > 0 || features.size > 0) {\n            this.connection._stropheConn.deleteHandler(this._sysMessageHandler);\n            this._sysMessageHandler = null;\n        }\n    }\n\n    /**\n     * Attach to existing connection. Can be used for optimizations. For\n     * example: if the connection is created on the server we can attach to it\n     * and start using it.\n     *\n     * @param options {object} connecting options - rid, sid, jid and password.\n     */\n    attach(options) {\n        this._resetState();\n\n        // we want to send this only on the initial connect\n        this.sendDiscoInfo = true;\n\n        const now = this.connectionTimes.attaching = window.performance.now();\n\n        logger.log('(TIME) Strophe Attaching:\\t', now);\n        this.connection.attach(options.jid, options.sid,\n            parseInt(options.rid, 10) + 1,\n            this.connectionHandler.bind(this, {\n                jid: options.jid,\n                password: options.password\n            }));\n    }\n\n    /**\n     * Resets any state/flag before starting a new connection.\n     * @private\n     */\n    _resetState() {\n        this.anonymousConnectionFailed = false;\n        this.connectionFailed = false;\n        this.lastErrorMsg = undefined;\n        this.disconnectInProgress = undefined;\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    connect(jid, password) {\n        if (!jid) {\n            const { anonymousdomain, domain } = this.options.hosts;\n            let configDomain = anonymousdomain || domain;\n\n            // Force authenticated domain if room is appended with '?login=true'\n            // or if we're joining with the token\n\n            // FIXME Do not rely on window.location because (1) React Native\n            // does not have a window.location by default and (2) here we cannot\n            // know for sure that query/search has not be stripped from\n            // window.location by the time the following executes.\n            const { location } = window;\n\n            if (anonymousdomain) {\n                const search = location && location.search;\n\n                if ((search && search.indexOf('login=true') !== -1)\n                        || this.token) {\n                    configDomain = domain;\n                }\n            }\n\n            // eslint-disable-next-line no-param-reassign\n            jid = configDomain || (location && location.hostname);\n        }\n\n        return this._connect(jid, password);\n    }\n\n    /**\n     * Joins or creates a muc with the provided jid, created from the passed\n     * in room name and muc host and onCreateResource result.\n     *\n     * @param {string} roomName - The name of the muc to join.\n     * @param {Object} options - Configuration for how to join the muc.\n     * @param {Function} [onCreateResource] - Callback to invoke when a resource\n     * is to be added to the jid.\n     * @returns {Promise} Resolves with an instance of a strophe muc.\n     */\n    createRoom(roomName, options, onCreateResource) {\n        // There are cases (when using subdomain) where muc can hold an uppercase part\n        let roomjid = `${roomName}@${options.customDomain\n            ? options.customDomain : this.options.hosts.muc.toLowerCase()}/`;\n\n        const mucNickname = onCreateResource\n            ? onCreateResource(this.connection.jid, this.authenticatedUser)\n            : RandomUtil.randomHexString(8).toLowerCase();\n\n        logger.info(`JID ${this.connection.jid} using MUC nickname ${mucNickname}`);\n        roomjid += mucNickname;\n\n        return this.connection.emuc.createRoom(roomjid, null, options);\n    }\n\n    /**\n     * Returns the jid of the participant associated with the Strophe connection.\n     *\n     * @returns {string} The jid of the participant.\n     */\n    getJid() {\n        return this.connection.jid;\n    }\n\n    /**\n     * Returns the logs from strophe.jingle.\n     * @returns {Object}\n     */\n    getJingleLog() {\n        const jingle = this.connection.jingle;\n\n\n        return jingle ? jingle.getLog() : {};\n    }\n\n    /**\n     * Returns the logs from strophe.\n     */\n    getXmppLog() {\n        return (this.connection.logger || {}).log || null;\n    }\n\n    /**\n     *\n     */\n    dial(...args) {\n        this.connection.rayo.dial(...args);\n    }\n\n    /**\n     * Pings the server.\n     * @param timeout how many ms before a timeout should occur.\n     * @returns {Promise} resolved on ping success and reject on an error or\n     * a timeout.\n     */\n    ping(timeout) {\n        return new Promise((resolve, reject) => {\n            this.connection.ping.ping(this.connection.pingDomain, resolve, reject, timeout);\n        });\n    }\n\n    /**\n     *\n     */\n    getSessions() {\n        return this.connection.jingle.sessions;\n    }\n\n    /**\n     * Disconnects this from the XMPP server (if this is connected).\n     *\n     * @param {Object} ev - Optionally, the event which triggered the necessity to\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\n     * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n     */\n    disconnect(ev) {\n        if (this.disconnectInProgress) {\n            return this.disconnectInProgress;\n        } else if (!this.connection) {\n            return Promise.resolve();\n        }\n\n        this.disconnectInProgress = new Promise(resolve => {\n            const disconnectListener = (credentials, status) => {\n                if (status === Strophe.Status.DISCONNECTED) {\n                    resolve();\n                    this.eventEmitter.removeListener(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n                }\n            };\n\n            this.eventEmitter.on(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\n        });\n\n        this._cleanupXmppConnection(ev);\n\n        return this.disconnectInProgress;\n    }\n\n    /**\n     * The method is supposed to gracefully close the XMPP connection and the main goal is to make sure that the current\n     * participant will be removed from the conference XMPP MUC, so that it doesn't leave a \"ghost\" participant behind.\n     *\n     * @param {Object} ev - Optionally, the event which triggered the necessity to disconnect from the XMPP server\n     * (e.g. beforeunload, unload).\n     * @private\n     * @returns {void}\n     */\n    _cleanupXmppConnection(ev) {\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that means that there may not be enough time\n        // to send an unavailable presence or disconnect at all. Switching Strophe to synchronous sending is not much of\n        // an option because it may lead to a noticeable delay in navigating away from the current location. As\n        // a compromise, we will try to increase the chances of sending an unavailable presence and/or disconnecting\n        // within the short time span that we have upon unloading by invoking flush() on the connection. We flush() once\n        // before disconnect() in order to attempt to have its unavailable presence at the top of the send queue. We\n        // flush() once more after disconnect() in order to attempt to have its unavailable presence sent as soon as\n        // possible.\n        !this.connection.isUsingWebSocket && this.connection.flush();\n\n        if (!this.connection.isUsingWebSocket && ev !== null && typeof ev !== 'undefined') {\n            const evType = ev.type;\n\n            if (evType === 'beforeunload' || evType === 'unload') {\n                // XXX Whatever we said above, synchronous sending is the best (known) way to properly disconnect from\n                // the XMPP server. Consequently, it may be fine to have the source code and comment it in or out\n                // depending on whether we want to run with it for some time.\n                this.connection.options.sync = true;\n\n                // This is needed in some browsers where sync xhr sending is disabled by default on unload.\n                if (this.connection.sendUnavailableBeacon()) {\n\n                    return;\n                }\n            }\n        }\n\n        this.connection.disconnect();\n\n        if (this.connection.options.sync !== true) {\n            this.connection.flush();\n        }\n    }\n\n    /**\n     *\n     */\n    _initStrophePlugins() {\n        const iceConfig = {\n            jvb: { iceServers: [ ] },\n            p2p: { iceServers: [ ] }\n        };\n\n        const p2pStunServers = (this.options.p2p\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\n\n        if (Array.isArray(p2pStunServers)) {\n            logger.info('P2P STUN servers: ', p2pStunServers);\n            iceConfig.p2p.iceServers = p2pStunServers;\n        }\n\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\n            logger.info('P2P ICE transport policy: ',\n                this.options.p2p.iceTransportPolicy);\n\n            iceConfig.p2p.iceTransportPolicy\n                = this.options.p2p.iceTransportPolicy;\n        }\n\n        this.connection.addConnectionPlugin('emuc', new MucConnectionPlugin(this));\n        this.connection.addConnectionPlugin('jingle', new JingleConnectionPlugin(this, this.eventEmitter, iceConfig));\n        this.connection.addConnectionPlugin('rayo', new RayoConnectionPlugin());\n    }\n\n    /**\n     * Returns details about connection failure. Shard change or is it after\n     * suspend.\n     * @returns {object} contains details about a connection failure.\n     * @private\n     */\n    _getConnectionFailedReasonDetails() {\n        const details = {};\n\n        // check for moving between shard if information is available\n        if (this.options.deploymentInfo\n            && this.options.deploymentInfo.shard\n            && this.connection.lastResponseHeaders) {\n\n            // split headers by line\n            const headersArr = this.connection.lastResponseHeaders\n                .trim().split(/[\\r\\n]+/);\n            const headers = {};\n\n            headersArr.forEach(line => {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n\n                headers[header] = value;\n            });\n\n            /* eslint-disable camelcase */\n            details.shard_changed\n                = this.options.deploymentInfo.shard\n                    !== headers['x-jitsi-shard'];\n            /* eslint-enable camelcase */\n        }\n\n        /* eslint-disable camelcase */\n        // check for possible suspend\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\n        details.time_since_last_success = this.connection.getTimeSinceLastSuccess();\n        /* eslint-enable camelcase */\n\n        return details;\n    }\n\n    /**\n     * Notifies speaker stats component if available that we are the new\n     * dominant speaker in the conference.\n     * @param {String} roomJid - The room jid where the speaker event occurred.\n     */\n    sendDominantSpeakerEvent(roomJid) {\n        // no speaker stats component advertised\n        if (!this.speakerStatsComponentAddress || !roomJid) {\n            return;\n        }\n\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\n\n        msg.c('speakerstats', {\n            xmlns: 'http://jitsi.org/jitmeet',\n            room: roomJid })\n            .up();\n\n        this.connection.send(msg);\n    }\n\n    /**\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\n     * parsing it and checking if it has a field called 'type'.\n     *\n     * @param {string} jsonString check if this string is a valid json string\n     * and contains the special structure.\n     * @returns {boolean, object} if given object is a valid JSON string, return\n     * the json object. Otherwise, returns false.\n     */\n    tryParseJSONAndVerify(jsonString) {\n        try {\n            const json = JSON.parse(jsonString);\n\n            // Handle non-exception-throwing cases:\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\n            // hence the type-checking,\n            // but... JSON.parse(null) returns null, and\n            // typeof null === \"object\",\n            // so we must check for that, too.\n            // Thankfully, null is falsey, so this suffices:\n            if (json && typeof json === 'object') {\n                const type = json[JITSI_MEET_MUC_TYPE];\n\n                if (typeof type !== 'undefined') {\n                    return json;\n                }\n\n                logger.debug('parsing valid json but does not have correct '\n                    + 'structure', 'topic: ', type);\n            }\n        } catch (e) {\n            logger.error(e);\n\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * A private message is received, message that is not addressed to the muc.\n     * We expect private message coming from plugins component if it is\n     * enabled and running.\n     *\n     * @param {string} msg - The message.\n     */\n    _onPrivateMessage(msg) {\n        const from = msg.getAttribute('from');\n\n        if (!(from === this.speakerStatsComponentAddress\n            || from === this.conferenceDurationComponentAddress)) {\n            return true;\n        }\n\n        const jsonMessage = $(msg).find('>json-message')\n            .text();\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\n\n        if (parsedJson\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats'\n            && parsedJson.users) {\n            this.eventEmitter.emit(\n                XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\n        }\n\n        if (parsedJson\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'conference_duration'\n            && parsedJson.created_timestamp) {\n            this.eventEmitter.emit(\n                XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED, parsedJson.created_timestamp);\n        }\n\n        return true;\n    }\n}","/**\n * The media track was removed to the conference.\n */\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\n\n/**\n * Audio levels of a this track was changed.\n * The first argument is a number with audio level value in range [0, 1].\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\n * connection which measured the audio level (one audio track can be added\n * to multiple peer connection at the same time). This argument is optional for\n * local tracks for which we can measure audio level without the peer\n * connection (the value will be <tt>undefined</tt>).\n *\n * NOTE The second argument should be treated as library internal and can be\n * removed at any time.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\n\n/**\n * The audio output of the track was changed.\n */\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\n\n/**\n * A media track mute status was changed.\n */\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\n\n/**\n * The video type(\"camera\" or \"desktop\") of the track was changed.\n */\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\n\n/**\n * Indicates that the track is not receiving any data even though we expect it\n * to receive data (i.e. the stream is not stopped).\n */\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\n\n/**\n * Indicates that the local audio track is not receiving any audio input from\n * the microphone that is currently selected.\n */\nexport const NO_AUDIO_INPUT = 'track.no_audio_input';\n","/**\n * The errors for the connection.\n */\n\n/**\n * Indicates that the connection was dropped with an error which was most likely\n * caused by some networking issues. The dropped term in this context means that\n * the connection was closed unexpectedly (not on user's request).\n *\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\n * could also happen when BOSH request is sent to the server with the session-id\n * that is not know to the server. But this should not happen in sariska-media-transport\n * case as long as the service is configured correctly (there is no bug).\n */\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\n\n/**\n * Not specified errors.\n */\nexport const OTHER_ERROR = 'connection.otherError';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\n\n/**\n * Indicates that the connection was dropped, because of too many 5xx HTTP\n * errors on BOSH requests.\n */\nexport const SERVER_ERROR = 'connection.serverError';\n","// [[Class]] -> type pairs\nexport default {};\n","import arr from \"./arr.js\";\n\nexport default arr.indexOf;\n","/**\n * The events for the media devices.\n */\n\n/**\n * Indicates that the list of available media devices has been changed. The\n * event provides the following parameters to its listeners:\n *\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\n *  MediaDeviceInfo-like objects that are currently connected.\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\n */\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\n\n/**\n * Event emitted when the user granted/blocked a permission for the camera / mic.\n * Used to keep track of the granted permissions on browsers which don't\n * support the Permissions API.\n */\nexport const PERMISSIONS_CHANGED = 'rtc.permissions_changed';\n\n/**\n * Indicates that the environment is currently showing permission prompt to\n * access camera and/or microphone. The event provides the following\n * parameters to its listeners:\n *\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\n *  |'react-native'|'android'} environmentType - type of browser or\n *  other execution environment.\n */\nexport const PERMISSION_PROMPT_IS_SHOWN\n    = 'mediaDevices.permissionPromptIsShown';\n\nexport const SLOW_GET_USER_MEDIA = 'mediaDevices.slowGetUserMedia';\n","// enable/disable different features by changing this configuration file\nexport const initSDKConfig = {\n    disableAudioLevels: true,\n    // useIPv6 - boolean property\n    // disableSimulcast: true //boolean property. Enables/disables simulcast.\n    // enableWindowOnErrorHandler - boolean property (default false). Enables/disables attaching global onerror handler (window.onerror).\n    // disableThirdPartyRequests - if true - callstats will be disabled and the callstats API won't be included.\n    // enableAnalyticsLogging - boolean property (default false). Enables/disables analytics logging.\n    // externalStorage - Object that implements the Storage interface. If specified this object will be used for storing data instead of localStorage.\n    // callStatsCustomScriptUrl - (optional) custom url to access callstats client script\n    // disableRtx - (optional) boolean property (default to false). Enables/disable the use of RTX.\n    // disabledCodec - the mime type of the code that should not be negotiated on the peerconnection.\n    // preferredCodec the mime type of the codec that needs to be made the preferred codec for the connection.\n};\n\nexport const connectionConfig = {\n    hosts: {\n        domain: 'sariska.io',\n        muc: 'muc.sariska.io'\n    },\n    serviceUrl: 'wss://api.sariska.io/api/v1/media/websocket',\n    clientNode: 'https://www.sariska.io',\n    // enableLipSync - (optional) boolean property which enables the lipsync feature. Currently works only in Chrome and is disabled by default.\n};\n\nexport const conferenceConfig = {\n    openBridgeChannel: 'websocket', //- Enables/disables bridge channel. Values can be \"datachannel\", \"websocket\", true (treat it as \"datachannel\"), undefined (treat it as \"datachannel\") and false (don't open any channel). NOTE: we recommend to set that option to true\n    // recordingType - the type of recording to be used\n    // callStatsID - callstats credentials\n    // callStatsSecret - callstats credentials\n    // enableTalkWhileMuted - boolean property. Enables/disables talk while muted detection, by default the value is false/disabled.\n    // ignoreStartMuted - ignores start muted events coming from jicofo.\n    // startSilent - enables silent mode, will mark audio as inactive will not send/receive audio\n    // confID - Used for statistics to identify conference, if tenants are supported will contain tenant and the non lower case variant for the room name.\n    // siteID - (optional) Used for statistics to identify the site where the user is coming from, if tenants are supported it will contain a unique identifier for that tenant. If not provided, the value will be infered from confID\n    // statisticsId - The id to be used as stats instead of default callStatsUsername.\n    // statisticsDisplayName - The display name to be used for stats, used for callstats.\n    // focusUserJid - The real JID of focus participant - can be overridden here\n    // enableNoAudioDetection\n    // enableNoisyMicDetection\n    // enableRemb\n    // enableTcc\n    // useRoomAsSharedDocumentName\n    // channelLastN\n    // startBitrate\n    // stereo\n    // forceJVB121Ratio - \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people conference should be moved to the JVB instead of P2P. The decision is made on the responder side, after ICE succeeds on the P2P connection.\n    hiddenDomain: \"recorder.sariska.io\",\n    // startAudioMuted\n    // startVideoMuted\n    // enableLayerSuspension - if set to 'true', we will cap the video send bitrate when we are told we have not been selected by any endpoints (and therefore the non-thumbnail streams are not in use).\n    // deploymentInfo\n    // shard\n    // userRegion\n    // rttMonitor\n    // enabled\n    // initialDelay\n    // getStatsInterval\n    // analyticsInterval\n    // stunServers\n    e2eping:{\n        pingInterval: -1,\n        // analyticsInterval: 60000,\n    },\n    // pingInterval\n    // abTesting - A/B testing related options\n    // enableSuspendVideoTest\n    // testing\n    // capScreenshareBitrate\n    // p2pTestMode\n    // octo\n    // probability\n    p2p: {\n        // Enables peer to peer mode. When enabled the system will try to\n        // establish a direct connection when there are exactly 2 participants\n        // in the room. If that succeeds the conference will stop sending data\n        // through the JVB and use the peer to peer connection instead. When a\n        // 3rd participant joins the conference will be moved back to the JVB\n        // connection.\n        enabled: false,\n\n        // The STUN servers that will be used in the peer to peer connections\n        // stunServers: [\n        //    { urls: 'stun.l.google.com:19302' }\n        //]\n\n        // Sets the ICE transport policy for the p2p connection. At the time\n        // of this writing the list of possible values are 'all' and 'relay',\n        // but that is subject to change in the future. The enum is defined in\n        // the WebRTC standard:\n        // https://www.w3.org/TR/webrtc/#rtcicetransportpolicy-enum.\n        // If not set, the effective value is 'all'.\n        // iceTransportPolicy: 'all',\n\n        // Provides a way to set the video codec preference on the p2p connection. Acceptable\n        // codec values are 'VP8', 'VP9' and 'H264'.\n        // preferredCodec: 'H264',\n\n        // Provides a way to prevent a video codec from being negotiated on the p2p connection.\n        // disabledCodec: '',\n\n\n        // How long we're going to wait, before going back to P2P after the 3rd\n        // participant has left the conference (to filter out page reload).\n        // backToP2PDelay: 5\n    }\n};\n\n","import * as JitsiTrackErrors from './JitsiTrackErrors';\n\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\n\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\n    = 'Video resolution is not supported: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.SCREENSHARING_USER_CANCELED]\n    = 'User canceled screen sharing prompt';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.SCREENSHARING_GENERIC_ERROR]\n    = 'Unknown error from screensharing';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\n    = 'Unkown error from desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\n    = 'Failed to detect desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\n    = 'Generic getUserMedia error';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\n    = 'User denied permission to use device(s): ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\n    = 'Requested device(s) was/were not found: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\n    = 'Constraint could not be satisfied: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TIMEOUT]\n    = 'Could not start media source. Timeout occured!';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\n    = 'Track has been already disposed';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\n    = 'Track does not have an associated Media Stream';\n\n// FIXME: Using prototype inheritance because otherwise instanceof is not\n// working properly (see https://github.com/babel/babel/issues/3083)\n\n/**\n *\n * Represents an error that occurred to a JitsiTrack. Can represent various\n * types of errors. For error descriptions (@see JitsiTrackErrors).\n *\n * @extends Error\n *\n *\n * @constructor\n * @param {Object|string} error - error object or error name\n * @param {Object|string} (options) - getUserMedia constraints object or\n * error message\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\n * list of getUserMedia requested devices\n */\nfunction JitsiTrackError(error, options, devices) {\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\n        /**\n         * Additional information about original getUserMedia error\n         * and constraints.\n         * @type {{\n         *     error: Object,\n         *     constraints: Object,\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\n         * }}\n         */\n        this.gum = {\n            error,\n            constraints: options,\n            devices: devices && Array.isArray(devices)\n                ? devices.slice(0)\n                : undefined\n        };\n\n        switch (error.name) {\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n        case 'SecurityError':\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'DevicesNotFoundError':\n        case 'NotFoundError':\n            this.name = JitsiTrackErrors.NOT_FOUND;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'ConstraintNotSatisfiedError':\n        case 'OverconstrainedError': {\n            const constraintName = error.constraintName || error.constraint;\n\n            // we treat deviceId as unsupported resolution, as we want to\n            // retry and finally if everything fails to remove deviceId from\n            // mandatory constraints\n            if (options\n                    && options.video\n                    && (!devices || devices.indexOf('video') > -1)\n                    && (constraintName === 'minWidth'\n                        || constraintName === 'maxWidth'\n                        || constraintName === 'minHeight'\n                        || constraintName === 'maxHeight'\n                        || constraintName === 'width'\n                        || constraintName === 'height'\n                        || constraintName === 'deviceId')) {\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + getResolutionFromFailedConstraint(\n                            constraintName,\n                            options);\n            } else {\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + error.constraintName;\n            }\n            break;\n        }\n\n        default:\n            this.name = JitsiTrackErrors.GENERAL;\n            this.message\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\n            break;\n        }\n    } else if (typeof error === 'string') {\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\n            this.name = error;\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\n        } else {\n            // this is some generic error that do not fit any of our\n            // pre-defined errors, so don't give it any specific name, just\n            // store message\n            this.message = error;\n        }\n    } else {\n        throw new Error('Invalid arguments');\n    }\n\n    this.stack = error.stack || (new Error()).stack;\n}\n\nJitsiTrackError.prototype = Object.create(Error.prototype);\nJitsiTrackError.prototype.constructor = JitsiTrackError;\n\n/**\n * Gets failed resolution constraint from corresponding object.\n * @param {string} failedConstraintName\n * @param {Object} constraints\n * @returns {string|number}\n */\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\n    if (constraints && constraints.video && constraints.video.mandatory) {\n        switch (failedConstraintName) {\n        case 'width':\n            return constraints.video.mandatory.minWidth;\n        case 'height':\n            return constraints.video.mandatory.minHeight;\n        default:\n            return constraints.video.mandatory[failedConstraintName] || '';\n        }\n    }\n\n    return '';\n}\n\nexport default JitsiTrackError;\n","import class2type from \"./class2type.js\";\n\nexport default class2type.toString;\n","import class2type from '../var/class2type.js';\nimport toString from '../var/toString.js';\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\treturn typeof obj === \"object\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n\nexport default toType;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import EventEmitter from 'events';\n\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport Statistics from './modules/statistics/statistics';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\n\nconst AUDIO_PERMISSION_NAME = 'microphone';\nconst PERMISSION_GRANTED_STATUS = 'granted';\nconst VIDEO_PERMISSION_NAME = 'camera';\n\n/**\n * Media devices utilities for Jitsi.\n */\nclass JitsiMediaDevices {\n    /**\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\n     * instance of this class.\n     */\n    constructor() {\n        this._eventEmitter = new EventEmitter();\n        this._permissions = {};\n\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_CHANGED,\n            devices =>\n                this._eventEmitter.emit(\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\n                    devices));\n        RTC.addListener(\n            RTCEvents.DEVICE_LIST_AVAILABLE,\n            devices =>\n                this._logOutputDevice(\n                    this.getAudioOutputDevice(),\n                    devices));\n\n        // We would still want to update the permissions cache in case the permissions API is not supported.\n        RTC.addListener(\n            RTCEvents.PERMISSIONS_CHANGED,\n            permissions => this._handlePermissionsChange(permissions));\n\n        // Test if the W3C Permissions API is implemented and the 'camera' and 'microphone' permissions are\n        // implemented. If supported add onchange listeners.\n        this._permissionsApiSupported = new Promise(resolve => {\n            if (!navigator.permissions) {\n                resolve(false);\n\n                return;\n            }\n\n            const self = this;\n\n            const promises = [];\n\n            promises.push(navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\n                .then(status => {\n                    this._handlePermissionsChange({\n                        [MediaType.VIDEO]: this._parsePermissionState(status)\n                    });\n                    status.onchange = function() {\n                        try {\n                            self._handlePermissionsChange({\n                                [MediaType.VIDEO]: self._parsePermissionState(this)\n                            });\n                        } catch (error) {\n                            // Nothing to do.\n                        }\n                    };\n\n                    return true;\n                })\n                .catch(() => false));\n\n            promises.push(navigator.permissions.query({ name: AUDIO_PERMISSION_NAME })\n                .then(status => {\n                    this._handlePermissionsChange({\n                        [MediaType.AUDIO]: this._parsePermissionState(status)\n                    });\n                    status.onchange = function() {\n                        try {\n                            self._handlePermissionsChange({\n                                [MediaType.AUDIO]: self._parsePermissionState(this)\n                            });\n                        } catch (error) {\n                            // Nothing to do.\n                        }\n                    };\n\n                    return true;\n                })\n                .catch(() => false));\n\n            Promise.all(promises).then(results => resolve(results.every(supported => supported)));\n\n        });\n    }\n\n\n    /**\n     * Parses a PermissionState object and returns true for granted and false otherwise.\n     *\n     * @param {PermissionState} permissionStatus - The PermissionState object retrieved from the Permissions API.\n     * @returns {boolean} - True for granted and false for denied.\n     * @throws {TypeError}\n     */\n    _parsePermissionState(permissionStatus = {}) {\n        // The status attribute is deprecated, and state\n        // should be used instead, but check both for now\n        // for backwards compatibility.\n        const status = permissionStatus.state || permissionStatus.status;\n\n        if (typeof status !== 'string') {\n            throw new TypeError();\n        }\n\n        return status === PERMISSION_GRANTED_STATUS;\n    }\n\n    /**\n     * Updates the local granted/denied permissions cache. A permissions might be\n     * granted, denied, or undefined. This is represented by having its media\n     * type key set to {@code true} or {@code false} respectively.\n     *\n     * @param {Object} permissions - Object with the permissions.\n     */\n    _handlePermissionsChange(permissions) {\n        const hasPermissionsChanged\n            = [ MediaType.AUDIO, MediaType.VIDEO ]\n                .some(type => type in permissions && permissions[type] !== this._permissions[type]);\n\n        if (hasPermissionsChanged) {\n            this._permissions = {\n                ...this._permissions,\n                ...permissions\n            };\n            this._eventEmitter.emit(JitsiMediaDevicesEvents.PERMISSIONS_CHANGED, this._permissions);\n\n            if (this._permissions[MediaType.AUDIO] || this._permissions[MediaType.VIDEO]) {\n                // Triggering device list update when the permissiions are granted in order to update\n                // the labels the devices.\n                // eslint-disable-next-line no-empty-function\n                this.enumerateDevices(() => {});\n            }\n        }\n    }\n\n    /**\n     * Gathers data and sends it to statistics.\n     * @param deviceID the device id to log\n     * @param devices list of devices\n     */\n    _logOutputDevice(deviceID, devices) {\n        const device\n            = devices.find(\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n\n    /**\n     * Executes callback with list of media devices connected.\n     * @param {function} callback\n     */\n    enumerateDevices(callback) {\n        RTC.enumerateDevices(callback);\n    }\n\n    /**\n     * Checks if its possible to enumerate available cameras/micropones.\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     */\n    isDeviceListAvailable() {\n        return RTC.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return RTC.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Checks if the permission for the given device was granted.\n     *\n     * @param {'audio'|'video'} [type] - type of devices to check,\n     *      undefined stands for both 'audio' and 'video' together\n     * @returns {Promise<boolean>}\n     */\n    isDevicePermissionGranted(type) {\n        return new Promise(resolve => {\n            // Shortcut: first check if we already know the permission was\n            // granted.\n            if (type in this._permissions) {\n                resolve(this._permissions[type]);\n\n                return;\n            }\n\n            // Check using the Permissions API.\n            this._permissionsApiSupported.then(supported => {\n                if (!supported) {\n                    resolve(false);\n\n                    return;\n                }\n\n                const promises = [];\n\n                switch (type) {\n                case MediaType.VIDEO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    break;\n                case MediaType.AUDIO:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                    break;\n                default:\n                    promises.push(\n                        navigator.permissions.query({\n                            name: VIDEO_PERMISSION_NAME\n                        }));\n                    promises.push(\n                        navigator.permissions.query({\n                            name: AUDIO_PERMISSION_NAME\n                        }));\n                }\n\n                Promise.all(promises).then(\n                    results => resolve(results.every(permissionStatus => {\n                        try {\n                            return this._parsePermissionState(permissionStatus);\n                        } catch {\n                            return false;\n                        }\n                    })),\n                    () => resolve(false)\n                );\n            });\n        });\n    }\n\n    /**\n     * Returns true if it is possible to be simultaneously capturing audio\n     * from more than one device.\n     *\n     * @returns {boolean}\n     */\n    isMultipleAudioInputSupported() {\n        return !browser.isFirefox();\n    }\n\n    /**\n     * Returns currently used audio output device id, 'default' stands\n     * for default device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return RTC.getAudioOutputDevice();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\n     *      default device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\n\n        if (availableDevices.length > 0) {\n            // if we have devices info report device to stats\n            // normally this will not happen on startup as this method is called\n            // too early. This will happen only on user selection of new device\n            this._logOutputDevice(\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\n        }\n\n        return RTC.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Adds an event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    addEventListener(event, handler) {\n        this._eventEmitter.addListener(event, handler);\n    }\n\n    /**\n     * Removes event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    removeEventListener(event, handler) {\n        this._eventEmitter.removeListener(event, handler);\n    }\n\n    /**\n     * Emits an event.\n     * @param {string} event - event name\n     */\n    emitEvent(event, ...args) {\n        this._eventEmitter.emit(event, ...args);\n    }\n}\n\nexport default new JitsiMediaDevices();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\n\nexport default nodeName;\n","import document from \"./document.js\";\n\nexport default document.documentElement;\n","import arr from \"./arr.js\";\n\nexport default arr.pop;\n","// https://www.w3.org/TR/css3-selectors/#whitespace\nexport default \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n","import document from \"./document.js\";\n\nexport default document.documentMode;\n","import isIE from '../var/isIE.js';\nimport whitespace from \"./var/whitespace.js\";\n\nvar rbuggyQSA = isIE && new RegExp(\n\n\t// Support: IE 9 - 11+\n\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\":enabled|:disabled|\" +\n\n\t// Support: IE 11+\n\t// IE 11 doesn't find elements on a `[name='']` query in some cases.\n\t// Adding a temporary attribute to the document before the selection works\n\t// around the issue.\n\t\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\twhitespace + \"*(?:''|\\\"\\\")\"\n\n);\n\nexport default rbuggyQSA;\n","import jQuery from '../core.js';\n\n// Note: an element does not contain itself\njQuery.contains = function( a, b ) {\n\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\tbup = b && b.parentNode;\n\n\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\n\t\t// Support: IE 9 - 11+\n\t\t// IE doesn't have `contains` on SVG.\n\t\tadown.contains ?\n\t\t\tadown.contains( bup ) :\n\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t) );\n};\n","import jQuery from '../core.js';\n\n// CSS string/identifier serialization\n// https://drafts.csswg.org/cssom/#common-serializing-idioms\nvar rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;\n\nfunction fcssescape( ch, asCodePoint ) {\n\tif ( asCodePoint ) {\n\n\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\tif ( ch === \"\\0\" ) {\n\t\t\treturn \"\\uFFFD\";\n\t\t}\n\n\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t}\n\n\t// Other potentially-special ASCII characters get backslash-escaped\n\treturn \"\\\\\" + ch;\n}\n\njQuery.escapeSelector = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n","import arr from \"./arr.js\";\n\nexport default arr.sort;\n","import jQuery from '../core.js';\nimport document from '../var/document.js';\nimport sort from '../var/sort.js';\n\nlet hasDuplicate;\n\n// Document order sorting\nfunction sortOrder(a, b) {\n\n    // Flag for duplicate removal\n    if (a === b) {\n        hasDuplicate = true;\n\n        return 0;\n    }\n\n    // Sort on method existence if only one input has compareDocumentPosition\n    let compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n    if (compare) {\n        return compare;\n    }\n\n    // Calculate position if both inputs belong to the same document\n    // Support: IE 11+\n    // IE sometimes throws a \"Permission denied\" error when strict-comparing\n    // two documents; shallow comparisons work.\n    // eslint-disable-next-line eqeqeq\n    compare = (a.ownerDocument || a) == (b.ownerDocument || b)\n        ? a.compareDocumentPosition(b)\n\n    // Otherwise we know they are disconnected\n        : 1;\n\n    // Disconnected nodes\n    if (compare & 1) {\n\n        // Choose the first element that is related to the document\n        // Support: IE 11+\n        // IE sometimes throws a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n        if (a == document || a.ownerDocument == document\n\t\t\t&& jQuery.contains(document, a)) {\n            return -1;\n        }\n\n        // Support: IE 11+\n        // IE sometimes throws a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n        if (b == document || b.ownerDocument == document\n\t\t\t&& jQuery.contains(document, b)) {\n            return 1;\n        }\n\n        // Maintain original order\n        return 0;\n    }\n\n    return compare & 4 ? -1 : 1;\n}\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\njQuery.uniqueSort = function(results) {\n    let elem,\n        duplicates = [],\n        j = 0,\n        i = 0;\n\n    hasDuplicate = false;\n\n    sort.call(results, sortOrder);\n\n    if (hasDuplicate) {\n        while (elem = results[i++]) {\n            if (elem === results[i]) {\n                j = duplicates.push(i);\n            }\n        }\n        while (j--) {\n            results.splice(duplicates[j], 1);\n        }\n    }\n\n    return results;\n};\n","import jQuery from \"./core.js\";\nimport nodeName from \"./core/nodeName.js\";\nimport document from \"./var/document.js\";\nimport documentElement from \"./var/documentElement.js\";\nimport indexOf from \"./var/indexOf.js\";\nimport pop from \"./var/pop.js\";\nimport push from \"./var/push.js\";\nimport whitespace from \"./selector/var/whitespace.js\";\nimport rbuggyQSA from \"./selector/rbuggyQSA.js\";\nimport isIE from \"./var/isIE.js\";\n\n// The following utils are attached directly to the jQuery object.\nimport \"./selector/contains.js\";\nimport \"./selector/escapeSelector.js\";\nimport \"./selector/uniqueSort.js\";\n\nvar preferredDoc = document,\n    matches = documentElement.matches || documentElement.msMatchesSelector;\n\n( function() {\n\nvar i,\n    Expr,\n    outermostContext,\n\n    // Local document vars\n    document,\n    documentElement,\n    documentIsHTML,\n\n    // Instance-specific data\n    expando = jQuery.expando,\n    dirruns = 0,\n    done = 0,\n    classCache = createCache(),\n    tokenCache = createCache(),\n    compilerCache = createCache(),\n    nonnativeSelectorCache = createCache(),\n\n    booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|\" +\n        \"loop|multiple|open|readonly|required|scoped\",\n\n    // Regular expressions\n\n    // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n        \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n    // Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n        // Operator (capture 2)\n        \"*([*^$|!~]?=)\" + whitespace +\n\n        // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n        \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n        whitespace + \"*\\\\]\",\n\n    pseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n        // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n        // 1. quoted (capture 3; capture 4 or capture 5)\n        \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n        // 2. simple (capture 6)\n        \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n        // 3. anything else (capture 2)\n        \".*\" +\n        \")\\\\)|)\",\n\n    // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n    rtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n    rcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n    rcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" +\n        whitespace + \"*\" ),\n    rdescend = new RegExp( whitespace + \"|>\" ),\n\n    rpseudo = new RegExp( pseudos ),\n    ridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n    matchExpr = {\n        ID: new RegExp( \"^#(\" + identifier + \")\" ),\n        CLASS: new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n        TAG: new RegExp( \"^(\" + identifier + \"|[*])\" ),\n        ATTR: new RegExp( \"^\" + attributes ),\n        PSEUDO: new RegExp( \"^\" + pseudos ),\n        CHILD: new RegExp(\n            \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n                whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n                whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n        bool: new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n        // For use in libraries implementing .is()\n        // We use this for POS matching in `select`\n        needsContext: new RegExp( \"^\" + whitespace +\n            \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n            \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n    },\n\n    rinputs = /^(?:input|select|textarea|button)$/i,\n    rheader = /^h\\d$/i,\n\n    // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n    rsibling = /[+~]/,\n\n    // CSS escapes\n    // https://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n        \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n    funescape = function( escape, nonHex ) {\n        var high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n        if ( nonHex ) {\n\n            // Strip the backslash prefix from a non-hex escape sequence\n            return nonHex;\n        }\n\n        // Replace a hexadecimal escape sequence with the encoded Unicode code point\n        // Support: IE <=11+\n        // For values outside the Basic Multilingual Plane (BMP), manually construct a\n        // surrogate pair\n        return high < 0 ?\n            String.fromCharCode( high + 0x10000 ) :\n            String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n    },\n\n    // Used for iframes; see `setDocument`.\n    // Support: IE 9 - 11+\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE.\n    unloadHandler = function() {\n        setDocument();\n    },\n\n    inDisabledFieldset = addCombinator(\n        function( elem ) {\n            return elem.disabled === true && nodeName( elem, \"fieldset\" );\n        },\n        { dir: \"parentNode\", next: \"legend\" }\n    );\n\nfunction selectorError( msg ) {\n    throw new Error( \"Syntax error, unrecognized expression: \" + msg );\n}\n\nfunction find( selector, context, results, seed ) {\n    var m, i, elem, nid, match, groups, newSelector,\n        newContext = context && context.ownerDocument,\n\n        // nodeType defaults to 9, since context defaults to document\n        nodeType = context ? context.nodeType : 9;\n\n    results = results || [];\n\n    // Return early from calls with invalid selector or context\n    if ( typeof selector !== \"string\" || !selector ||\n        nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n        return results;\n    }\n\n    // Try to shortcut find operations (as opposed to filters) in HTML documents\n    if ( !seed ) {\n        setDocument( context );\n        context = context || document;\n\n        if ( documentIsHTML ) {\n\n            // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n            // (excepting DocumentFragment context, where the methods don't exist)\n            if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n                // ID selector\n                if ( ( m = match[ 1 ] ) ) {\n\n                    // Document context\n                    if ( nodeType === 9 ) {\n                        if ( ( elem = context.getElementById( m ) ) ) {\n                            push.call( results, elem );\n                        }\n                        return results;\n\n                    // Element context\n                    } else {\n                        if ( newContext && ( elem = newContext.getElementById( m ) ) &&\n                            jQuery.contains( context, elem ) ) {\n\n                            push.call( results, elem );\n                            return results;\n                        }\n                    }\n\n                // Type selector\n                } else if ( match[ 2 ] ) {\n                    push.apply( results, context.getElementsByTagName( selector ) );\n                    return results;\n\n                // Class selector\n                } else if ( ( m = match[ 3 ] ) && context.getElementsByClassName ) {\n                    push.apply( results, context.getElementsByClassName( m ) );\n                    return results;\n                }\n            }\n\n            // Take advantage of querySelectorAll\n            if ( !nonnativeSelectorCache[ selector + \" \" ] &&\n                ( !rbuggyQSA || !rbuggyQSA.test( selector ) ) ) {\n\n                newSelector = selector;\n                newContext = context;\n\n                // qSA considers elements outside a scoping root when evaluating child or\n                // descendant combinators, which is not what we want.\n                // In such cases, we work around the behavior by prefixing every selector in the\n                // list with an ID selector referencing the scope context.\n                // The technique has to be used as well when a leading combinator is used\n                // as such selectors are not recognized by querySelectorAll.\n                // Thanks to Andrew Dupont for this technique.\n                if ( nodeType === 1 &&\n                    ( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n                    // Expand context for sibling selectors\n                    newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n                        context;\n\n                    // Outside of IE, if we're not changing the context we can\n                    // use :scope instead of an ID.\n                    if ( newContext !== context || isIE ) {\n\n                        // Capture the context ID, setting it first if necessary\n                        if ( ( nid = context.getAttribute( \"id\" ) ) ) {\n                            nid = jQuery.escapeSelector( nid );\n                        } else {\n                            context.setAttribute( \"id\", ( nid = expando ) );\n                        }\n                    }\n\n                    // Prefix every selector in the list\n                    groups = tokenize( selector );\n                    i = groups.length;\n                    while ( i-- ) {\n                        groups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n                            toSelector( groups[ i ] );\n                    }\n                    newSelector = groups.join( \",\" );\n                }\n\n                try {\n                    push.apply( results,\n                        newContext.querySelectorAll( newSelector )\n                    );\n                    return results;\n                } catch ( qsaError ) {\n                    nonnativeSelectorCache( selector, true );\n                } finally {\n                    if ( nid === expando ) {\n                        context.removeAttribute( \"id\" );\n                    }\n                }\n            }\n        }\n    }\n\n    // All others\n    return select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *  property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *  deleting the oldest entry\n */\nfunction createCache() {\n    var keys = [];\n\n    function cache( key, value ) {\n\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n            // Only keep the most recent entries\n            delete cache[ keys.shift() ];\n        }\n        return ( cache[ key + \" \" ] = value );\n    }\n    return cache;\n}\n\n/**\n * Mark a function for special use by jQuery selector module\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n    fn[ expando ] = true;\n    return fn;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n    return function( elem ) {\n        return nodeName( elem, \"input\" ) && elem.type === type;\n    };\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n    return function( elem ) {\n        return ( nodeName( elem, \"input\" ) || nodeName( elem, \"button\" ) ) &&\n            elem.type === type;\n    };\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n    // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n    return function( elem ) {\n\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if ( \"form\" in elem ) {\n\n            // Check for inherited disabledness on relevant non-disabled elements:\n            // * listed form-associated elements in a disabled fieldset\n            //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n            //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n            // * option elements in a disabled optgroup\n            //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n            // All such elements have a \"form\" property.\n            if ( elem.parentNode && elem.disabled === false ) {\n\n                // Option elements defer to a parent optgroup if present\n                if ( \"label\" in elem ) {\n                    if ( \"label\" in elem.parentNode ) {\n                        return elem.parentNode.disabled === disabled;\n                    } else {\n                        return elem.disabled === disabled;\n                    }\n                }\n\n                // Support: IE 6 - 11+\n                // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n                return elem.isDisabled === disabled ||\n\n                    // Where there is no isDisabled, check manually\n                    elem.isDisabled !== !disabled &&\n                        inDisabledFieldset( elem ) === disabled;\n            }\n\n            return elem.disabled === disabled;\n\n        // Try to winnow out elements that can't be disabled before trusting the disabled property.\n        // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n        // even exist on them, let alone have a boolean value.\n        } else if ( \"label\" in elem ) {\n            return elem.disabled === disabled;\n        }\n\n        // Remaining elements are neither :enabled nor :disabled\n        return false;\n    };\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n    return markFunction( function( argument ) {\n        argument = +argument;\n        return markFunction( function( seed, matches ) {\n            var j,\n                matchIndexes = fn( [], seed.length, argument ),\n                i = matchIndexes.length;\n\n            // Match elements found at the specified indexes\n            while ( i-- ) {\n                if ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n                    seed[ j ] = !( matches[ j ] = seed[ j ] );\n                }\n            }\n        } );\n    } );\n}\n\n/**\n * Checks a node for validity as a jQuery selector context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n    return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [node] An element or document object to use to set the document\n */\nfunction setDocument( node ) {\n    var subWindow,\n        doc = node ? node.ownerDocument || node : preferredDoc;\n\n    // Return early if doc is invalid or already selected\n    // Support: IE 11+\n    // IE sometimes throws a \"Permission denied\" error when strict-comparing\n    // two documents; shallow comparisons work.\n    // eslint-disable-next-line eqeqeq\n    if ( doc == document || doc.nodeType !== 9 ) {\n        return;\n    }\n\n    // Update global variables\n    document = doc;\n    documentElement = document.documentElement;\n    documentIsHTML = !jQuery.isXMLDoc( document );\n\n    // Support: IE 9 - 11+\n    // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n    // Support: IE 11+\n    // IE sometimes throws a \"Permission denied\" error when strict-comparing\n    // two documents; shallow comparisons work.\n    // eslint-disable-next-line eqeqeq\n    if ( isIE && preferredDoc != document &&\n        ( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n        subWindow.addEventListener( \"unload\", unloadHandler );\n    }\n}\n\nfind.matches = function( expr, elements ) {\n    return find( expr, null, null, elements );\n};\n\nfind.matchesSelector = function( elem, expr ) {\n    setDocument( elem );\n\n    if ( documentIsHTML &&\n        !nonnativeSelectorCache[ expr + \" \" ] &&\n        ( !rbuggyQSA || !rbuggyQSA.test( expr ) ) ) {\n\n        try {\n            return matches.call( elem, expr );\n        } catch ( e ) {\n            nonnativeSelectorCache( expr, true );\n        }\n    }\n\n    return find( expr, document, null, [ elem ] ).length > 0;\n};\n\nExpr = jQuery.expr = {\n\n    // Can be adjusted by the user\n    cacheLength: 50,\n\n    createPseudo: markFunction,\n\n    match: matchExpr,\n\n    find: {\n        ID: function( id, context ) {\n            if ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n                var elem = context.getElementById( id );\n                return elem ? [ elem ] : [];\n            }\n        },\n\n        TAG: function( tag, context ) {\n            if ( typeof context.getElementsByTagName !== \"undefined\" ) {\n                return context.getElementsByTagName( tag );\n\n                // DocumentFragment nodes don't have gEBTN\n            } else {\n                return context.querySelectorAll( tag );\n            }\n        },\n\n        CLASS: function( className, context ) {\n            if ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n                return context.getElementsByClassName( className );\n            }\n        }\n    },\n\n    relative: {\n        \">\": { dir: \"parentNode\", first: true },\n        \" \": { dir: \"parentNode\" },\n        \"+\": { dir: \"previousSibling\", first: true },\n        \"~\": { dir: \"previousSibling\" }\n    },\n\n    preFilter: {\n        ATTR: function( match ) {\n            match[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n            // Move the given value to match[3] whether quoted or unquoted\n            match[ 3 ] = ( match[ 3 ] || match[ 4 ] || match[ 5 ] || \"\" )\n                .replace( runescape, funescape );\n\n            if ( match[ 2 ] === \"~=\" ) {\n                match[ 3 ] = \" \" + match[ 3 ] + \" \";\n            }\n\n            return match.slice( 0, 4 );\n        },\n\n        CHILD: function( match ) {\n\n            /* matches from matchExpr[\"CHILD\"]\n                1 type (only|nth|...)\n                2 what (child|of-type)\n                3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n                4 xn-component of xn+y argument ([+-]?\\d*n|)\n                5 sign of xn-component\n                6 x of xn-component\n                7 sign of y-component\n                8 y of y-component\n            */\n            match[ 1 ] = match[ 1 ].toLowerCase();\n\n            if ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n                // nth-* requires argument\n                if ( !match[ 3 ] ) {\n                    selectorError( match[ 0 ] );\n                }\n\n                // numeric x and y parameters for Expr.filter.CHILD\n                // remember that false/true cast respectively to 0/1\n                match[ 4 ] = +( match[ 4 ] ?\n                    match[ 5 ] + ( match[ 6 ] || 1 ) :\n                    2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" )\n                );\n                match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n            // other types prohibit arguments\n            } else if ( match[ 3 ] ) {\n                selectorError( match[ 0 ] );\n            }\n\n            return match;\n        },\n\n        PSEUDO: function( match ) {\n            var excess,\n                unquoted = !match[ 6 ] && match[ 2 ];\n\n            if ( matchExpr.CHILD.test( match[ 0 ] ) ) {\n                return null;\n            }\n\n            // Accept quoted arguments as-is\n            if ( match[ 3 ] ) {\n                match[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n            // Strip excess characters from unquoted arguments\n            } else if ( unquoted && rpseudo.test( unquoted ) &&\n\n                // Get excess from tokenize (recursively)\n                ( excess = tokenize( unquoted, true ) ) &&\n\n                // advance to the next closing parenthesis\n                ( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n                // excess is a negative index\n                match[ 0 ] = match[ 0 ].slice( 0, excess );\n                match[ 2 ] = unquoted.slice( 0, excess );\n            }\n\n            // Return only captures needed by the pseudo filter method (type and argument)\n            return match.slice( 0, 3 );\n        }\n    },\n\n    filter: {\n        ID: function( id ) {\n            var attrId = id.replace( runescape, funescape );\n            return function( elem ) {\n                return elem.getAttribute( \"id\" ) === attrId;\n            };\n        },\n\n        TAG: function( nodeNameSelector ) {\n            var expectedNodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n            return nodeNameSelector === \"*\" ?\n\n                function() {\n                    return true;\n                } :\n\n                function( elem ) {\n                    return nodeName( elem, expectedNodeName );\n                };\n        },\n\n        CLASS: function( className ) {\n            var pattern = classCache[ className + \" \" ];\n\n            return pattern ||\n                ( pattern = new RegExp( \"(^|\" + whitespace + \")\" + className +\n                    \"(\" + whitespace + \"|$)\" ) ) &&\n                classCache( className, function( elem ) {\n                    return pattern.test(\n                        typeof elem.className === \"string\" && elem.className ||\n                            typeof elem.getAttribute !== \"undefined\" &&\n                                elem.getAttribute( \"class\" ) ||\n                            \"\"\n                    );\n                } );\n        },\n\n        ATTR: function( name, operator, check ) {\n            return function( elem ) {\n                var result = jQuery.attr( elem, name );\n\n                if ( result == null ) {\n                    return operator === \"!=\";\n                }\n                if ( !operator ) {\n                    return true;\n                }\n\n                result += \"\";\n\n                if ( operator === \"=\" ) {\n                    return result === check;\n                }\n                if ( operator === \"!=\" ) {\n                    return result !== check;\n                }\n                if ( operator === \"^=\" ) {\n                    return check && result.indexOf( check ) === 0;\n                }\n                if ( operator === \"*=\" ) {\n                    return check && result.indexOf( check ) > -1;\n                }\n                if ( operator === \"$=\" ) {\n                    return check && result.slice( -check.length ) === check;\n                }\n                if ( operator === \"~=\" ) {\n                    return ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" )\n                        .indexOf( check ) > -1;\n                }\n                if ( operator === \"|=\" ) {\n                    return result === check || result.slice( 0, check.length + 1 ) === check + \"-\";\n                }\n\n                return false;\n            };\n        },\n\n        CHILD: function( type, what, _argument, first, last ) {\n            var simple = type.slice( 0, 3 ) !== \"nth\",\n                forward = type.slice( -4 ) !== \"last\",\n                ofType = what === \"of-type\";\n\n            return first === 1 && last === 0 ?\n\n                // Shortcut for :nth-*(n)\n                function( elem ) {\n                    return !!elem.parentNode;\n                } :\n\n                function( elem, _context, xml ) {\n                    var cache, outerCache, node, nodeIndex, start,\n                        dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                        parent = elem.parentNode,\n                        name = ofType && elem.nodeName.toLowerCase(),\n                        useCache = !xml && !ofType,\n                        diff = false;\n\n                    if ( parent ) {\n\n                        // :(first|last|only)-(child|of-type)\n                        if ( simple ) {\n                            while ( dir ) {\n                                node = elem;\n                                while ( ( node = node[ dir ] ) ) {\n                                    if ( ofType ?\n                                        nodeName( node, name ) :\n                                        node.nodeType === 1 ) {\n\n                                        return false;\n                                    }\n                                }\n\n                                // Reverse direction for :only-* (if we haven't yet done so)\n                                start = dir = type === \"only\" && !start && \"nextSibling\";\n                            }\n                            return true;\n                        }\n\n                        start = [ forward ? parent.firstChild : parent.lastChild ];\n\n                        // non-xml :nth-child(...) stores cache data on `parent`\n                        if ( forward && useCache ) {\n\n                            // Seek `elem` from a previously-cached index\n                            outerCache = parent[ expando ] || ( parent[ expando ] = {} );\n                            cache = outerCache[ type ] || [];\n                            nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n                            diff = nodeIndex && cache[ 2 ];\n                            node = nodeIndex && parent.childNodes[ nodeIndex ];\n\n                            while ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n                                // Fallback to seeking `elem` from the start\n                                ( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n                                // When found, cache indexes on `parent` and break\n                                if ( node.nodeType === 1 && ++diff && node === elem ) {\n                                    outerCache[ type ] = [ dirruns, nodeIndex, diff ];\n                                    break;\n                                }\n                            }\n\n                        } else {\n\n                            // Use previously-cached element index if available\n                            if ( useCache ) {\n                                outerCache = elem[ expando ] || ( elem[ expando ] = {} );\n                                cache = outerCache[ type ] || [];\n                                nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n                                diff = nodeIndex;\n                            }\n\n                            // xml :nth-child(...)\n                            // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                            if ( diff === false ) {\n\n                                // Use the same loop as above to seek `elem` from the start\n                                while ( ( node = ++nodeIndex && node && node[ dir ] ||\n                                    ( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n                                    if ( ( ofType ?\n                                        nodeName( node, name ) :\n                                        node.nodeType === 1 ) &&\n                                        ++diff ) {\n\n                                        // Cache the index of each encountered element\n                                        if ( useCache ) {\n                                            outerCache = node[ expando ] ||\n                                                ( node[ expando ] = {} );\n                                            outerCache[ type ] = [ dirruns, diff ];\n                                        }\n\n                                        if ( node === elem ) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n\n                        // Incorporate the offset, then check against cycle size\n                        diff -= last;\n                        return diff === first || ( diff % first === 0 && diff / first >= 0 );\n                    }\n                };\n        },\n\n        PSEUDO: function( pseudo, argument ) {\n\n            // pseudo-class names are case-insensitive\n            // https://www.w3.org/TR/selectors/#pseudo-classes\n            // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n            // Remember that setFilters inherits from pseudos\n            var args,\n                fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n                    selectorError( \"unsupported pseudo: \" + pseudo );\n\n            // The user may use createPseudo to indicate that\n            // arguments are needed to create the filter function\n            // just as jQuery does\n            if ( fn[ expando ] ) {\n                return fn( argument );\n            }\n\n            // But maintain support for old signatures\n            if ( fn.length > 1 ) {\n                args = [ pseudo, pseudo, \"\", argument ];\n                return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n                    markFunction( function( seed, matches ) {\n                        var idx,\n                            matched = fn( seed, argument ),\n                            i = matched.length;\n                        while ( i-- ) {\n                            idx = indexOf.call( seed, matched[ i ] );\n                            seed[ idx ] = !( matches[ idx ] = matched[ i ] );\n                        }\n                    } ) :\n                    function( elem ) {\n                        return fn( elem, 0, args );\n                    };\n            }\n\n            return fn;\n        }\n    },\n\n    pseudos: {\n\n        // Potentially complex pseudos\n        not: markFunction( function( selector ) {\n\n            // Trim the selector passed to compile\n            // to avoid treating leading and trailing\n            // spaces as combinators\n            var input = [],\n                results = [],\n                matcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n            return matcher[ expando ] ?\n                markFunction( function( seed, matches, _context, xml ) {\n                    var elem,\n                        unmatched = matcher( seed, null, xml, [] ),\n                        i = seed.length;\n\n                    // Match elements unmatched by `matcher`\n                    while ( i-- ) {\n                        if ( ( elem = unmatched[ i ] ) ) {\n                            seed[ i ] = !( matches[ i ] = elem );\n                        }\n                    }\n                } ) :\n                function( elem, _context, xml ) {\n                    input[ 0 ] = elem;\n                    matcher( input, null, xml, results );\n\n                    // Don't keep the element (issue #299)\n                    input[ 0 ] = null;\n                    return !results.pop();\n                };\n        } ),\n\n        has: markFunction( function( selector ) {\n            return function( elem ) {\n                return find( selector, elem ).length > 0;\n            };\n        } ),\n\n        contains: markFunction( function( text ) {\n            text = text.replace( runescape, funescape );\n            return function( elem ) {\n                return ( elem.textContent || jQuery.text( elem ) ).indexOf( text ) > -1;\n            };\n        } ),\n\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // https://www.w3.org/TR/selectors/#lang-pseudo\n        lang: markFunction( function( lang ) {\n\n            // lang value must be a valid identifier\n            if ( !ridentifier.test( lang || \"\" ) ) {\n                selectorError( \"unsupported lang: \" + lang );\n            }\n            lang = lang.replace( runescape, funescape ).toLowerCase();\n            return function( elem ) {\n                var elemLang;\n                do {\n                    if ( ( elemLang = documentIsHTML ?\n                        elem.lang :\n                        elem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n                        elemLang = elemLang.toLowerCase();\n                        return elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n                    }\n                } while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n                return false;\n            };\n        } ),\n\n        // Miscellaneous\n        target: function( elem ) {\n            var hash = window.location && window.location.hash;\n            return hash && hash.slice( 1 ) === elem.id;\n        },\n\n        root: function( elem ) {\n            return elem === documentElement;\n        },\n\n        focus: function( elem ) {\n            return elem === document.activeElement &&\n                document.hasFocus() &&\n                !!( elem.type || elem.href || ~elem.tabIndex );\n        },\n\n        // Boolean properties\n        enabled: createDisabledPseudo( false ),\n        disabled: createDisabledPseudo( true ),\n\n        checked: function( elem ) {\n\n            // In CSS3, :checked should return both checked and selected elements\n            // https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n            return ( nodeName( elem, \"input\" ) && !!elem.checked ) ||\n                ( nodeName( elem, \"option\" ) && !!elem.selected );\n        },\n\n        selected: function( elem ) {\n\n            // Support: IE <=11+\n            // Accessing the selectedIndex property\n            // forces the browser to treat the default option as\n            // selected when in an optgroup.\n            if ( isIE && elem.parentNode ) {\n                // eslint-disable-next-line no-unused-expressions\n                elem.parentNode.selectedIndex;\n            }\n\n            return elem.selected === true;\n        },\n\n        // Contents\n        empty: function( elem ) {\n\n            // https://www.w3.org/TR/selectors/#empty-pseudo\n            // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n            //   but not by others (comment: 8; processing instruction: 7; etc.)\n            // nodeType < 6 works because attributes (2) do not appear as children\n            for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n                if ( elem.nodeType < 6 ) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        parent: function( elem ) {\n            return !Expr.pseudos.empty( elem );\n        },\n\n        // Element/input types\n        header: function( elem ) {\n            return rheader.test( elem.nodeName );\n        },\n\n        input: function( elem ) {\n            return rinputs.test( elem.nodeName );\n        },\n\n        button: function( elem ) {\n            return nodeName( elem, \"input\" ) && elem.type === \"button\" ||\n                nodeName( elem, \"button\" );\n        },\n\n        text: function( elem ) {\n            return nodeName( elem, \"input\" ) && elem.type === \"text\";\n        },\n\n        // Position-in-collection\n        first: createPositionalPseudo( function() {\n            return [ 0 ];\n        } ),\n\n        last: createPositionalPseudo( function( _matchIndexes, length ) {\n            return [ length - 1 ];\n        } ),\n\n        eq: createPositionalPseudo( function( _matchIndexes, length, argument ) {\n            return [ argument < 0 ? argument + length : argument ];\n        } ),\n\n        even: createPositionalPseudo( function( matchIndexes, length ) {\n            var i = 0;\n            for ( ; i < length; i += 2 ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        } ),\n\n        odd: createPositionalPseudo( function( matchIndexes, length ) {\n            var i = 1;\n            for ( ; i < length; i += 2 ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        } ),\n\n        lt: createPositionalPseudo( function( matchIndexes, length, argument ) {\n            var i;\n\n            if ( argument < 0 ) {\n                i = argument + length;\n            } else if ( argument > length ) {\n                i = length;\n            } else {\n                i = argument;\n            }\n\n            for ( ; --i >= 0; ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        } ),\n\n        gt: createPositionalPseudo( function( matchIndexes, length, argument ) {\n            var i = argument < 0 ? argument + length : argument;\n            for ( ; ++i < length; ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        } )\n    }\n};\n\nExpr.pseudos.nth = Expr.pseudos.eq;\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n    Expr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n    Expr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\nfunction tokenize( selector, parseOnly ) {\n    var matched, match, tokens, type,\n        soFar, groups, preFilters,\n        cached = tokenCache[ selector + \" \" ];\n\n    if ( cached ) {\n        return parseOnly ? 0 : cached.slice( 0 );\n    }\n\n    soFar = selector;\n    groups = [];\n    preFilters = Expr.preFilter;\n\n    while ( soFar ) {\n\n        // Comma and first run\n        if ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n            if ( match ) {\n\n                // Don't consume trailing commas as valid\n                soFar = soFar.slice( match[ 0 ].length ) || soFar;\n            }\n            groups.push( ( tokens = [] ) );\n        }\n\n        matched = false;\n\n        // Combinators\n        if ( ( match = rcombinators.exec( soFar ) ) ) {\n            matched = match.shift();\n            tokens.push( {\n                value: matched,\n\n                // Cast descendant combinators to space\n                type: match[ 0 ].replace( rtrim, \" \" )\n            } );\n            soFar = soFar.slice( matched.length );\n        }\n\n        // Filters\n        for ( type in Expr.filter ) {\n            if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n                ( match = preFilters[ type ]( match ) ) ) ) {\n                matched = match.shift();\n                tokens.push( {\n                    value: matched,\n                    type: type,\n                    matches: match\n                } );\n                soFar = soFar.slice( matched.length );\n            }\n        }\n\n        if ( !matched ) {\n            break;\n        }\n    }\n\n    // Return the length of the invalid excess\n    // if we're just parsing\n    // Otherwise, throw an error or return tokens\n    if ( parseOnly ) {\n        return soFar.length;\n    }\n\n    return soFar ?\n        selectorError( selector ) :\n\n        // Cache the tokens\n        tokenCache( selector, groups ).slice( 0 );\n}\n\nfunction toSelector( tokens ) {\n    var i = 0,\n        len = tokens.length,\n        selector = \"\";\n    for ( ; i < len; i++ ) {\n        selector += tokens[ i ].value;\n    }\n    return selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n    var dir = combinator.dir,\n        skip = combinator.next,\n        key = skip || dir,\n        checkNonElements = base && key === \"parentNode\",\n        doneName = done++;\n\n    return combinator.first ?\n\n        // Check against closest ancestor/preceding element\n        function( elem, context, xml ) {\n            while ( ( elem = elem[ dir ] ) ) {\n                if ( elem.nodeType === 1 || checkNonElements ) {\n                    return matcher( elem, context, xml );\n                }\n            }\n            return false;\n        } :\n\n        // Check against all ancestor/preceding elements\n        function( elem, context, xml ) {\n            var oldCache, outerCache,\n                newCache = [ dirruns, doneName ];\n\n            // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n            if ( xml ) {\n                while ( ( elem = elem[ dir ] ) ) {\n                    if ( elem.nodeType === 1 || checkNonElements ) {\n                        if ( matcher( elem, context, xml ) ) {\n                            return true;\n                        }\n                    }\n                }\n            } else {\n                while ( ( elem = elem[ dir ] ) ) {\n                    if ( elem.nodeType === 1 || checkNonElements ) {\n                        outerCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n                        if ( skip && nodeName( elem, skip ) ) {\n                            elem = elem[ dir ] || elem;\n                        } else if ( ( oldCache = outerCache[ key ] ) &&\n                            oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n                            // Assign to newCache so results back-propagate to previous elements\n                            return ( newCache[ 2 ] = oldCache[ 2 ] );\n                        } else {\n\n                            // Reuse newcache so results back-propagate to previous elements\n                            outerCache[ key ] = newCache;\n\n                            // A match means we're done; a fail means we have to keep checking\n                            if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n}\n\nfunction elementMatcher( matchers ) {\n    return matchers.length > 1 ?\n        function( elem, context, xml ) {\n            var i = matchers.length;\n            while ( i-- ) {\n                if ( !matchers[ i ]( elem, context, xml ) ) {\n                    return false;\n                }\n            }\n            return true;\n        } :\n        matchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n    var i = 0,\n        len = contexts.length;\n    for ( ; i < len; i++ ) {\n        find( selector, contexts[ i ], results );\n    }\n    return results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n    var elem,\n        newUnmatched = [],\n        i = 0,\n        len = unmatched.length,\n        mapped = map != null;\n\n    for ( ; i < len; i++ ) {\n        if ( ( elem = unmatched[ i ] ) ) {\n            if ( !filter || filter( elem, context, xml ) ) {\n                newUnmatched.push( elem );\n                if ( mapped ) {\n                    map.push( i );\n                }\n            }\n        }\n    }\n\n    return newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n    if ( postFilter && !postFilter[ expando ] ) {\n        postFilter = setMatcher( postFilter );\n    }\n    if ( postFinder && !postFinder[ expando ] ) {\n        postFinder = setMatcher( postFinder, postSelector );\n    }\n    return markFunction( function( seed, results, context, xml ) {\n        var temp, i, elem, matcherOut,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n\n            // Get initial elements from seed or context\n            elems = seed ||\n                multipleContexts( selector || \"*\",\n                    context.nodeType ? [ context ] : context, [] ),\n\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n            matcherIn = preFilter && ( seed || !selector ) ?\n                condense( elems, preMap, preFilter, context, xml ) :\n                elems;\n\n        if ( matcher ) {\n\n            // If we have a postFinder, or filtered seed, or non-seed postFilter\n            // or preexisting results,\n            matcherOut = postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n                // ...intermediate processing is necessary\n                [] :\n\n                // ...otherwise use results directly\n                results;\n\n            // Find primary matches\n            matcher( matcherIn, matcherOut, context, xml );\n        } else {\n            matcherOut = matcherIn;\n        }\n\n        // Apply postFilter\n        if ( postFilter ) {\n            temp = condense( matcherOut, postMap );\n            postFilter( temp, [], context, xml );\n\n            // Un-match failing elements by moving them back to matcherIn\n            i = temp.length;\n            while ( i-- ) {\n                if ( ( elem = temp[ i ] ) ) {\n                    matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n                }\n            }\n        }\n\n        if ( seed ) {\n            if ( postFinder || preFilter ) {\n                if ( postFinder ) {\n\n                    // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                    temp = [];\n                    i = matcherOut.length;\n                    while ( i-- ) {\n                        if ( ( elem = matcherOut[ i ] ) ) {\n\n                            // Restore matcherIn since elem is not yet a final match\n                            temp.push( ( matcherIn[ i ] = elem ) );\n                        }\n                    }\n                    postFinder( null, ( matcherOut = [] ), temp, xml );\n                }\n\n                // Move matched elements from seed to results to keep them synchronized\n                i = matcherOut.length;\n                while ( i-- ) {\n                    if ( ( elem = matcherOut[ i ] ) &&\n                        ( temp = postFinder ? indexOf.call( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n                        seed[ temp ] = !( results[ temp ] = elem );\n                    }\n                }\n            }\n\n        // Add elements to results, through postFinder if defined\n        } else {\n            matcherOut = condense(\n                matcherOut === results ?\n                    matcherOut.splice( preexisting, matcherOut.length ) :\n                    matcherOut\n            );\n            if ( postFinder ) {\n                postFinder( null, results, matcherOut, xml );\n            } else {\n                push.apply( results, matcherOut );\n            }\n        }\n    } );\n}\n\nfunction matcherFromTokens( tokens ) {\n    var checkContext, matcher, j,\n        len = tokens.length,\n        leadingRelative = Expr.relative[ tokens[ 0 ].type ],\n        implicitRelative = leadingRelative || Expr.relative[ \" \" ],\n        i = leadingRelative ? 1 : 0,\n\n        // The foundational matcher ensures that elements are reachable from top-level context(s)\n        matchContext = addCombinator( function( elem ) {\n            return elem === checkContext;\n        }, implicitRelative, true ),\n        matchAnyContext = addCombinator( function( elem ) {\n            return indexOf.call( checkContext, elem ) > -1;\n        }, implicitRelative, true ),\n        matchers = [ function( elem, context, xml ) {\n            var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n                ( checkContext = context ).nodeType ?\n                    matchContext( elem, context, xml ) :\n                    matchAnyContext( elem, context, xml ) );\n\n            // Avoid hanging onto element (issue #299)\n            checkContext = null;\n            return ret;\n        } ];\n\n    for ( ; i < len; i++ ) {\n        if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n            matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n        } else {\n            matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n            // Return special upon seeing a positional matcher\n            if ( matcher[ expando ] ) {\n\n                // Find the next relative operator (if any) for proper handling\n                j = ++i;\n                for ( ; j < len; j++ ) {\n                    if ( Expr.relative[ tokens[ j ].type ] ) {\n                        break;\n                    }\n                }\n                return setMatcher(\n                    i > 1 && elementMatcher( matchers ),\n                    i > 1 && toSelector(\n\n                        // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                        tokens.slice( 0, i - 1 )\n                            .concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n                    ).replace( rtrim, \"$1\" ),\n                    matcher,\n                    i < j && matcherFromTokens( tokens.slice( i, j ) ),\n                    j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n                    j < len && toSelector( tokens )\n                );\n            }\n            matchers.push( matcher );\n        }\n    }\n\n    return elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n    var bySet = setMatchers.length > 0,\n        byElement = elementMatchers.length > 0,\n        superMatcher = function( seed, context, xml, results, outermost ) {\n            var elem, j, matcher,\n                matchedCount = 0,\n                i = \"0\",\n                unmatched = seed && [],\n                setMatched = [],\n                contextBackup = outermostContext,\n\n                // We must always have either seed elements or outermost context\n                elems = seed || byElement && Expr.find.TAG( \"*\", outermost ),\n\n                // Use integer dirruns iff this is the outermost matcher\n                dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 );\n\n            if ( outermost ) {\n\n                // Support: IE 11+\n                // IE sometimes throws a \"Permission denied\" error when strict-comparing\n                // two documents; shallow comparisons work.\n                // eslint-disable-next-line eqeqeq\n                outermostContext = context == document || context || outermost;\n            }\n\n            // Add elements passing elementMatchers directly to results\n            for ( ; ( elem = elems[ i ] ) != null; i++ ) {\n                if ( byElement && elem ) {\n                    j = 0;\n\n                    // Support: IE 11+\n                    // IE sometimes throws a \"Permission denied\" error when strict-comparing\n                    // two documents; shallow comparisons work.\n                    // eslint-disable-next-line eqeqeq\n                    if ( !context && elem.ownerDocument != document ) {\n                        setDocument( elem );\n                        xml = !documentIsHTML;\n                    }\n                    while ( ( matcher = elementMatchers[ j++ ] ) ) {\n                        if ( matcher( elem, context || document, xml ) ) {\n                            push.call( results, elem );\n                            break;\n                        }\n                    }\n                    if ( outermost ) {\n                        dirruns = dirrunsUnique;\n                    }\n                }\n\n                // Track unmatched elements for set filters\n                if ( bySet ) {\n\n                    // They will have gone through all possible matchers\n                    if ( ( elem = !matcher && elem ) ) {\n                        matchedCount--;\n                    }\n\n                    // Lengthen the array for every element, matched or not\n                    if ( seed ) {\n                        unmatched.push( elem );\n                    }\n                }\n            }\n\n            // `i` is now the count of elements visited above, and adding it to `matchedCount`\n            // makes the latter nonnegative.\n            matchedCount += i;\n\n            // Apply set filters to unmatched elements\n            // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n            // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n            // no element matchers and no seed.\n            // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n            // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n            // numerically zero.\n            if ( bySet && i !== matchedCount ) {\n                j = 0;\n                while ( ( matcher = setMatchers[ j++ ] ) ) {\n                    matcher( unmatched, setMatched, context, xml );\n                }\n\n                if ( seed ) {\n\n                    // Reintegrate element matches to eliminate the need for sorting\n                    if ( matchedCount > 0 ) {\n                        while ( i-- ) {\n                            if ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n                                setMatched[ i ] = pop.call( results );\n                            }\n                        }\n                    }\n\n                    // Discard index placeholder values to get only actual matches\n                    setMatched = condense( setMatched );\n                }\n\n                // Add matches to results\n                push.apply( results, setMatched );\n\n                // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                if ( outermost && !seed && setMatched.length > 0 &&\n                    ( matchedCount + setMatchers.length ) > 1 ) {\n\n                    jQuery.uniqueSort( results );\n                }\n            }\n\n            // Override manipulation of globals by nested matchers\n            if ( outermost ) {\n                dirruns = dirrunsUnique;\n                outermostContext = contextBackup;\n            }\n\n            return unmatched;\n        };\n\n    return bySet ?\n        markFunction( superMatcher ) :\n        superMatcher;\n}\n\nfunction compile( selector, match /* Internal Use Only */ ) {\n    var i,\n        setMatchers = [],\n        elementMatchers = [],\n        cached = compilerCache[ selector + \" \" ];\n\n    if ( !cached ) {\n\n        // Generate a function of recursive functions that can be used to check each element\n        if ( !match ) {\n            match = tokenize( selector );\n        }\n        i = match.length;\n        while ( i-- ) {\n            cached = matcherFromTokens( match[ i ] );\n            if ( cached[ expando ] ) {\n                setMatchers.push( cached );\n            } else {\n                elementMatchers.push( cached );\n            }\n        }\n\n        // Cache the compiled function\n        cached = compilerCache( selector,\n            matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n        // Save selector and tokenization\n        cached.selector = selector;\n    }\n    return cached;\n}\n\n/**\n * A low-level selection function that works with jQuery's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with jQuery selector compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nfunction select( selector, context, results, seed ) {\n    var i, tokens, token, type, find,\n        compiled = typeof selector === \"function\" && selector,\n        match = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n    results = results || [];\n\n    // Try to minimize operations if there is only one selector in the list and no seed\n    // (the latter of which guarantees us context)\n    if ( match.length === 1 ) {\n\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[ 0 ] = match[ 0 ].slice( 0 );\n        if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n                context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n            context = ( Expr.find.ID(\n                token.matches[ 0 ].replace( runescape, funescape ),\n                context\n            ) || [] )[ 0 ];\n            if ( !context ) {\n                return results;\n\n            // Precompiled matchers will still verify ancestry, so step up a level\n            } else if ( compiled ) {\n                context = context.parentNode;\n            }\n\n            selector = selector.slice( tokens.shift().value.length );\n        }\n\n        // Fetch a seed set for right-to-left matching\n        i = matchExpr.needsContext.test( selector ) ? 0 : tokens.length;\n        while ( i-- ) {\n            token = tokens[ i ];\n\n            // Abort if we hit a combinator\n            if ( Expr.relative[ ( type = token.type ) ] ) {\n                break;\n            }\n            if ( ( find = Expr.find[ type ] ) ) {\n\n                // Search, expanding context for leading sibling combinators\n                if ( ( seed = find(\n                    token.matches[ 0 ].replace( runescape, funescape ),\n                    rsibling.test( tokens[ 0 ].type ) &&\n                        testContext( context.parentNode ) || context\n                ) ) ) {\n\n                    // If seed is empty or no tokens remain, we can return early\n                    tokens.splice( i, 1 );\n                    selector = seed.length && toSelector( tokens );\n                    if ( !selector ) {\n                        push.apply( results, seed );\n                        return results;\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n\n    // Compile and execute a filtering function if one is not provided\n    // Provide `match` to avoid retokenization if we modified the selector above\n    ( compiled || compile( selector, match ) )(\n        seed,\n        context,\n        !documentIsHTML,\n        results,\n        !context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n    );\n    return results;\n}\n\n// Initialize against the default document\nsetDocument();\n\njQuery.find = find;\n\n} )();\n","import jQuery from '../core.js';\nimport toType from './toType.js';\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function(elems, fn, key, value, chainable, emptyGet, raw) {\n    let i = 0,\n        len = elems.length,\n        bulk = key == null;\n\n    // Sets many values\n    if (toType(key) === 'object') {\n        chainable = true;\n        for (i in key) {\n            access(elems, fn, i, key[i], true, emptyGet, raw);\n        }\n\n        // Sets one value\n    } else if (value !== undefined) {\n        chainable = true;\n\n        if (typeof value !== 'function') {\n            raw = true;\n        }\n\n        if (bulk) {\n\n            // Bulk operations run against the entire set\n            if (raw) {\n                fn.call(elems, value);\n                fn = null;\n\n                // ...except when executing function values\n            } else {\n                bulk = fn;\n                fn = function(elem, _key, value) {\n                    return bulk.call(jQuery(elem), value);\n                };\n            }\n        }\n\n        if (fn) {\n            for (; i < len; i++) {\n                fn(\n\t\t\t\t\telems[i], key, raw\n\t\t\t\t\t    ? value\n\t\t\t\t\t    : value.call(elems[i], i, fn(elems[i], key))\n                );\n            }\n        }\n    }\n\n    if (chainable) {\n        return elems;\n    }\n\n    // Gets\n    if (bulk) {\n        return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n};\n\nexport default access;\n","// Only count HTML whitespace\n// Other whitespace should count in values\n// https://infra.spec.whatwg.org/#ascii-whitespace\nexport default ( /[^\\x20\\t\\r\\n\\f]+/g );\n","import jQuery from \"../core.js\";\nimport access from \"../core/access.js\";\nimport nodeName from \"../core/nodeName.js\";\nimport rnothtmlwhite from \"../var/rnothtmlwhite.js\";\nimport isIE from \"../var/isIE.js\";\n\nimport \"../selector.js\";\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = elem.getAttribute( name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Support: IE <=11+\n// An input loses its value after becoming a radio\nif ( isIE ) {\n\tjQuery.attrHooks.type = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( value === \"radio\" && nodeName( elem, \"input\" ) ) {\n\t\t\t\tvar val = elem.value;\n\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\tif ( val ) {\n\t\t\t\t\telem.value = val;\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tjQuery.attrHooks[ name ] = {\n\t\tget: function( elem ) {\n\t\t\tvar ret,\n\t\t\t\tisXML = jQuery.isXMLDoc( elem ),\n\t\t\t\tlowercaseName = name.toLowerCase();\n\n\t\t\tif ( !isXML ) {\n\t\t\t\tret = elem.getAttribute( name ) != null ?\n\t\t\t\t\tlowercaseName :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( value === false ) {\n\n\t\t\t\t// Remove boolean attributes when set to false\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, name );\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\t};\n} );\n","import jQuery from \"../core.js\";\nimport access from \"../core/access.js\";\nimport isIE from \"../var/isIE.js\";\n\nimport \"../selector.js\";\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = elem.getAttribute( \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\n\t\t\t\t\t// href-less anchor's `tabIndex` property value is `0` and\n\t\t\t\t\t// the `tabindex` attribute value: `null`. We want `-1`.\n\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11+\n// Accessing the selectedIndex property forces the browser to respect\n// setting selected on the option. The getter ensures a default option\n// is selected when in an optgroup. ESLint rule \"no-unused-expressions\"\n// is disabled for this code since it considers such accessions noop.\nif ( isIE ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n","import rnothtmlwhite from '../var/rnothtmlwhite.js';\n\n// Strip and collapse whitespace according to HTML spec\n// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\nfunction stripAndCollapse( value ) {\n\tvar tokens = value.match( rnothtmlwhite ) || [];\n\treturn tokens.join( \" \" );\n}\n\nexport default stripAndCollapse;\n","// rsingleTag matches a string consisting of a single HTML element with no attributes\n// and captures the element's name\nexport default ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n","import jQuery from \"../../core.js\";\n\nimport \"../../selector.js\";\n\nexport default jQuery.expr.match.needsContext;\n","import jQuery from \"../core.js\";\nimport indexOf from \"../var/indexOf.js\";\nimport rneedsContext from \"./var/rneedsContext.js\";\n\nimport \"../selector.js\";\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( typeof qualifier === \"function\" ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n","// Initialize a jQuery object\nimport jQuery from '../core.js';\nimport document from '../var/document.js';\n\nimport rsingleTag from './var/rsingleTag.js';\n\nimport '../traversing/findFilter.js';\n\n// A central reference to the root jQuery(document)\nlet rootjQuery,\n\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n    // Strict HTML recognition (#11290: must start with <)\n    // Shortcut simple #id case for speed\n    rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n    init = jQuery.fn.init = function(selector, context, root) {\n        let elem, match;\n\n        // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n        if (!selector) {\n            return this;\n        }\n\n        // Method init() accepts an alternate rootjQuery\n        // so migrate can support jQuery.sub (gh-2101)\n        root = root || rootjQuery;\n\n        // Handle HTML strings\n        if (typeof selector === 'string') {\n            if (selector[0] === '<'\n\t\t\t\t&& selector[selector.length - 1] === '>'\n\t\t\t\t&& selector.length >= 3) {\n\n                // Assume that strings that start and end with <> are HTML and skip the regex check\n                match = [ null, selector, null ];\n\n            } else {\n                match = rquickExpr.exec(selector);\n            }\n\n            // Match html or make sure no context is specified for #id\n            if (match && (match[1] || !context)) {\n\n                // HANDLE: $(html) -> $(array)\n                if (match[1]) {\n                    context = context instanceof jQuery ? context[0] : context;\n\n                    // Option to run scripts is true for back-compat\n                    // Intentionally let the error be thrown if parseHTML is not present\n                    jQuery.merge(this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n                    ));\n\n                    // HANDLE: $(html, props)\n                    if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                        for (match in context) {\n\n                            // Properties of context are called as methods if possible\n                            if (typeof this[match] === 'function') {\n                                this[match](context[match]);\n\n                                // ...and otherwise set as attributes\n                            } else {\n                                this.attr(match, context[match]);\n                            }\n                        }\n                    }\n\n                    return this;\n\n                    // HANDLE: $(#id)\n                }\n                elem = document.getElementById(match[2]);\n\n                if (elem) {\n\n                    // Inject the element directly into the jQuery object\n                    this[0] = elem;\n                    this.length = 1;\n                }\n\n                return this;\n\n\n                // HANDLE: $(expr, $(...))\n            } else if (!context || context.jquery) {\n                return (context || root).find(selector);\n\n                // HANDLE: $(expr, context)\n                // (which is just equivalent to: $(context).find(expr)\n            }\n\n            return this.constructor(context).find(selector);\n\n\n            // HANDLE: $(DOMElement)\n        } else if (selector.nodeType) {\n            this[0] = selector;\n            this.length = 1;\n\n            return this;\n\n            // HANDLE: $(function)\n            // Shortcut for document ready\n        } else if (typeof selector === 'function') {\n            return root.ready !== undefined\n                ? root.ready(selector)\n\n            // Execute immediately if ready is not present\n                : selector(jQuery);\n        }\n\n        return jQuery.makeArray(selector, this);\n    };\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery(document);\n","import jQuery from \"../core.js\";\nimport stripAndCollapse from \"../core/stripAndCollapse.js\";\nimport rnothtmlwhite from \"../var/rnothtmlwhite.js\";\n\nimport \"../core/init.js\";\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( typeof value === \"function\" ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( typeof value === \"function\" ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tif ( typeof value === \"function\" ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\t// Toggle individual class names\n\t\t\ti = 0;\n\t\t\tself = jQuery( this );\n\t\t\tclassNames = classesToArray( value );\n\n\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t// Check each className given, space separated list\n\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\tself.removeClass( className );\n\t\t\t\t} else {\n\t\t\t\t\tself.addClass( className );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n","import jQuery from \"../core.js\";\nimport isIE from \"../var/isIE.js\";\nimport stripAndCollapse from \"../core/stripAndCollapse.js\";\nimport nodeName from \"../core/nodeName.js\";\n\nimport \"../core/init.js\";\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = typeof value === \"function\";\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\tif ( option.selected &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\tif ( ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery( option ).val(), values ) > -1\n\t\t\t\t\t) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\nif ( isIE ) {\n\tjQuery.valHooks.option = {\n\t\tget: function( elem ) {\n\n\t\t\tvar val = elem.getAttribute( \"value\" );\n\t\t\treturn val != null ?\n\t\t\t\tval :\n\n\t\t\t\t// Support: IE <=10 - 11+\n\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t}\n\t};\n}\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n} );\n","import jQuery from './core.js';\n\nimport \"./attributes/attr.js\";\nimport \"./attributes/prop.js\";\nimport \"./attributes/classes.js\";\nimport \"./attributes/val.js\";\n\n// Return jQuery for attributes-only inclusion\nexport default jQuery;\n","import jQuery from '../core.js';\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11+\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n","import jQuery from \"./core.js\";\nimport access from \"./core/access.js\";\nimport \"./core/init.js\";\n\n\njQuery.fn.extend( {\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t}\n} );\n\n\n\nexport default jQuery;\n","import jQuery from './core.js';\n\nimport './selector.js';\nimport './attributes.js';\nimport './core/parseXML.js';\nimport './exports/global.js';\nimport './manipulation.js';\n\n\nexport default jQuery;\n","/* Copyright @ 2015-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*jslint latedef:false*/\n\n/**\n * Ordered log levels.\n */\nvar levels = {\n    \"trace\": 0,\n    \"debug\": 1,\n    \"info\": 2,\n    \"log\": 3,\n    \"warn\": 4,\n    \"error\": 5\n};\n\n/**\n * The default transport - console\n * @type LoggerTransport\n */\nLogger.consoleTransport = console;\n\n/**\n * The array which stores currently registered global transports.\n * @type {[LoggerTransport]}\n */\nvar globalTransports = [ Logger.consoleTransport ];\n\n/**\n * Adds given {@link LoggerTransport} instance to the list of global\n * transports which means that it'll be used by all {@link Logger}s\n * @param {LoggerTransport} transport\n */\nLogger.addGlobalTransport = function(transport) {\n    if (globalTransports.indexOf(transport) === -1) {\n        globalTransports.push(transport);\n    }\n};\n\n/**\n * Removes given {@link LoggerTransport} instance from the list of global\n * transports\n * @param {LoggerTransport} transport\n */\nLogger.removeGlobalTransport = function(transport) {\n    var transportIdx = globalTransports.indexOf(transport);\n    if (transportIdx !== -1) {\n        globalTransports.splice(transportIdx, 1);\n    }\n};\n\n/**\n * The global configuration options.\n */\nvar globalOptions = {};\n\n/**\n * Sets global options which will be used by all loggers. Changing these works\n * even after other loggers are created.\n */\nLogger.setGlobalOptions = function(options) {\n    globalOptions = options || {};\n};\n\n/**\n * Parses Error's object stack trace and extracts information about the last\n * caller before the log method was called.\n * @returns JS object with info about the caller - method name, file location,\n * line and column.\n */\nfunction getCallerInfo() {\n    var callerInfo = {\n        methodName: \"\",\n        fileLocation: \"\",\n        line: null,\n        column: null\n    };\n    //gets the part of the stack without the logger wrappers\n    var error = new Error();\n    var stack = error.stack? error.stack.split(\"\\n\") : [];\n    if(!stack || stack.length < 3) {\n        return callerInfo;\n    }\n    var m = null;\n    if(stack[3]) {\n        m = stack[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/);\n    }\n    if(!m || m.length <= 4) {\n        //Firefox && Safari\n        if(stack[2].indexOf(\"log@\") === 0){\n            //Safari\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\"@\"));\n        } else {\n            //Firefox\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\"@\"));\n        }\n        return callerInfo;\n    }\n\n    callerInfo.methodName = m[1];\n    callerInfo.fileLocation = m[2];\n    callerInfo.line = m[3];\n    callerInfo.column = m[4];\n    return callerInfo;\n}\n\n/**\n * Logs messages using the transports and level from the logger.\n * @param logger a logger instance.\n * @param level the log level of the message. See the levels variable.\n * @param arguments array with arguments that will be logged.\n */\nfunction log() {\n    var logger = arguments[0], level = arguments[1],\n        args = Array.prototype.slice.call(arguments, 2);\n    if(levels[level] < logger.level) {\n        return;\n    }\n\n    var callerInfo\n        = !(logger.options.disableCallerInfo || globalOptions.disableCallerInfo) &&\n            getCallerInfo();\n    var transports = globalTransports.concat(logger.transports);\n    for(var i = 0; i < transports.length; i++) {\n        var t = transports[i];\n        var l = t[level];\n        if(l && typeof(l) === \"function\") {\n            var logPrefixes = [];\n\n            logPrefixes.push(new Date().toISOString());\n\n            if (logger.id) {\n                logPrefixes.push(\"[\" + logger.id + \"]\");\n            }\n\n            if (callerInfo && callerInfo.methodName.length > 1) {\n                logPrefixes.push(\"<\" + callerInfo.methodName + \">: \");\n            }\n\n            var fullLogParts = logPrefixes.concat(args);\n\n            l.bind(t).apply(t, fullLogParts);\n        }\n    }\n}\n\n/**\n *\n * Constructs new logger object.\n * @param level the logging level for the new logger\n * @param id optional identifier for the logger instance.\n * @param {LoggerTransport} transports optional list of handlers(objects) for\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\n * @param options optional configuration file for how the logger should behave.\n * @param {boolean} options.disableCallerInfo Whether the call site of a logger\n * method invocation should be included in the log. Defaults to false, so the\n * call site will be included.\n */\nfunction Logger(level, id, transports, options) {\n    this.id = id;\n    this.options = options || {};\n    this.transports = transports;\n    if(!this.transports) {\n        this.transports = [];\n    }\n    this.level = levels[level];\n    var methods = Object.keys(levels);\n    for(var i = 0; i < methods.length; i++){\n        this[methods[i]] =\n            log.bind(null, this, methods[i]);\n    }\n}\n\n/**\n * Sets the log level for the logger.\n * @param level the new log level.\n */\nLogger.prototype.setLevel = function (level) {\n    this.level = levels[level];\n};\nmodule.exports = Logger;\n\n/**\n * Enum for the supported log levels.\n */\nLogger.levels = {\n    TRACE: \"trace\",\n    DEBUG: \"debug\",\n    INFO: \"info\",\n    LOG: \"log\",\n    WARN: \"warn\",\n    ERROR: \"error\"\n};\n","import JitsiConference from './JitsiConference';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport Statistics from './modules/statistics/statistics';\nimport XMPP from './modules/xmpp/xmpp';\nimport {\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\n    createConnectionFailedEvent\n} from './service/statistics/AnalyticsEvents';\nimport {connectionConfig} from \"./config\";\n\n/**\n * Creates a new connection object for the Jitsi Meet server side video\n * conferencing service. Provides access to the JitsiConference interface.\n * services.\n * @param token the JWT token used to authenticate with the server(optional)\n * @param options Object with properties / settings related to connection with\n * the server.\n * @constructor\n */\nexport default function JitsiConnection(token, options) {\n    options = !options || {};\n    options =  {...connectionConfig, ...options};\n    this.token = token;\n    const jwt = this.parseJwt(token);\n\n    this.name = jwt ? jwt.room : null;\n    this.user = jwt.context.user;\n    this.options = options;\n    this.xmpp = new XMPP(options, token, this.name);\n\n    /* eslint-disable max-params */\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\n        (errType, msg, credentials, details) => {\n            Statistics.sendAnalyticsAndLog(\n                createConnectionFailedEvent(errType, msg, details));\n        });\n    /* eslint-enable max-params */\n\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\n        msg => {\n            // we can see disconnects from normal tab closing of the browser\n            // and then there are no msgs, but we want to log only disconnects\n            // when there is real error\n            // XXX Do we need the difference in handling between the log and\n            // analytics event here?\n            if (msg) {\n                Statistics.sendAnalytics(\n                    ANALYTICS_CONNECTION_DISCONNECTED,\n                    { message: msg });\n            }\n            Statistics.sendLog(\n                JSON.stringify(\n                    {\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\n                        msg\n                    }));\n        });\n}\n\nJitsiConnection.prototype.parseJwt = function(token) {\n    try {\n        return JSON.parse(atob(token.split('.')[1]));\n    } catch (e) {\n        return null;\n    }\n};\n\n/**\n * Connect the client with the server.\n * @param options {object} connecting options\n * (for example authentications parameters).\n */\nJitsiConnection.prototype.connect = function(options = {}) {\n    this.xmpp.connect(options.id, options.password);\n};\n\n/**\n * Attach to existing connection. Can be used for optimizations. For example:\n * if the connection is created on the server we can attach to it and start\n * using it.\n *\n * @param options {object} connecting options - rid, sid and jid.\n */\nJitsiConnection.prototype.attach = function(options) {\n    this.xmpp.attach(options);\n};\n\n/**\n * Disconnect the client from the server.\n * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\n */\nJitsiConnection.prototype.disconnect = function(...args) {\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\n    // may optionally pass the event which triggered the disconnect in order to\n    // provide the implementation with finer-grained context.\n    return this.xmpp.disconnect(...args);\n};\n\n/**\n * Returns the jid of the participant associated with the XMPP connection.\n *\n * @returns {string} The jid of the participant.\n */\nJitsiConnection.prototype.getJid = function() {\n    return this.xmpp.getJid();\n};\n\n/**\n * This method allows renewal of the tokens if they are expiring.\n * @param token the new token.\n */\nJitsiConnection.prototype.setToken = function(token) {\n    this.token = token;\n};\n\n/**\n * Creates and joins new conference.\n * @param name the name of the conference; if null - a generated name will be\n * provided from the api\n * @param options Object with properties / settings related to the conference\n * that will be created.\n * @returns {JitsiConference} returns the new conference object.\n */\nJitsiConnection.prototype.initJitsiConference = function(options) {\n    return new JitsiConference({\n        name: this.name,\n        config: options,\n        connection: this,\n        user: this.user\n    });\n};\n\n/**\n * Subscribes the passed listener to the event.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.addEventListener = function(event, listener) {\n    this.xmpp.addListener(event, listener);\n};\n\n/**\n * Unsubscribes the passed handler.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\n    this.xmpp.removeListener(event, listener);\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConnection.prototype.getConnectionTimes = function() {\n    return this.xmpp.connectionTimes;\n};\n\n/**\n * Adds new feature to the list of supported features for the local\n * participant.\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\n    this.xmpp.caps.addFeature(feature, submit, true);\n};\n\n/**\n * Removes a feature from the list of supported features for the local\n * participant\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\n    this.xmpp.caps.removeFeature(feature, submit, true);\n};\n\n/**\n * Get object with internal logs.\n */\nJitsiConnection.prototype.getLogs = function() {\n    const data = this.xmpp.getJingleLog();\n\n    const metadata = {};\n\n    metadata.time = new Date();\n    metadata.url = window.location.href;\n    metadata.ua = navigator.userAgent;\n\n    const log = this.xmpp.getXmppLog();\n\n    if (log) {\n        metadata.xmpp = log;\n    }\n\n    data.metadata = metadata;\n\n    return data;\n};\n","/* global __filename, $, Promise */\n\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport isEqual from 'lodash.isequal';\nimport { Strophe } from 'strophe.js';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiParticipant from './JitsiParticipant';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\nimport { CodecSelection } from './modules/RTC/CodecSelection';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\nimport IceFailedHandling\n    from './modules/connectivity/IceFailedHandling';\nimport ParticipantConnectionStatusHandler\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\nimport NoAudioSignalDetection from './modules/detection/NoAudioSignalDetection';\nimport P2PDominantSpeakerDetection from './modules/detection/P2PDominantSpeakerDetection';\nimport VADAudioAnalyser from './modules/detection/VADAudioAnalyser';\nimport VADNoiseDetection from './modules/detection/VADNoiseDetection';\nimport VADTalkMutedDetection from './modules/detection/VADTalkMutedDetection';\nimport { E2EEncryption } from './modules/e2ee/E2EEncryption';\nimport E2ePing from './modules/e2eping/e2eping';\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\nimport { ReceiveVideoController } from './modules/qualitycontrol/ReceiveVideoController';\nimport { SendVideoController } from './modules/qualitycontrol/SendVideoController';\nimport RecordingManager from './modules/recording/RecordingManager';\nimport Settings from './modules/settings/Settings';\nimport AudioOutputProblemDetector from './modules/statistics/AudioOutputProblemDetector';\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\nimport Statistics from './modules/statistics/statistics';\nimport Transcriber from './modules/transcription/transcriber';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport RandomUtil from './modules/util/RandomUtil';\nimport ComponentsVersions from './modules/version/ComponentsVersions';\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport {\n    FEATURE_E2EE,\n    FEATURE_JIGASI,\n    JITSI_MEET_MUC_TYPE\n} from './modules/xmpp/xmpp';\nimport CodecMimeType from './service/RTC/CodecMimeType';\nimport * as MediaType from './service/RTC/MediaType';\nimport VideoType from './service/RTC/VideoType';\nimport {\n    ACTION_JINGLE_RESTART,\n    ACTION_JINGLE_SI_RECEIVED,\n    ACTION_JINGLE_SI_TIMEOUT,\n    ACTION_JINGLE_TERMINATE,\n    ACTION_P2P_DECLINED,\n    ACTION_P2P_ESTABLISHED,\n    ACTION_P2P_FAILED,\n    ACTION_P2P_SWITCH_TO_JVB,\n    ICE_ESTABLISHMENT_DURATION_DIFF,\n    createConferenceEvent,\n    createJingleEvent,\n    createP2PEvent\n} from './service/statistics/AnalyticsEvents';\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\nimport {conferenceConfig} from \"./config\";\nconst logger = getLogger(__filename);\n\n/**\n * How long since Jicofo is supposed to send a session-initiate, before\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\n * @type {number}\n */\nconst JINGLE_SI_TIMEOUT = 5000;\n\n/**\n * Creates a JitsiConference object with the given name and properties.\n * Note: this constructor is not a part of the public API (objects should be\n * created using JitsiConnection.createConference).\n * @param options.config properties / settings related to the conference that\n * will be created.\n * @param options.name the name of the conference\n * @param options.connection the JitsiConnection object for this\n * JitsiConference.\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\n * calculated and submitted to the analytics module.\n * @param {boolean} [options.config.enableIceRestart=false] - enables the ICE\n * restart logic.\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\n * the peer to peer mode will be enabled. It means that when there are only 2\n * participants in the conference an attempt to make direct connection will be\n * made. If the connection succeeds the conference will stop sending data\n * through the JVB connection and will use the direct one instead.\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\n * seconds, before the conference switches back to P2P, after the 3rd\n * participant has left the room.\n * @param {number} [options.config.channelLastN=-1] The requested amount of\n * videos are going to be delivered after the value is in effect. Set to -1 for\n * unlimited or all available videos.\n * @param {number} [options.config.forceJVB121Ratio]\n * \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people\n * conference should be moved to the JVB instead of P2P. The decision is made on\n * the responder side, after ICE succeeds on the P2P connection.\n * @constructor\n *\n * FIXME Make all methods which are called from lib-internal classes\n *       to non-public (use _). To name a few:\n *       {@link JitsiConference.onLocalRoleChanged}\n *       {@link JitsiConference.onUserRoleChanged}\n *       {@link JitsiConference.onMemberLeft}\n *       and so on...\n */\nexport default function JitsiConference(options) {\n    options = !options || {};\n    options =  {...conferenceConfig, ...options};\n    if (!options.name || options.name.toLowerCase() !== options.name) {\n        const errmsg\n            = 'Invalid conference name (no conference name passed or it '\n                + 'contains invalid characters like capital letters)!';\n\n        logger.error(errmsg);\n        throw new Error(errmsg);\n    }\n    this.user = options.user;\n    this.eventEmitter = new EventEmitter();\n    this.options = options;\n    this.eventManager = new JitsiConferenceEventManager(this);\n    this.participants = {};\n    this._init(options);\n    this.componentsVersions = new ComponentsVersions(this);\n\n    /**\n     * Jingle session instance for the JVB connection.\n     * @type {JingleSessionPC}\n     */\n    this.jvbJingleSession = null;\n    this.lastDominantSpeaker = null;\n    this.dtmfManager = null;\n    this.somebodySupportsDTMF = false;\n    this.authEnabled = false;\n    this.startAudioMuted = false;\n    this.startVideoMuted = false;\n    this.startMutedPolicy = {\n        audio: false,\n        video: false\n    };\n    this.isMutedByFocus = false;\n\n    // when muted by focus we receive the jid of the initiator of the mute\n    this.mutedByFocusActor = null;\n\n    this.isVideoMutedByFocus = false;\n\n    // when video muted by focus we receive the jid of the initiator of the mute\n    this.mutedVideoByFocusActor = null;\n\n    // Flag indicates if the 'onCallEnded' method was ever called on this\n    // instance. Used to log extra analytics event for debugging purpose.\n    // We need to know if the potential issue happened before or after\n    // the restart.\n    this.wasStopped = false;\n\n    // Conference properties, maintained by jicofo.\n    this.properties = {};\n\n    /**\n     * The object which monitors local and remote connection statistics (e.g.\n     * sending bitrate) and calculates a number which represents the connection\n     * quality.\n     */\n    this.connectionQuality\n        = new ConnectionQuality(this, this.eventEmitter, options);\n\n    /**\n     * Reports average RTP statistics to the analytics module.\n     * @type {AvgRTPStatsReporter}\n     */\n    this.avgRtpStatsReporter\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\n\n    /**\n     * Detects issues with the audio of remote participants.\n     * @type {AudioOutputProblemDetector}\n     */\n    this._audioOutputProblemDetector = new AudioOutputProblemDetector(this);\n\n    /**\n     * Indicates whether the connection is interrupted or not.\n     */\n    this.isJvbConnectionInterrupted = false;\n\n    /**\n     * The object which tracks active speaker times\n     */\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\n\n    /* P2P related fields below: */\n\n    /**\n     * Stores reference to deferred start P2P task. It's created when 3rd\n     * participant leaves the room in order to avoid ping pong effect (it\n     * could be just a page reload).\n     * @type {number|null}\n     */\n    this.deferredStartP2PTask = null;\n\n    const delay\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\n\n    /**\n     * A delay given in seconds, before the conference switches back to P2P\n     * after the 3rd participant has left.\n     * @type {number}\n     */\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\n\n    /**\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\n     * and running.\n     * @type {boolean}\n     */\n    this.isP2PConnectionInterrupted = false;\n\n    /**\n     * Flag set to <tt>true</tt> when P2P session has been established\n     * (ICE has been connected) and this conference is currently in the peer to\n     * peer mode (P2P connection is the active one).\n     * @type {boolean}\n     */\n    this.p2p = false;\n\n    /**\n     * A JingleSession for the direct peer to peer connection.\n     * @type {JingleSessionPC}\n     */\n    this.p2pJingleSession = null;\n\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\n    this.recordingManager = new RecordingManager(this.room);\n\n    /**\n     * If the conference.joined event has been sent this will store the timestamp when it happened.\n     *\n     * @type {undefined|number}\n     * @private\n     */\n    this._conferenceJoinAnalyticsEventSent = undefined;\n\n    /**\n     * End-to-End Encryption. Make it available if supported.\n     */\n    if (this.isE2EESupported()) {\n        logger.info('End-to-End Encryprtion is supported');\n\n        this._e2eEncryption = new E2EEncryption(this);\n    }\n}\n\n// FIXME convert JitsiConference to ES6 - ASAP !\nJitsiConference.prototype.constructor = JitsiConference;\n\n/**\n * Create a resource for the a jid. We use the room nickname (the resource part\n * of the occupant JID, see XEP-0045) as the endpoint ID in colibri. We require\n * endpoint IDs to be 8 hex digits because in some cases they get serialized\n * into a 32bit field.\n *\n * @param {string} jid - The id set onto the XMPP connection.\n * @param {boolean} isAuthenticatedUser - Whether or not the user has connected\n * to the XMPP service with a password.\n * @returns {string}\n * @static\n */\nJitsiConference.resourceCreator = function(jid) {\n    return Strophe.getNodeFromJid(jid);\n};\n\n/**\n * Initializes the conference object properties\n * @param options {object}\n * @param options.connection {JitsiConnection} overrides this.connection\n */\nJitsiConference.prototype._init = function(options = {}) {\n    // Override connection and xmpp properties (Useful if the connection\n    // reloaded)\n    if (options.connection) {\n        this.connection = options.connection;\n        this.xmpp = this.connection.xmpp;\n\n        // Setup XMPP events only if we have new connection object.\n        this.eventManager.setupXMPPListeners();\n    }\n\n    const { config } = this.options;\n\n    // Get the codec preference settings from config.js.\n    // 'preferH264' and 'disableH264' settings have been deprecated for a while,\n    // 'preferredCodec' and 'disabledCodec' will have precedence over them.\n    const codecSettings = {\n        disabledCodec: config.videoQuality\n            ? config.videoQuality.disabledCodec\n            : config.p2p && config.p2p.disableH264 && CodecMimeType.H264,\n        enforcePreferredCodec: config.videoQuality && config.videoQuality.enforcePreferredCodec,\n        jvbCodec: (config.videoQuality && config.videoQuality.preferredCodec)\n            || (config.preferH264 && CodecMimeType.H264),\n        p2pCodec: config.p2p\n            ? config.p2p.preferredCodec || (config.p2p.preferH264 && CodecMimeType.H264)\n            : CodecMimeType.VP8\n    };\n\n    this.codecSelection = new CodecSelection(this, codecSettings);\n    this._statsCurrentId = config.statisticsId ? config.statisticsId : Settings.callStatsUserName;\n    this.room = this.xmpp.createRoom(\n        this.options.name, {\n            ...config,\n            statsId: this._statsCurrentId\n        },\n        JitsiConference.resourceCreator\n    );\n\n    // Connection interrupted/restored listeners\n    this._onIceConnectionInterrupted\n        = this._onIceConnectionInterrupted.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\n\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\n\n    this._onIceConnectionEstablished\n        = this._onIceConnectionEstablished.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\n\n    this._updateProperties = this._updateProperties.bind(this);\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n        this._updateProperties);\n\n    this._sendConferenceJoinAnalyticsEvent = this._sendConferenceJoinAnalyticsEvent.bind(this);\n    this.room.addListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\n\n    this.e2eping = new E2ePing(\n        this,\n        config,\n        (message, to) => {\n            try {\n                this.sendMessage(\n                    message, to, true /* sendThroughVideobridge */);\n            } catch (error) {\n                logger.warn('Failed to send E2E ping request or response.', error && error.msg);\n            }\n        });\n\n    if (!this.rtc) {\n        this.rtc = new RTC(this, options);\n        this.eventManager.setupRTCListeners();\n    }\n\n    this.receiveVideoController = new ReceiveVideoController(this, this.rtc);\n    this.sendVideoController = new SendVideoController(this, this.rtc);\n\n    this.participantConnectionStatus\n        = new ParticipantConnectionStatusHandler(\n            this.rtc,\n            this,\n            {\n                // Both these options are not public API, leaving it here only\n                // as an entry point through config for tuning up purposes.\n                // Default values should be adjusted as soon as optimal values\n                // are discovered.\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\n            });\n    this.participantConnectionStatus.init();\n\n    // Add the ability to enable callStats only on a percentage of users based on config.js settings.\n    let enableCallStats = true;\n\n    if (config.testing && config.testing.callStatsThreshold) {\n        enableCallStats = (Math.random() * 100) <= config.testing.callStatsThreshold;\n    }\n\n    if (!this.statistics) {\n        this.statistics = new Statistics(this.xmpp, {\n            aliasName: this._statsCurrentId,\n            userName: config.statisticsDisplayName ? config.statisticsDisplayName : this.myUserId(),\n            confID: config.confID || `${this.connection.options.hosts.domain}/${this.options.name}`,\n            siteID: config.siteID,\n            customScriptUrl: config.callStatsCustomScriptUrl,\n            callStatsID: config.callStatsID,\n            callStatsSecret: config.callStatsSecret,\n            callStatsApplicationLogsDisabled: config.callStatsApplicationLogsDisabled,\n            enableCallStats,\n            roomName: this.options.name,\n            applicationName: config.applicationName,\n            getWiFiStatsMethod: config.getWiFiStatsMethod\n        });\n        Statistics.analytics.addPermanentProperties({\n            'callstats_name': this._statsCurrentId\n        });\n\n        // Start performance observer for monitoring long tasks\n        if (config.longTasksStatsInterval) {\n            this.statistics.attachLongTasksStats(this);\n        }\n    }\n\n    this.eventManager.setupChatRoomListeners();\n\n    // Always add listeners because on reload we are executing leave and the\n    // listeners are removed from statistics module.\n    this.eventManager.setupStatisticsListeners();\n\n    // Disable VAD processing on Safari since it causes audio input to\n    // fail on some of the mobile devices.\n    if (config.enableTalkWhileMuted && browser.supportsVADDetection()) {\n        // If VAD processor factory method is provided uses VAD based detection, otherwise fallback to audio level\n        // based detection.\n        if (config.createVADProcessor) {\n            logger.info('Using VAD detection for generating talk while muted events');\n\n            if (!this._audioAnalyser) {\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\n            }\n\n            const vadTalkMutedDetection = new VADTalkMutedDetection();\n\n            vadTalkMutedDetection.on(DetectionEvents.VAD_TALK_WHILE_MUTED, () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\n\n            this._audioAnalyser.addVADDetectionService(vadTalkMutedDetection);\n        } else {\n            logger.warn('No VAD Processor was provided. Talk while muted detection service was not initialized!');\n        }\n    }\n\n    // Disable noisy mic detection on safari since it causes the audio input to\n    // fail on Safari on iPadOS.\n    if (config.enableNoisyMicDetection && browser.supportsVADDetection()) {\n        if (config.createVADProcessor) {\n            if (!this._audioAnalyser) {\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\n            }\n\n            const vadNoiseDetection = new VADNoiseDetection();\n\n            vadNoiseDetection.on(DetectionEvents.VAD_NOISY_DEVICE, () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.NOISY_MIC));\n\n            this._audioAnalyser.addVADDetectionService(vadNoiseDetection);\n        } else {\n            logger.warn('No VAD Processor was provided. Noisy microphone detection service was not initialized!');\n        }\n    }\n\n    // Generates events based on no audio input detector.\n    if (config.enableNoAudioDetection) {\n        this._noAudioSignalDetection = new NoAudioSignalDetection(this);\n        this._noAudioSignalDetection.on(DetectionEvents.NO_AUDIO_INPUT, () => {\n            this.eventEmitter.emit(JitsiConferenceEvents.NO_AUDIO_INPUT);\n        });\n        this._noAudioSignalDetection.on(DetectionEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal => {\n            this.eventEmitter.emit(JitsiConferenceEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal);\n        });\n    }\n\n\n    if ('channelLastN' in config) {\n        this.setLastN(config.channelLastN);\n    }\n\n    /**\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\n     * @type {Jvb121EventGenerator}\n     */\n    this.jvb121Status = new Jvb121EventGenerator(this);\n\n    // creates dominant speaker detection that works only in p2p mode\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\n\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\n        this.setLocalParticipantProperty(\n            'region', config.deploymentInfo.userRegion);\n    }\n\n    // Publish the codec type to presence.\n    this.setLocalParticipantProperty('codecType', this.codecSelection.getPreferredCodec());\n};\n\n/**\n * Joins the conference.\n * @param password {string} the password\n */\nJitsiConference.prototype.join = function(password) {\n    if (this.room) {\n        this.room.join(password).then(() => this._maybeSetSITimeout());\n    }\n};\n\n/**\n * Authenticates and upgrades the role of the local participant/user.\n *\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the local participant/user finishes\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process.\n */\nJitsiConference.prototype.authenticateAndUpgradeRole = function(options) {\n    return authenticateAndUpgradeRole.call(this, {\n        ...options,\n        onCreateResource: JitsiConference.resourceCreator\n    });\n};\n\n/**\n * Check if joined to the conference.\n */\nJitsiConference.prototype.isJoined = function() {\n    return this.room && this.room.joined;\n};\n\n/**\n * Tells whether or not the P2P mode is enabled in the configuration.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PEnabled = function() {\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\n\n        // FIXME: remove once we have a default config template. -saghul\n        || typeof this.options.config.p2p === 'undefined';\n};\n\n/**\n * When in P2P test mode, the conference will not automatically switch to P2P\n * when there 2 participants.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\n    return Boolean(this.options.config.testing\n        && this.options.config.testing.p2pTestMode);\n};\n\n/**\n * Leaves the conference.\n * @returns {Promise}\n */\nJitsiConference.prototype.leave = function() {\n    if (this.participantConnectionStatus) {\n        this.participantConnectionStatus.dispose();\n        this.participantConnectionStatus = null;\n    }\n    if (this.avgRtpStatsReporter) {\n        this.avgRtpStatsReporter.dispose();\n        this.avgRtpStatsReporter = null;\n    }\n\n    if (this._audioOutputProblemDetector) {\n        this._audioOutputProblemDetector.dispose();\n        this._audioOutputProblemDetector = null;\n    }\n\n    if (this.e2eping) {\n        this.e2eping.stop();\n        this.e2eping = null;\n    }\n\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\n\n    this.rtc.closeBridgeChannel();\n\n    this._sendConferenceLeftAnalyticsEvent();\n\n    if (this.statistics) {\n        this.statistics.dispose();\n    }\n\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\n\n    // Close both JVb and P2P JingleSessions\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.close();\n        this.jvbJingleSession = null;\n    }\n    if (this.p2pJingleSession) {\n        this.p2pJingleSession.close();\n        this.p2pJingleSession = null;\n    }\n\n    // leave the conference\n    if (this.room) {\n        const room = this.room;\n\n        // Unregister connection state listeners\n        room.removeListener(\n            XMPPEvents.CONNECTION_INTERRUPTED,\n            this._onIceConnectionInterrupted);\n        room.removeListener(\n            XMPPEvents.CONNECTION_RESTORED,\n            this._onIceConnectionRestored);\n        room.removeListener(\n            XMPPEvents.CONNECTION_ESTABLISHED,\n            this._onIceConnectionEstablished);\n\n        room.removeListener(\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\n            this._updateProperties);\n\n        room.removeListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\n\n        this.eventManager.removeXMPPListeners();\n\n        this.room = null;\n\n        return room.leave()\n            .then(() => {\n                if (this.rtc) {\n                    this.rtc.destroy();\n                }\n            })\n            .catch(error => {\n                // remove all participants because currently the conference\n                // won't be usable anyway. This is done on success automatically\n                // by the ChatRoom instance.\n                this.getParticipants().forEach(\n                    participant => this.onMemberLeft(participant.getJid()));\n\n                throw error;\n            });\n    }\n\n    // If this.room == null we are calling second time leave().\n    return Promise.reject(\n        new Error('The conference is has been already left'));\n};\n\n/**\n * Returns the currently active media session if any.\n *\n * @returns {JingleSessionPC|undefined}\n * @private\n */\nJitsiConference.prototype._getActiveMediaSession = function() {\n    return this.isP2PActive() ? this.p2pJingleSession : this.jvbJingleSession;\n};\n\n/**\n * Returns an array containing all media sessions existing in this conference.\n *\n * @returns {Array<JingleSessionPC>}\n * @private\n */\nJitsiConference.prototype._getMediaSessions = function() {\n    const sessions = [];\n\n    this.jvbJingleSession && sessions.push(this.jvbJingleSession);\n    this.p2pJingleSession && sessions.push(this.p2pJingleSession);\n\n    return sessions;\n};\n\n/**\n * Returns name of this conference.\n */\nJitsiConference.prototype.getName = function() {\n    return this.options.name;\n};\n\n/**\n * Returns the {@link JitsiConnection} used by this this conference.\n */\nJitsiConference.prototype.getConnection = function() {\n    return this.connection;\n};\n\n/**\n * Check if authentication is enabled for this conference.\n */\nJitsiConference.prototype.isAuthEnabled = function() {\n    return this.authEnabled;\n};\n\n/**\n * Check if user is logged in.\n */\nJitsiConference.prototype.isLoggedIn = function() {\n    return Boolean(this.authIdentity);\n};\n\n/**\n * Get authorized login.\n */\nJitsiConference.prototype.getAuthLogin = function() {\n    return this.authIdentity;\n};\n\n/**\n * Check if external authentication is enabled for this conference.\n */\nJitsiConference.prototype.isExternalAuthEnabled = function() {\n    return this.room && this.room.moderator.isExternalAuthEnabled();\n};\n\n/**\n * Get url for external authentication.\n * @param {boolean} [urlForPopup] if true then return url for login popup,\n *                                else url of login page.\n * @returns {Promise}\n */\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\n    return new Promise((resolve, reject) => {\n        if (!this.isExternalAuthEnabled()) {\n            reject();\n\n            return;\n        }\n        if (urlForPopup) {\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\n        } else {\n            this.room.moderator.getLoginUrl(resolve, reject);\n        }\n    });\n};\n\n/**\n * Returns the local tracks of the given media type, or all local tracks if no\n * specific type is given.\n * @param {MediaType} [mediaType] Optional media type (audio or video).\n */\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\n    let tracks = [];\n\n    if (this.rtc) {\n        tracks = this.rtc.getLocalTracks(mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Obtains local audio track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalAudioTrack = function() {\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\n};\n\n/**\n * Obtains local video track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalVideoTrack = function() {\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\n};\n\n/**\n * Obtains the performance statistics.\n * @returns {Object|null}\n */\nJitsiConference.prototype.getPerformanceStats = function() {\n    return {\n        longTasksStats: this.statistics.getLongTasksStats()\n    };\n};\n\n/**\n * Attaches a handler for events(For example - \"participant joined\".) in the\n * conference. All possible event are defined in JitsiConferenceEvents.\n * @param eventId the event ID.\n * @param handler handler for the event.\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.on = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.on(eventId, handler);\n    }\n};\n\n/**\n * Removes event listener\n * @param eventId the event ID.\n * @param [handler] optional, the specific handler to unbind\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.off = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.removeListener(eventId, handler);\n    }\n};\n\n// Common aliases for event emitter\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\n\n/**\n * Receives notifications from other participants about commands / custom events\n * (sent by sendCommand or sendCommandOnce methods).\n * @param command {String} the name of the command\n * @param handler {Function} handler for the command\n */\nJitsiConference.prototype.addCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.addPresenceListener(command, handler);\n    }\n};\n\n/**\n  * Removes command  listener\n  * @param command {String} the name of the command\n  * @param handler {Function} handler to remove for the command\n  */\nJitsiConference.prototype.removeCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.removePresenceListener(command, handler);\n    }\n};\n\n/**\n * Sends text message to the other participants in the conference\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendTextMessage = function(\n        message, elementName = 'body') {\n    if (this.room) {\n        this.room.sendMessage(message, elementName);\n    }\n};\n\n/**\n * Send private text message to another participant of the conference\n * @param id the id of the participant to send a private message.\n * @param message the text message.\n * @param elementName the element name to encapsulate the message.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendPrivateTextMessage = function(\n        id, message, elementName = 'body') {\n    if (this.room) {\n        this.room.sendPrivateMessage(id, message, elementName);\n    }\n};\n\n/**\n * Send presence command.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommand = function(name, values) {\n    if (this.room) {\n        this.room.addOrReplaceInPresence(name, values) && this.room.sendPresence();\n    } else {\n        logger.warn('Not sending a command, room not initialized.');\n    }\n\n};\n\n/**\n * Send presence command one time.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\n    this.sendCommand(name, values);\n    this.removeCommand(name);\n};\n\n/**\n * Removes presence command.\n * @param name {String} the name of the command.\n **/\nJitsiConference.prototype.removeCommand = function(name) {\n    if (this.room) {\n        this.room.removeFromPresence(name);\n    }\n};\n\n/**\n * Sets the display name for this conference.\n * @param name the display name to set\n */\nJitsiConference.prototype.setDisplayName = function(name) {\n    if (this.room) {\n        this.room.addOrReplaceInPresence('nick', {\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\n            value: name\n        }) && this.room.sendPresence();\n    }\n};\n\n/**\n * Set new subject for this conference. (available only for moderator)\n * @param {string} subject new subject\n */\nJitsiConference.prototype.setSubject = function(subject) {\n    if (this.room && this.isModerator()) {\n        this.room.setSubject(subject);\n    } else {\n        logger.warn(`Failed to set subject, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n    }\n};\n\n/**\n * Get a transcriber object for all current participants in this conference\n * @return {Transcriber} the transcriber object\n */\nJitsiConference.prototype.getTranscriber = function() {\n    if (this.transcriber === undefined) {\n        this.transcriber = new Transcriber();\n\n        // add all existing local audio tracks to the transcriber\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\n\n        for (const localAudio of localAudioTracks) {\n            this.transcriber.addTrack(localAudio);\n        }\n\n        // and all remote audio tracks\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\n\n        for (const remoteTrack of remoteAudioTracks) {\n            this.transcriber.addTrack(remoteTrack);\n        }\n    }\n\n    return this.transcriber;\n};\n\n/**\n * Returns the transcription status.\n *\n * @returns {String} \"on\" or \"off\".\n */\nJitsiConference.prototype.getTranscriptionStatus = function() {\n    return this.room.transcriptionStatus;\n};\n\n/**\n * Adds JitsiLocalTrack object to the conference.\n * @param {JitsiLocalTrack} track the JitsiLocalTrack object.\n * @returns {Promise<JitsiLocalTrack>}\n * @throws {Error} if the specified track is a video track and there is already\n * another video track in the conference.\n */\nJitsiConference.prototype.addTrack = function(track) {\n    const mediaType = track.getType();\n    const localTracks = this.rtc.getLocalTracks(mediaType);\n\n    // Ensure there's exactly 1 local track of each media type in the conference.\n    if (localTracks.length > 0) {\n        // Don't be excessively harsh and severe if the API client happens to attempt to add the same local track twice.\n        if (track === localTracks[0]) {\n            return Promise.resolve(track);\n        }\n\n        return Promise.reject(new Error(`Cannot add second ${mediaType} track to the conference`));\n    }\n\n    return this.replaceTrack(null, track);\n};\n\n/**\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\n * @param {number} audioLevel the audio level\n * @param {TraceablePeerConnection} [tpc]\n */\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\n        audioLevel,\n        tpc) {\n    const activeTpc = this.getActivePeerConnection();\n\n    // There will be no TraceablePeerConnection if audio levels do not come from\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\n    // Audio Analyser API and emits local audio levels events through\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\n    // optional.\n    if (!tpc || activeTpc === tpc) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this.myUserId(), audioLevel);\n    }\n};\n\n/**\n * Fires TRACK_MUTE_CHANGED change conference event.\n * @param track the JitsiTrack object related to the event.\n */\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\n    // check if track was muted by focus and now is unmuted by user\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\n        this.isMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false, MediaType.AUDIO);\n    } else if (this.isVideoMutedByFocus && track.isVideoTrack() && !track.isMuted()) {\n        this.isVideoMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false, MediaType.VIDEO);\n    }\n\n    let actorParticipant;\n\n    if (this.mutedByFocusActor && track.isAudioTrack()) {\n        const actorId = Strophe.getResourceFromJid(this.mutedByFocusActor);\n\n        actorParticipant = this.participants[actorId];\n    } else if (this.mutedVideoByFocusActor && track.isVideoTrack()) {\n        const actorId = Strophe.getResourceFromJid(this.mutedVideoByFocusActor);\n\n        actorParticipant = this.participants[actorId];\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track, actorParticipant);\n};\n\n/**\n * Returns the list of local tracks that need to be added to the peerconnection on join.\n * This takes the startAudioMuted/startVideoMuted flags into consideration since we do not\n * want to add the tracks if the user joins the call audio/video muted. The tracks will be\n * added when the user unmutes for the first time.\n * @returns {Array<JitsiLocalTrack>} - list of local tracks that are unmuted.\n */\nJitsiConference.prototype._getInitialLocalTracks = function() {\n    return this.getLocalTracks()\n        .filter(track => (track.getType() === MediaType.AUDIO && !this.isStartAudioMuted())\n        || (track.getType() === MediaType.VIDEO && !this.isStartVideoMuted()));\n};\n\n/**\n * Clear JitsiLocalTrack properties and listeners.\n * @param track the JitsiLocalTrack object.\n */\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\n    track._setConference(null);\n    this.rtc.removeLocalTrack(track);\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        track.muteHandler);\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        track.audioLevelHandler);\n\n    // send event for stopping screen sharing\n    // FIXME: we assume we have only one screen sharing track\n    // if we change this we need to fix this check\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n        this.statistics.sendScreenSharingEvent(false);\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n};\n\n/**\n * Removes JitsiLocalTrack from the conference and performs\n * a new offer/answer cycle.\n * @param {JitsiLocalTrack} track\n * @returns {Promise}\n */\nJitsiConference.prototype.removeTrack = function(track) {\n    return this.replaceTrack(track, null);\n};\n\n/**\n * Replaces oldTrack with newTrack and performs a single offer/answer\n *  cycle after both operations are done.  Either oldTrack or newTrack\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\n *  effectively just removes 'oldTrack'\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\n * @param {JitsiLocalTrack} newTrack the new stream to use\n * @returns {Promise} resolves when the replacement is finished\n */\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\n    // First do the removal of the oldTrack at the JitsiConference level\n    if (oldTrack) {\n        if (oldTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n    if (newTrack) {\n        if (newTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n\n    // Now replace the stream at the lower levels\n    return this._doReplaceTrack(oldTrack, newTrack)\n        .then(() => {\n            if (oldTrack) {\n                this.onLocalTrackRemoved(oldTrack);\n            }\n\n            // Send 'VideoTypeMessage' on the bridge channel for the new track.\n            if (newTrack) {\n                // Now handle the addition of the newTrack at the JitsiConference level\n                this._setupNewTrack(newTrack);\n                newTrack.isVideoTrack() && this.rtc.setVideoType(newTrack.videoType);\n            } else {\n                oldTrack && oldTrack.isVideoTrack() && this.rtc.setVideoType(VideoType.NONE);\n            }\n\n            if (this.isMutedByFocus || this.isVideoMutedByFocus) {\n                this._fireMuteChangeEvent(newTrack);\n            }\n\n            return Promise.resolve();\n        })\n        .catch(error => Promise.reject(new Error(error)));\n};\n\n/**\n * Replaces the tracks at the lower level by going through the Jingle session\n * and WebRTC peer connection. The method will resolve immediately if there is\n * currently no JingleSession started.\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\n * the process or <tt>null</t> if the method should act as \"add track\"\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\n * <tt>null</tt> if the method should act as \"remove track\"\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n * @private\n */\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\n    const replaceTrackPromises = [];\n\n    if (this.jvbJingleSession) {\n        replaceTrackPromises.push(\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no JVB JingleSession');\n    }\n\n    if (this.p2pJingleSession) {\n        replaceTrackPromises.push(\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no P2P JingleSession');\n    }\n\n    return Promise.all(replaceTrackPromises);\n};\n\n/**\n * Operations related to creating a new track\n * @param {JitsiLocalTrack} newTrack the new track being created\n */\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\n            && newTrack.videoType !== VideoType.DESKTOP)) {\n        // Report active device to statistics\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\n        const device\n            = devices.find(\n                d =>\n                    d.kind === `${newTrack.getTrack().kind}input`\n                        && d.label === newTrack.getTrack().label);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n    if (newTrack.isVideoTrack()) {\n        const videoTypeTagName = 'videoType';\n\n        // if video type is camera and there is no videoType in presence, we skip adding it, as this is the default one\n        if (newTrack.videoType !== VideoType.CAMERA || this.room.getFromPresence(videoTypeTagName)) {\n            this.sendCommand(videoTypeTagName, { value: newTrack.videoType });\n        }\n    }\n    this.rtc.addLocalTrack(newTrack);\n\n    // ensure that we're sharing proper \"is muted\" state\n    if (newTrack.isAudioTrack()) {\n        this.room.setAudioMute(newTrack.isMuted());\n    } else {\n        this.room.setVideoMute(newTrack.isMuted());\n    }\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        newTrack.muteHandler);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        newTrack.audioLevelHandler);\n\n    newTrack._setConference(this);\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\n * removed on video mute).\n * @param {JitsiLocalTrack} track the local track that will be added as part of\n * the unmute operation.\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n */\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\n    const addAsUnmutePromises = [];\n\n    if (this.jvbJingleSession) {\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.debug('Add local MediaStream as unmute - no JVB Jingle session started yet');\n    }\n\n    if (this.p2pJingleSession) {\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.debug('Add local MediaStream as unmute - no P2P Jingle session started yet');\n    }\n\n    return Promise.allSettled(addAsUnmutePromises)\n        .then(() => {\n            // Signal the video type to the bridge.\n            track.isVideoTrack() && this.rtc.setVideoType(track.videoType);\n        });\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\n * that is to stop sending any data and turn off the HW camera device.\n * @param {JitsiLocalTrack} track the local track that will be removed.\n * @return {Promise}\n */\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\n    const removeAsMutePromises = [];\n\n    if (this.jvbJingleSession) {\n        removeAsMutePromises.push(this.jvbJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.debug('Remove local MediaStream - no JVB JingleSession started yet');\n    }\n    if (this.p2pJingleSession) {\n        removeAsMutePromises.push(this.p2pJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.debug('Remove local MediaStream - no P2P JingleSession started yet');\n    }\n\n    return Promise.allSettled(removeAsMutePromises)\n        .then(() => {\n            // Signal the video type to the bridge.\n            track.isVideoTrack() && this.rtc.setVideoType(VideoType.NONE);\n        });\n};\n\n/**\n * Get role of the local user.\n * @returns {string} user role: 'moderator' or 'none'\n */\nJitsiConference.prototype.getRole = function() {\n    return this.room.role;\n};\n\n/**\n * Returns whether or not the current conference has been joined as a hidden\n * user.\n *\n * @returns {boolean|null} True if hidden, false otherwise. Will return null if\n * no connection is active.\n */\nJitsiConference.prototype.isHidden = function() {\n    if (!this.connection) {\n        return null;\n    }\n\n    return Strophe.getDomainFromJid(this.connection.getJid())\n        === this.options.config.hiddenDomain;\n};\n\n/**\n * Check if local user is moderator.\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\n * we're no longer in the conference room then <tt>null</tt> is returned.\n */\nJitsiConference.prototype.isModerator = function() {\n    return this.room ? this.room.isModerator() : null;\n};\n\n/**\n * Set password for the room.\n * @param {string} password new password for the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.lock = function(password) {\n    if (!this.isModerator()) {\n        return Promise.reject(new Error('You are not moderator.'));\n    }\n\n    return new Promise((resolve, reject) => {\n        this.room.lockRoom(\n            password || '',\n            () => resolve(),\n            err => reject(err),\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\n    });\n};\n\n/**\n * Remove password from the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.unlock = function() {\n    return this.lock();\n};\n\n/**\n * Elects the participant with the given id to be the selected participant in\n * order to receive higher video quality (if simulcast is enabled).\n * Or cache it if channel is not created and send it once channel is available.\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipant = function(participantId) {\n    this.selectParticipants([ participantId ]);\n};\n\n/*\n * Elects participants with given ids to be the selected participants in order\n * to receive higher video quality (if simulcast is enabled). The argument\n * should be an array of participant id strings or an empty array; an error will\n * be thrown if a non-array is passed in. The error is thrown as a layer of\n * protection against passing an invalid argument, as the error will happen in\n * the bridge and may not be visible in the client.\n *\n * @param {Array<strings>} participantIds - An array of identifiers for\n * participants.\n * @returns {void}\n */\nJitsiConference.prototype.selectParticipants = function(participantIds) {\n    if (!Array.isArray(participantIds)) {\n        throw new Error('Invalid argument; participantIds must be an array.');\n    }\n\n    this.receiveVideoController.selectEndpoints(participantIds);\n};\n\n/**\n * Obtains the current value for \"lastN\". See {@link setLastN} for more info.\n * @returns {number}\n */\nJitsiConference.prototype.getLastN = function() {\n    return this.receiveVideoController.getLastN();\n};\n\n/**\n * Selects a new value for \"lastN\". The requested amount of videos are going\n * to be delivered after the value is in effect. Set to -1 for unlimited or\n * all available videos.\n * @param lastN the new number of videos the user would like to receive.\n * @throws Error or RangeError if the given value is not a number or is smaller\n * than -1.\n */\nJitsiConference.prototype.setLastN = function(lastN) {\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\n        throw new Error(`Invalid value for lastN: ${lastN}`);\n    }\n    const n = Number(lastN);\n\n    if (n < -1) {\n        throw new RangeError('lastN cannot be smaller than -1');\n    }\n    this.receiveVideoController.setLastN(n);\n\n    // If the P2P session is not fully established yet, we wait until it gets\n    // established.\n    if (this.p2pJingleSession) {\n        const isVideoActive = n !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    `Failed to adjust video transfer status (${isVideoActive})`,\n                    error);\n            });\n    }\n};\n\n/**\n * Checks if the participant given by participantId is currently included in\n * the last N.\n * @param {string} participantId the identifier of the participant we would\n * like to check.\n * @return {boolean} true if the participant with id is in the last N set or\n * if there's no last N set, false otherwise.\n * @deprecated this method should never be used to figure out the UI, but\n * {@link ParticipantConnectionStatus} should be used instead.\n */\nJitsiConference.prototype.isInLastN = function(participantId) {\n    return this.rtc.isInLastN(participantId);\n};\n\n/**\n * @return Array<JitsiParticipant> an array of all participants in this\n * conference.\n */\nJitsiConference.prototype.getParticipants = function() {\n    return Object.values(this.participants);\n};\n\n/**\n * Returns the number of participants in the conference, including the local\n * participant.\n * @param countHidden {boolean} Whether or not to include hidden participants\n * in the count. Default: false.\n **/\nJitsiConference.prototype.getParticipantCount\n    = function(countHidden = false) {\n\n        let participants = this.getParticipants();\n\n        if (!countHidden) {\n            participants = participants.filter(p => !p.isHidden());\n        }\n\n        // Add one for the local participant.\n        return participants.length + 1;\n    };\n\n/**\n * @returns {JitsiParticipant} the participant in this conference with the\n * specified id (or undefined if there isn't one).\n * @param id the id of the participant.\n */\nJitsiConference.prototype.getParticipantById = function(id) {\n    return this.participants[id];\n};\n\n/**\n * Grant owner rights to the participant.\n * @param {string} id id of the participant to grant owner rights to.\n */\nJitsiConference.prototype.grantOwner = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.setAffiliation(participant.getJid(), 'owner');\n};\n\n/**\n * Revoke owner rights to the participant or local Participant as\n * the user might want to refuse to be a moderator.\n * @param {string} id id of the participant to revoke owner rights to.\n */\nJitsiConference.prototype.revokeOwner = function(id) {\n    const participant = this.getParticipantById(id);\n    const isMyself = this.myUserId() === id;\n    const role = this.isMembersOnly() ? 'member' : 'none';\n\n    if (isMyself) {\n        this.room.setAffiliation(this.room.myroomjid, role);\n    } else if (participant) {\n        this.room.setAffiliation(participant.getJid(), role);\n    }\n};\n\n\n/**\n * Kick participant from this conference.\n * @param {string} id id of the participant to kick\n * @param {string} reason reason of the participant to kick\n */\nJitsiConference.prototype.kickParticipant = function(id, reason) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.kick(participant.getJid(), reason);\n};\n\n/**\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\n * analytics event.\n * @private\n */\nJitsiConference.prototype._maybeClearSITimeout = function() {\n    if (this._sessionInitiateTimeout\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\n        window.clearTimeout(this._sessionInitiateTimeout);\n        this._sessionInitiateTimeout = null;\n    }\n};\n\n/**\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\n * event.\n * @private\n */\nJitsiConference.prototype._maybeSetSITimeout = function() {\n    // Jicofo is supposed to invite if there are at least 2 participants\n    if (!this.jvbJingleSession\n            && this.getParticipantCount() >= 2\n            && !this._sessionInitiateTimeout) {\n        this._sessionInitiateTimeout = window.setTimeout(() => {\n            this._sessionInitiateTimeout = null;\n            Statistics.sendAnalytics(createJingleEvent(\n                ACTION_JINGLE_SI_TIMEOUT,\n                {\n                    p2p: false,\n                    value: JINGLE_SI_TIMEOUT\n                }));\n        }, JINGLE_SI_TIMEOUT);\n    }\n};\n\n/**\n * Mutes a participant.\n * @param {string} id The id of the participant to mute.\n */\nJitsiConference.prototype.muteParticipant = function(id, mediaType) {\n    const muteMediaType = mediaType ? mediaType : MediaType.AUDIO;\n\n    if (muteMediaType !== MediaType.AUDIO && muteMediaType !== MediaType.VIDEO) {\n        logger.error(`Unsupported media type: ${muteMediaType}`);\n\n        return;\n    }\n\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.muteParticipant(participant.getJid(), true, muteMediaType);\n};\n\n/* eslint-disable max-params */\n\n/**\n * Notifies this JitsiConference that a new member has joined its chat room.\n *\n * FIXME This should NOT be exposed!\n *\n * @param jid the jid of the participant in the MUC\n * @param nick the display name of the participant\n * @param role the role of the participant in the MUC\n * @param isHidden indicates if this is a hidden participant (system\n * participant for example a recorder).\n * @param statsID the participant statsID (optional)\n * @param status the initial status if any\n * @param identity the member identity, if any\n * @param botType the member botType, if any\n * @param fullJid the member full jid, if any\n * @param features the member botType, if any\n */\nJitsiConference.prototype.onMemberJoined = function(\n        jid, nick, role, isHidden, statsID, status, identity, botType, fullJid, features) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status, identity);\n\n    participant.setRole(role);\n    participant.setBotType(botType);\n    participant.setFeatures(features);\n\n    this.participants[id] = participant;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_JOINED,\n        id,\n        participant);\n\n    this._updateFeatures(participant);\n\n    // maybeStart only if we had finished joining as then we will have information for the number of participants\n    if (this.isJoined()) {\n        this._maybeStartOrStopP2P();\n    }\n\n    this._maybeSetSITimeout();\n};\n\n/* eslint-enable max-params */\n\n/**\n * Get notified when we joined the room.\n *\n * FIXME This should NOT be exposed!\n *\n * @private\n */\nJitsiConference.prototype._onMucJoined = function() {\n    this._maybeStartOrStopP2P();\n};\n\n/**\n * Updates features for a participant.\n * @param {JitsiParticipant} participant - The participant to query for features.\n * @returns {void}\n * @private\n */\nJitsiConference.prototype._updateFeatures = function(participant) {\n    participant.getFeatures()\n        .then(features => {\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\n            this.updateDTMFSupport();\n\n            if (features.has(FEATURE_JIGASI)) {\n                participant.setProperty('features_jigasi', true);\n            }\n\n            if (features.has(FEATURE_E2EE)) {\n                participant.setProperty('features_e2ee', true);\n            }\n        })\n        .catch(() => false);\n};\n\n/**\n * Get notified when member bot type had changed.\n * @param jid the member jid\n * @param botType the new botType value\n * @private\n */\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\n\n    // find the participant and mark it as non bot, as the real one will join\n    // in a moment\n    const peers = this.getParticipants();\n    const botParticipant = peers.find(p => p.getJid() === jid);\n\n    if (botParticipant) {\n        botParticipant.setBotType(botType);\n        const id = Strophe.getResourceFromJid(jid);\n\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\n            id,\n            botType);\n    }\n\n    // if botType changed to undefined, botType was removed, in case of\n    // poltergeist mode this is the moment when the poltergeist had exited and\n    // the real participant had already replaced it.\n    // In this case we can check and try p2p\n    if (!botParticipant.getBotType()) {\n        this._maybeStartOrStopP2P();\n    }\n};\n\nJitsiConference.prototype.onMemberLeft = function(jid) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n\n    const participant = this.participants[id];\n\n    delete this.participants[id];\n\n    // Remove the ssrcs from the remote description.\n    const mediaSessions = this._getMediaSessions();\n    const removePromises = [];\n\n    for (const session of mediaSessions) {\n        removePromises.push(session.removeRemoteStreamsOnLeave(id));\n    }\n\n    Promise.allSettled(removePromises)\n        .then(results => {\n            let removedTracks = [];\n\n            results.map(result => result.value).forEach(value => {\n                if (value) {\n                    removedTracks = removedTracks.concat(value);\n                }\n            });\n\n            removedTracks.forEach(track => {\n                this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n            });\n\n            // There can be no participant in case the member that left is focus.\n            if (participant) {\n                this.eventEmitter.emit(JitsiConferenceEvents.USER_LEFT, id, participant);\n            }\n\n            this._maybeStartOrStopP2P(true /* triggered by user left event */);\n            this._maybeClearSITimeout();\n        });\n};\n\n/**\n * Designates an event indicating that we were kicked from the XMPP MUC.\n * @param {boolean} isSelfPresence - whether it is for local participant\n * or another participant.\n * @param {string} actorId - the id of the participant who was initiator\n * of the kick.\n * @param {string?} kickedParticipantId - when it is not a kick for local participant,\n * this is the id of the participant which was kicked.\n * @param {string} reason - reason of the participant to kick\n */\nJitsiConference.prototype.onMemberKicked = function(isSelfPresence, actorId, kickedParticipantId, reason) {\n    // This check which be true when we kick someone else. With the introduction of lobby\n    // the ChatRoom KICKED event is now also emitted for ourselves (the kicker) so we want to\n    // avoid emitting an event where `undefined` kicked someone.\n    if (actorId === this.myUserId()) {\n        return;\n    }\n\n    const actorParticipant = this.participants[actorId];\n\n    if (isSelfPresence) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.KICKED, actorParticipant, reason);\n\n        this.leave();\n\n        return;\n    }\n\n    const kickedParticipant = this.participants[kickedParticipantId];\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.PARTICIPANT_KICKED, actorParticipant, kickedParticipant, reason);\n};\n\n/**\n * Method called on local MUC role change.\n * @param {string} role the name of new user's role as defined by XMPP MUC.\n */\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\n    // Emit role changed for local  JID\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\n};\n\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    participant.setRole(role);\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\n};\n\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n\n    if (participant._displayName === displayName) {\n        return;\n    }\n\n    participant._displayName = displayName;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n        id,\n        displayName);\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\n * the conference.\n *\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\n * JitsiConference\n */\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\n    if (track.isP2P && !this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\n\n        return;\n    } else if (!track.isP2P && this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote JVB track, when in P2P - IGNORED');\n\n        return;\n    }\n\n    const id = track.getParticipantId();\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        logger.error(`No participant found for id: ${id}`);\n\n        return;\n    }\n\n    // Add track to JitsiParticipant.\n    participant._tracks.push(track);\n\n    if (this.transcriber) {\n        this.transcriber.addTrack(track);\n    }\n\n    const emitter = this.eventEmitter;\n\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        (audioLevel, tpc) => {\n            const activeTPC = this.getActivePeerConnection();\n\n            if (activeTPC === tpc) {\n                emitter.emit(\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                    id,\n                    audioLevel);\n            }\n        }\n    );\n\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\n};\n\n/**\n * Callback called by the Jingle plugin when 'session-answer' is received.\n * @param {JingleSessionPC} session the Jingle session for which an answer was\n * received.\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P setAnswer');\n\n        this.p2pJingleSession.setAnswer(answer);\n        this.eventEmitter.emit(JitsiConferenceEvents._MEDIA_SESSION_STARTED, this.p2pJingleSession);\n    }\n};\n\n/**\n * Callback called by the Jingle plugin when 'transport-info' is received.\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\n * received\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\n * element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P addIceCandidates');\n        this.p2pJingleSession.addIceCandidates(transportInfo);\n    }\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\n * the conference.\n *\n * @param {JitsiRemoteTrack} removedTrack\n */\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\n    this.getParticipants().forEach(participant => {\n        const tracks = participant.getTracks();\n\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i] === removedTrack) {\n                // Since the tracks have been compared and are\n                // considered equal the result of splice can be ignored.\n                participant._tracks.splice(i, 1);\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\n\n                if (this.transcriber) {\n                    this.transcriber.removeTrack(removedTrack);\n                }\n\n                break;\n            }\n        }\n    }, this);\n};\n\n/**\n * Handles an incoming call event for the P2P jingle session.\n */\nJitsiConference.prototype._onIncomingCallP2P = function(\n        jingleSession,\n        jingleOffer) {\n\n    let rejectReason;\n\n    if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled() && (browser.isFirefox() || browser.isWebKitBased())) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P disabled',\n            errorMsg: 'P2P mode disabled in the configuration'\n        };\n    } else if (this.p2pJingleSession) {\n        // Reject incoming P2P call (already in progress)\n        rejectReason = {\n            reason: 'busy',\n            reasonDescription: 'P2P already in progress',\n            errorMsg: 'Duplicated P2P \"session-initiate\"'\n        };\n    } else if (!this._shouldBeInP2PMode()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P requirements not met',\n            errorMsg: 'Received P2P \"session-initiate\" when should not be in P2P mode'\n        };\n        Statistics.sendAnalytics(createJingleEvent(ACTION_P2P_DECLINED));\n    }\n\n    if (rejectReason) {\n        this._rejectIncomingCall(jingleSession, rejectReason);\n    } else {\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\n    }\n};\n\n/**\n * Handles an incoming call event.\n */\nJitsiConference.prototype.onIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n    // Handle incoming P2P call\n    if (jingleSession.isP2P) {\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\n    } else {\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\n            const description = 'Rejecting session-initiate from non-focus.';\n\n            this._rejectIncomingCall(\n                jingleSession, {\n                    reason: 'security-error',\n                    reasonDescription: description,\n                    errorMsg: description\n                });\n\n            return;\n        }\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\n    }\n};\n\n/**\n * Accepts an incoming call event for the JVB jingle session.\n */\nJitsiConference.prototype._acceptJvbIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n\n    // Accept incoming call\n    this.jvbJingleSession = jingleSession;\n    this.room.connectionTimes['session.initiate'] = now;\n    this._sendConferenceJoinAnalyticsEvent();\n\n    if (this.wasStopped) {\n        Statistics.sendAnalyticsAndLog(\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\n    }\n\n    const serverRegion\n        = $(jingleOffer)\n            .find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]')\n            .attr('region');\n\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\n        serverRegion);\n\n    this._maybeClearSITimeout();\n    Statistics.sendAnalytics(createJingleEvent(\n        ACTION_JINGLE_SI_RECEIVED,\n        {\n            p2p: false,\n            value: now\n        }));\n\n    try {\n        jingleSession.initialize(this.room, this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n    } catch (error) {\n        GlobalOnErrorHandler.callErrorHandler(error);\n        logger.error(error);\n\n        return;\n    }\n\n    // Open a channel with the videobridge.\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\n\n    const localTracks = this._getInitialLocalTracks();\n\n    try {\n        jingleSession.acceptOffer(\n            jingleOffer,\n            () => {\n                // If for any reason invite for the JVB session arrived after\n                // the P2P has been established already the media transfer needs\n                // to be turned off here.\n                if (this.isP2PActive() && this.jvbJingleSession) {\n                    this._suspendMediaTransferForJvbConnection();\n                }\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n                    jingleSession);\n                if (!this.isP2PActive()) {\n                    this.eventEmitter.emit(\n                        JitsiConferenceEvents._MEDIA_SESSION_ACTIVE_CHANGED,\n                        jingleSession);\n                }\n            },\n            error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to accept incoming Jingle session', error);\n            },\n            localTracks\n        );\n\n        // Start callstats as soon as peerconnection is initialized,\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\n        // happen in case if user doesn't have or denied permission to\n        // both camera and microphone.\n        logger.info('Starting CallStats for JVB connection...');\n        this.statistics.startCallStats(\n            this.jvbJingleSession.peerconnection,\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error(e);\n    }\n};\n\n/**\n * Sets the BridgeChannel.\n *\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\n * BridgeChannel mode.\n * @param {TraceablePeerConnection} pc the peer connection which will be used\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\n */\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\n    let wsUrl = null;\n    const webSocket\n        = $(offerIq)\n            .find('>content>transport>web-socket')\n            .first();\n\n    if (webSocket.length === 1) {\n        wsUrl = webSocket[0].getAttribute('url');\n    }\n\n    if (wsUrl) {\n        // If the offer contains a websocket use it.\n        this.rtc.initializeBridgeChannel(null, wsUrl);\n    } else {\n        // Otherwise, fall back to an attempt to use SCTP.\n        this.rtc.initializeBridgeChannel(pc, null);\n    }\n};\n\n/**\n * Rejects incoming Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\n * @param {object} [options]\n * @param {string} options.reason the name of the reason element as defined\n * by Jingle\n * @param {string} options.reasonDescription the reason description which will\n * be included in Jingle 'session-terminate' message.\n * @param {string} options.errorMsg an error message to be logged on global\n * error handler\n * @private\n */\nJitsiConference.prototype._rejectIncomingCall = function(\n        jingleSession,\n        options) {\n    if (options && options.errorMsg) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\n    }\n\n    // Terminate the jingle session with a reason\n    jingleSession.terminate(\n        null /* success callback => we don't care */,\n        error => {\n            logger.warn(\n                'An error occurred while trying to terminate'\n                    + ' invalid Jingle session', error);\n        }, {\n            reason: options && options.reason,\n            reasonDescription: options && options.reasonDescription,\n            sendSessionTerminate: true\n        });\n};\n\n/**\n * Handles the call ended event.\n * XXX is this due to the remote side terminating the Jingle session?\n *\n * @param {JingleSessionPC} jingleSession the jingle session which has been\n * terminated.\n * @param {String} reasonCondition the Jingle reason condition.\n * @param {String|null} reasonText human readable reason text which may provide\n * more details about why the call has been terminated.\n */\nJitsiConference.prototype.onCallEnded = function(\n        jingleSession,\n        reasonCondition,\n        reasonText) {\n    logger.info(\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\n            jingleSession.isP2P}`);\n    if (jingleSession === this.jvbJingleSession) {\n        this.wasStopped = true;\n\n        Statistics.sendAnalytics(\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\n\n        // Stop the stats\n        if (this.statistics) {\n            this.statistics.stopRemoteStats(\n                this.jvbJingleSession.peerconnection);\n            logger.info('Stopping JVB CallStats');\n            this.statistics.stopCallStats(\n                this.jvbJingleSession.peerconnection);\n        }\n\n        // Current JVB JingleSession is no longer valid, so set it to null\n        this.jvbJingleSession = null;\n\n        // Let the RTC service do any cleanups\n        this.rtc.onCallEnded();\n    } else if (jingleSession === this.p2pJingleSession) {\n        // It's the responder who decides to enforce JVB mode, so that both\n        // initiator and responder are aware if it was intentional.\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\n            logger.info('In forced JVB 121 mode...');\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        } else if (reasonCondition === 'connectivity-error'\n            && reasonText === 'ICE FAILED') {\n            // It can happen that the other peer detects ICE failed and\n            // terminates the session, before we get the event on our side.\n            // But we are able to parse the reason and mark it here.\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n        }\n        this._stopP2PSession();\n    } else {\n        logger.error(\n            'Received onCallEnded for invalid session',\n            jingleSession.sid,\n            jingleSession.remoteJid,\n            reasonCondition,\n            reasonText);\n    }\n};\n\n/**\n * Handles the suspend detected event. Leaves the room and fires suspended.\n * @param {JingleSessionPC} jingleSession\n */\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\n    if (!jingleSession.isP2P) {\n        this.leave();\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\n    }\n};\n\nJitsiConference.prototype.updateDTMFSupport = function() {\n    let somebodySupportsDTMF = false;\n    const participants = this.getParticipants();\n\n    // check if at least 1 participant supports DTMF\n    for (let i = 0; i < participants.length; i += 1) {\n        if (participants[i].supportsDTMF()) {\n            somebodySupportsDTMF = true;\n            break;\n        }\n    }\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\n            somebodySupportsDTMF);\n    }\n};\n\n/**\n * Allows to check if there is at least one user in the conference\n * that supports DTMF.\n * @returns {boolean} true if somebody supports DTMF, false otherwise\n */\nJitsiConference.prototype.isDTMFSupported = function() {\n    return this.somebodySupportsDTMF;\n};\n\n/**\n * Returns the local user's ID\n * @return {string} local user's ID\n */\nJitsiConference.prototype.myUserId = function() {\n    return (\n        this.room && this.room.myroomjid\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\n            : null);\n};\n\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\n    const peerConnection = this.getActivePeerConnection();\n\n    if (peerConnection) {\n        peerConnection.sendTones(tones, duration, pause);\n    } else {\n        logger.warn('cannot sendTones: no peer connection');\n    }\n};\n\n/**\n * Starts recording the current conference.\n *\n * @param {Object} options - Configuration for the recording. See\n * {@link Chatroom#startRecording} for more info.\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\n */\nJitsiConference.prototype.startRecording = function(options) {\n    if (this.room) {\n        return this.recordingManager.startRecording(options);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Stop a recording session.\n *\n * @param {string} sessionID - The ID of the recording session that\n * should be stopped.\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\n */\nJitsiConference.prototype.stopRecording = function(sessionID) {\n    if (this.room) {\n        return this.recordingManager.stopRecording(sessionID);\n    }\n\n    return Promise.reject(new Error('The conference is not created yet!'));\n};\n\n/**\n * Returns true if the SIP calls are supported and false otherwise\n */\nJitsiConference.prototype.isSIPCallingSupported = function() {\n    if (this.room) {\n        return this.room.isSIPCallingSupported();\n    }\n\n    return false;\n};\n\n/**\n * Dials a number.\n * @param number the number\n */\nJitsiConference.prototype.dial = function(number) {\n    if (this.room) {\n        return this.room.dial(number);\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Hangup an existing call\n */\nJitsiConference.prototype.hangup = function() {\n    if (this.room) {\n        return this.room.hangup();\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Starts the transcription service.\n */\nJitsiConference.prototype.startTranscriber = function() {\n    return this.dial('jitsi_meet_transcribe');\n};\n\n\n/**\n * Stops the transcription service.\n */\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\n\n/**\n * Returns the phone number for joining the conference.\n */\nJitsiConference.prototype.getPhoneNumber = function() {\n    if (this.room) {\n        return this.room.getPhoneNumber();\n    }\n\n    return null;\n};\n\n/**\n * Returns the pin for joining the conference with phone.\n */\nJitsiConference.prototype.getPhonePin = function() {\n    if (this.room) {\n        return this.room.getPhonePin();\n    }\n\n    return null;\n};\n\n/**\n * Returns the meeting unique ID if any.\n *\n * @returns {string|undefined}\n */\nJitsiConference.prototype.getMeetingUniqueId = function() {\n    if (this.room) {\n        return this.room.getMeetingId();\n    }\n};\n\n/**\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\n * which connection is currently active.\n *\n * @return {TraceablePeerConnection|null} null if there isn't any active\n * <tt>TraceablePeerConnection</tt> currently available.\n * @public (FIXME how to make package local ?)\n */\nJitsiConference.prototype.getActivePeerConnection = function() {\n    const session = this.isP2PActive() ? this.p2pJingleSession : this.jvbJingleSession;\n\n    return session ? session.peerconnection : null;\n};\n\n/**\n * Returns the connection state for the current room. Its ice connection state\n * for its session.\n * NOTE that \"completed\" ICE state which can appear on the P2P connection will\n * be converted to \"connected\".\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\n * peer connection at this time.\n */\nJitsiConference.prototype.getConnectionState = function() {\n    const peerConnection = this.getActivePeerConnection();\n\n    return peerConnection ? peerConnection.getConnectionState() : null;\n};\n\n/**\n * Make all new participants mute their audio/video on join.\n * @param policy {Object} object with 2 boolean properties for video and audio:\n * @param {boolean} audio if audio should be muted.\n * @param {boolean} video if video should be muted.\n */\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\n    if (!this.isModerator()) {\n        logger.warn(`Failed to set start muted policy, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n\n        return;\n    }\n    this.startMutedPolicy = policy;\n    this.room.addOrReplaceInPresence('startmuted', {\n        attributes: {\n            audio: policy.audio,\n            video: policy.video,\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\n        }\n    }) && this.room.sendPresence();\n};\n\n/**\n * Returns current start muted policy\n * @returns {Object} with 2 properties - audio and video.\n */\nJitsiConference.prototype.getStartMutedPolicy = function() {\n    return this.startMutedPolicy;\n};\n\n/**\n * Check if audio is muted on join.\n */\nJitsiConference.prototype.isStartAudioMuted = function() {\n    return this.startAudioMuted;\n};\n\n/**\n * Check if video is muted on join.\n */\nJitsiConference.prototype.isStartVideoMuted = function() {\n    return this.startVideoMuted;\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConference.prototype.getConnectionTimes = function() {\n    return this.room.connectionTimes;\n};\n\n/**\n * Sets a property for the local participant.\n */\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\n    this.sendCommand(`jitsi_participant_${name}`, { value });\n};\n\n/**\n *  Removes a property for the local participant and sends the updated presence.\n */\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\n    this.removeCommand(`jitsi_participant_${name}`);\n    this.room.sendPresence();\n};\n\n/**\n * Gets a local participant property.\n *\n * @return value of the local participant property if the tagName exists in the\n * list of properties, otherwise returns undefined.\n */\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\n    const property = this.room.presMap.nodes.find(prop =>\n        prop.tagName === `jitsi_participant_${name}`\n    );\n\n    return property ? property.value : undefined;\n};\n\n/**\n * Sends the given feedback through CallStats if enabled.\n *\n * @param overallFeedback an integer between 1 and 5 indicating the\n * user feedback\n * @param detailedFeedback detailed feedback from the user. Not yet used\n * @returns {Promise} Resolves if feedback is submitted successfully.\n */\nJitsiConference.prototype.sendFeedback = function(\n        overallFeedback,\n        detailedFeedback) {\n    return this.statistics.sendFeedback(overallFeedback, detailedFeedback);\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nJitsiConference.prototype.isCallstatsEnabled = function() {\n    return this.statistics.isCallstatsEnabled();\n};\n\n/**\n * Finds the SSRC of a given track\n *\n * @param track\n * @returns {number|undefined} the SSRC of the specificed track, otherwise undefined.\n */\nJitsiConference.prototype.getSsrcByTrack = function(track) {\n    return track.isLocal() ? this.getActivePeerConnection()?.getLocalSSRC(track) : track.getSSRC();\n};\n\n/**\n * Handles track attached to container (Calls associateStreamWithVideoTag method\n * from statistics module)\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\n * @param container the container\n */\nJitsiConference.prototype._onTrackAttach = function(track, container) {\n    const isLocal = track.isLocal();\n    let ssrc = null;\n    const isP2P = track.isP2P;\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\n    const peerConnection\n        = isP2P\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\n\n    if (isLocal) {\n        // Local tracks have SSRC stored on per peer connection basis.\n        if (peerConnection) {\n            ssrc = peerConnection.getLocalSSRC(track);\n        }\n    } else {\n        ssrc = track.getSSRC();\n    }\n    if (!container.id || !ssrc || !peerConnection) {\n        return;\n    }\n\n    this.statistics.associateStreamWithVideoTag(\n        peerConnection,\n        ssrc,\n        isLocal,\n        remoteUserId,\n        track.getUsageLabel(),\n        container.id);\n};\n\n/**\n * Logs an \"application log\" message.\n * @param message {string} The message to log. Note that while this can be a\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\n * log valid JSON strings, with an \"id\" field used for distinguishing between\n * message types. E.g.: {id: \"recorder_status\", status: \"off\"}\n */\nJitsiConference.prototype.sendApplicationLog = function(message) {\n    Statistics.sendLog(message);\n};\n\n/**\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\n * focus.\n * @param mucJid the full MUC address of the user to be checked.\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\n */\nJitsiConference.prototype._isFocus = function(mucJid) {\n    return this.room ? this.room.isFocus(mucJid) : null;\n};\n\n/**\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\n */\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\n};\n\n/**\n * Sends a message via the data channel.\n * @param to {string} the id of the endpoint that should receive the message.\n * If \"\" the message will be sent to all participants.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\n    this.rtc.sendChannelMessage(to, payload);\n};\n\n/**\n * Sends local stats via the bridge channel which then forwards to other endpoints selectively.\n * @param {Object} payload The payload of the message.\n * @throws NetworkError/InvalidStateError/Error if the operation fails or if there is no data channel created.\n */\nJitsiConference.prototype.sendEndpointStatsMessage = function(payload) {\n    this.rtc.sendEndpointStatsMessage(payload);\n};\n\n/**\n * Sends a broadcast message via the data channel.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\n */\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\n    this.sendEndpointMessage('', payload);\n};\n\n/**\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\n * broadcasts it to all endpoints in the conference.\n * @param {string} to The ID of the endpoint/participant which is to receive\n * the message, or '' to broadcast the message to all endpoints in the\n * conference.\n * @param {string|object} message the message to send. If this is of type\n * 'string' it will be sent as a chat message. If it is of type 'object', it\n * will be encapsulated in a format recognized by jitsi-meet and converted to\n * JSON before being sent.\n * @param {boolean} sendThroughVideobridge Whether to send the message through\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\n */\nJitsiConference.prototype.sendMessage = function(\n        message,\n        to = '',\n        sendThroughVideobridge = false) {\n    const messageType = typeof message;\n\n    // Through videobridge we support only objects. Through XMPP we support\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\n    // regular chat messages).\n    if (messageType !== 'object'\n            && (sendThroughVideobridge || messageType !== 'string')) {\n        logger.error(`Can not send a message of type ${messageType}`);\n\n        return;\n    }\n\n    if (sendThroughVideobridge) {\n        this.sendEndpointMessage(to, message);\n    } else {\n        let messageToSend = message;\n\n        // Name of packet extension of message stanza to send the required\n        // message in.\n        let elementName = 'body';\n\n        if (messageType === 'object') {\n            elementName = 'json-message';\n\n            // Mark as valid JSON message if not already\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\n            }\n\n            try {\n                messageToSend = JSON.stringify(messageToSend);\n            } catch (e) {\n                logger.error('Can not send a message, stringify failed: ', e);\n\n                return;\n            }\n        }\n\n        if (to) {\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\n        } else {\n            // Broadcast\n            this.sendTextMessage(messageToSend, elementName);\n        }\n    }\n\n};\n\nJitsiConference.prototype.isConnectionInterrupted = function() {\n    return this.isP2PActive()\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTARTED} event. This happens when the bridge goes down\n * and Jicofo moves conferences away to a different bridge.\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onConferenceRestarted = function(session) {\n    if (!session.isP2P && this.options.config.enableForcedReload) {\n        this.restartInProgress = true;\n        this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED, JitsiConferenceErrors.CONFERENCE_RESTARTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = true;\n    } else {\n        this.isJvbConnectionInterrupted = true;\n    }\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\n    // eventually come up with the new offer (at least for the time being).\n    if (session.isP2P) {\n        // Add p2pFailed property to analytics to distinguish, between \"good\"\n        // and \"bad\" connection\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n\n        if (this.p2pJingleSession) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(\n                    ACTION_P2P_FAILED,\n                    {\n                        initiator: this.p2pJingleSession.isInitiator\n                    }));\n\n        }\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\n    } else if (session && this.jvbJingleSession === session) {\n        this._delayedIceFailed = new IceFailedHandling(this);\n        this._delayedIceFailed.start(session);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = false;\n    } else {\n        this.isJvbConnectionInterrupted = false;\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\n    }\n\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\n    }\n};\n\n/**\n * Accept incoming P2P Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\n * @private\n */\nJitsiConference.prototype._acceptP2PIncomingCall = function(\n        jingleSession,\n        jingleOffer) {\n    this.isP2PConnectionInterrupted = false;\n\n    // Accept the offer\n    this.p2pJingleSession = jingleSession;\n    this._sendConferenceJoinAnalyticsEvent();\n\n    this.p2pJingleSession.initialize(\n        this.room,\n        this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    const participant = this.participants[remoteID];\n\n    if (participant) {\n        remoteID = participant.getStatsID() || remoteID;\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.acceptOffer(\n        jingleOffer,\n        () => {\n            logger.debug('Got RESULT for P2P \"session-accept\"');\n\n            this.eventEmitter.emit(\n                JitsiConferenceEvents._MEDIA_SESSION_STARTED,\n                this.p2pJingleSession);\n        },\n        error => {\n            logger.error(\n                'Failed to accept incoming P2P Jingle session', error);\n        },\n        localTracks);\n};\n\n/**\n * Adds remote tracks to the conference associated with the JVB session.\n * @private\n */\nJitsiConference.prototype._addRemoteJVBTracks = function() {\n    this._addRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Adds remote tracks to the conference associated with the P2P session.\n * @private\n */\nJitsiConference.prototype._addRemoteP2PTracks = function() {\n    this._addRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track added\" events for given Jingle session.\n * @param {string} logName the session's nickname which will appear in log\n * messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\n * @private\n */\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Adding remote ${logName} track: ${track}`);\n        this.onRemoteTrackAdded(track);\n    }\n};\n\n/**\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\n * the P2P connection if the event comes from the P2P session.\n * @param {JingleSessionPC} jingleSession the session instance.\n * @private\n */\nJitsiConference.prototype._onIceConnectionEstablished = function(\n        jingleSession) {\n    if (this.p2pJingleSession !== null) {\n        // store the establishment time of the p2p session as a field of the\n        // JitsiConference because the p2pJingleSession might get disposed (thus\n        // the value is lost).\n        this.p2pEstablishmentDuration\n            = this.p2pJingleSession.establishmentDuration;\n    }\n\n    if (this.jvbJingleSession !== null) {\n        this.jvbEstablishmentDuration\n            = this.jvbJingleSession.establishmentDuration;\n    }\n\n    let done = false;\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\n\n    // We don't care about the JVB case, there's nothing to be done\n    if (!jingleSession.isP2P) {\n        done = true;\n    } else if (this.p2pJingleSession !== jingleSession) {\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\n\n        done = true;\n    } else if (!jingleSession.isInitiator\n        && typeof forceJVB121Ratio === 'number'\n        && Math.random() < forceJVB121Ratio) {\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        this._stopP2PSession('decline', 'force JVB121');\n\n        done = true;\n    }\n\n    if (!isNaN(this.p2pEstablishmentDuration)\n        && !isNaN(this.jvbEstablishmentDuration)) {\n        const establishmentDurationDiff\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\n\n        Statistics.sendAnalytics(\n            ICE_ESTABLISHMENT_DURATION_DIFF,\n            { value: establishmentDurationDiff });\n    }\n\n    if (jingleSession.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\n    }\n\n    if (done) {\n\n        return;\n    }\n\n    // Update P2P status and emit events\n    this._setP2PStatus(true);\n\n    // Remove remote tracks\n    if (this.jvbJingleSession) {\n        this._removeRemoteJVBTracks();\n    } else {\n        logger.info('Not removing remote JVB tracks - no session yet');\n    }\n\n    this._addRemoteP2PTracks();\n\n    // Stop media transfer over the JVB connection\n    if (this.jvbJingleSession) {\n        this._suspendMediaTransferForJvbConnection();\n    }\n\n    logger.info('Starting remote stats with p2p connection');\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\n\n    Statistics.sendAnalyticsAndLog(\n        createP2PEvent(\n            ACTION_P2P_ESTABLISHED,\n            {\n                initiator: this.p2pJingleSession.isInitiator\n            }));\n\n};\n\n/**\n * Called when the chat room reads a new list of properties from jicofo's\n * presence. The properties may have changed, but they don't have to.\n *\n * @param {Object} properties - The properties keyed by the property name\n * ('key').\n * @private\n */\nJitsiConference.prototype._updateProperties = function(properties = {}) {\n    const changed = !isEqual(properties, this.properties);\n\n    this.properties = properties;\n    if (changed) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\n            this.properties);\n\n        // Some of the properties need to be added to analytics events.\n        const analyticsKeys = [\n\n            // The number of jitsi-videobridge instances currently used for the\n            // conference.\n            'bridge-count',\n\n            // The conference creation time (set by jicofo).\n            'created-ms'\n        ];\n\n        analyticsKeys.forEach(key => {\n            if (properties[key] !== undefined) {\n                Statistics.analytics.addPermanentProperties({\n                    [key.replace('-', '_')]: properties[key]\n                });\n            }\n        });\n    }\n};\n\n/**\n * Gets a conference property with a given key.\n *\n * @param {string} key - The key.\n * @returns {*} The value\n */\nJitsiConference.prototype.getProperty = function(key) {\n    return this.properties[key];\n};\n\n/**\n * Clears the deferred start P2P task if it has been scheduled.\n * @private\n */\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\n    if (this.deferredStartP2PTask) {\n        logger.info('Cleared deferred start P2P task');\n        clearTimeout(this.deferredStartP2PTask);\n        this.deferredStartP2PTask = null;\n    }\n};\n\n/**\n * Removes from the conference remote tracks associated with the JVB\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\n    this._removeRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Removes from the conference remote tracks associated with the P2P\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\n    this._removeRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track removed\" events for given Jingle session.\n * @param {string} sessionNickname the session's nickname which will appear in\n * log messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\n * @private\n */\nJitsiConference.prototype._removeRemoteTracks = function(\n        sessionNickname,\n        remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\n        this.onRemoteTrackRemoved(track);\n    }\n};\n\n/**\n * Resumes media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\n    logger.info('Resuming media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\n        () => {\n            logger.info('Resumed media transfer over the JVB connection!');\n        },\n        error => {\n            logger.error(\n                'Failed to resume media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Sets new P2P status and updates some events/states hijacked from\n * the <tt>JitsiConference</tt>.\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\n * @private\n */\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\n    if (this.p2p === newStatus) {\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\n\n        return;\n    }\n    this.p2p = newStatus;\n    if (newStatus) {\n        logger.info('Peer to peer connection established!');\n\n        // When we end up in a valid P2P session need to reset the properties\n        // in case they have persisted, after session with another peer.\n        Statistics.analytics.addPermanentProperties({\n            p2pFailed: false,\n            forceJvb121: false\n        });\n\n        // Sync up video transfer active in case p2pJingleSession not existed\n        // when the lastN value was being adjusted.\n        const isVideoActive = this.getLastN() !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    'Failed to sync up P2P video transfer status'\n                        + `(${isVideoActive})`, error);\n            });\n    } else {\n        logger.info('Peer to peer connection closed!');\n    }\n\n    // Put the JVB connection on hold/resume\n    if (this.jvbJingleSession) {\n        this.statistics.sendConnectionResumeOrHoldEvent(\n            this.jvbJingleSession.peerconnection, !newStatus);\n    }\n\n    // Clear dtmfManager, so that it can be recreated with new connection\n    this.dtmfManager = null;\n\n    // Update P2P status\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.P2P_STATUS,\n        this,\n        this.p2p);\n    this.eventEmitter.emit(\n        JitsiConferenceEvents._MEDIA_SESSION_ACTIVE_CHANGED,\n        this._getActiveMediaSession());\n\n    // Refresh connection interrupted/restored\n    this.eventEmitter.emit(\n        this.isConnectionInterrupted()\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\n};\n\n/**\n * Starts new P2P session.\n * @param {string} remoteJid the JID of the remote participant\n * @private\n */\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\n    this._maybeClearDeferredStartP2P();\n    if (this.p2pJingleSession) {\n        logger.error('P2P session already started!');\n\n        return;\n    }\n\n    this.isP2PConnectionInterrupted = false;\n    this.p2pJingleSession\n        = this.xmpp.connection.jingle.newP2PJingleSession(\n            this.room.myroomjid,\n            remoteJid);\n    logger.info(\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\n    this._sendConferenceJoinAnalyticsEvent();\n\n    this.p2pJingleSession.initialize(\n        this.room,\n        this.rtc, {\n            ...this.options.config,\n            enableInsertableStreams: this.isE2EEEnabled()\n        });\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    const participant = this.participants[remoteID];\n\n    if (participant) {\n        remoteID = participant.getStatsID() || remoteID;\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.invite(localTracks);\n};\n\n/**\n * Suspends media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\n    logger.info('Suspending media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\n        () => {\n            logger.info('Suspended media transfer over the JVB connection !');\n        },\n        error => {\n            logger.error(\n                'Failed to suspend media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Method when called will decide whether it's the time to start or stop\n * the P2P session.\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\n * originates from the user left event.\n * @private\n */\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\n    if (!this.isP2PEnabled() || this.isP2PTestModeEnabled() || browser.isFirefox() || browser.isWebKitBased()) {\n        logger.info('Auto P2P disabled');\n\n        return;\n    }\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n\n    // FIXME 1 peer and it must *support* P2P switching\n    const shouldBeInP2P = this._shouldBeInP2PMode();\n\n    // Clear deferred \"start P2P\" task\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\n        this._maybeClearDeferredStartP2P();\n    }\n\n    // Start peer to peer session\n    if (!this.p2pJingleSession && shouldBeInP2P) {\n        const peer = peerCount && peers[0];\n\n\n        const myId = this.myUserId();\n        const peersId = peer.getId();\n\n        if (myId > peersId) {\n            logger.debug(\n                'I\\'m the bigger peersId - '\n                + 'the other peer should start P2P', myId, peersId);\n\n            return;\n        } else if (myId === peersId) {\n            logger.error('The same IDs ? ', myId, peersId);\n\n            return;\n        }\n\n        const jid = peer.getJid();\n\n        if (userLeftEvent) {\n            if (this.deferredStartP2PTask) {\n                logger.error('Deferred start P2P task\\'s been set already!');\n\n                return;\n            }\n            logger.info(\n                `Will start P2P with: ${jid} after ${\n                    this.backToP2PDelay} seconds...`);\n            this.deferredStartP2PTask = setTimeout(\n                this._startP2PSession.bind(this, jid),\n                this.backToP2PDelay * 1000);\n        } else {\n            logger.info(`Will start P2P with: ${jid}`);\n            this._startP2PSession(jid);\n        }\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\n\n        // Log that there will be a switch back to the JVB connection\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\n            Statistics.sendAnalyticsAndLog(\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\n        }\n        this._stopP2PSession();\n    }\n};\n\n/**\n * Tells whether or not this conference should be currently in the P2P mode.\n *\n * @private\n * @returns {boolean}\n */\nJitsiConference.prototype._shouldBeInP2PMode = function() {\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n    const hasBotPeer = peers.find(p => p.getBotType() === 'poltergeist' || p.hasFeature(FEATURE_JIGASI)) !== undefined;\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\n\n    logger.debug(`P2P? peerCount: ${peerCount}, hasBotPeer: ${hasBotPeer} => ${shouldBeInP2P}`);\n\n    return shouldBeInP2P;\n};\n\n/**\n * Stops the current P2P session.\n * @param {string} [reason=\"success\"] one of the Jingle \"reason\" element\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\n * @param {string} [reasonDescription=\"Turing off P2P session\"] text\n * description that will be included in the session terminate message\n * @private\n */\nJitsiConference.prototype._stopP2PSession = function(\n        reason,\n        reasonDescription) {\n    if (!this.p2pJingleSession) {\n        logger.error('No P2P session to be stopped!');\n\n        return;\n    }\n\n    const wasP2PEstablished = this.isP2PActive();\n\n    // Swap remote tracks, but only if the P2P has been fully established\n    if (wasP2PEstablished) {\n        if (this.jvbJingleSession) {\n            this._resumeMediaTransferForJvbConnection();\n        }\n\n        // Remove remote P2P tracks\n        this._removeRemoteP2PTracks();\n    }\n\n    // Stop P2P stats\n    logger.info('Stopping remote stats for P2P connection');\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\n    logger.info('Stopping CallStats for P2P connection');\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\n\n    this.p2pJingleSession.terminate(\n        () => {\n            logger.info('P2P session terminate RESULT');\n        },\n        error => {\n            // Because both initiator and responder are simultaneously\n            // terminating their JingleSessions in case of the 'to JVB switch'\n            // when 3rd participant joins, both will dispose their sessions and\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\n            // want to log this as an error since it's expected behaviour.\n            //\n            // We want them both to terminate, because in case of initiator's\n            // crash the responder would stay in P2P mode until ICE fails which\n            // could take up to 20 seconds.\n            //\n            // NOTE lack of 'reason' is considered as graceful session terminate\n            // where both initiator and responder terminate their sessions\n            // simultaneously.\n            if (reason) {\n                logger.error(\n                    'An error occurred while trying to terminate'\n                        + ' P2P Jingle session', error);\n            }\n        }, {\n            reason: reason ? reason : 'success',\n            reasonDescription: reasonDescription\n                ? reasonDescription : 'Turing off P2P session',\n            sendSessionTerminate: this.room\n                && this.getParticipantById(\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\n        });\n\n    this.p2pJingleSession = null;\n\n    // Update P2P status and other affected events/states\n    this._setP2PStatus(false);\n\n    if (wasP2PEstablished) {\n        // Add back remote JVB tracks\n        if (this.jvbJingleSession) {\n            this._addRemoteJVBTracks();\n        } else {\n            logger.info('Not adding remote JVB tracks - no session yet');\n        }\n    }\n};\n\n/**\n * Checks whether or not the conference is currently in the peer to peer mode.\n * Being in peer to peer mode means that the direct connection has been\n * established and the P2P connection is being used for media transmission.\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\n */\nJitsiConference.prototype.isP2PActive = function() {\n    return this.p2p;\n};\n\n/**\n * Returns the current ICE state of the P2P connection.\n * NOTE: method is used by the jitsi-meet-torture tests.\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\n * no P2P connection.\n */\nJitsiConference.prototype.getP2PConnectionState = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection.getConnectionState();\n    }\n\n    return null;\n};\n\n\n/**\n * Manually starts new P2P session (should be used only in the tests).\n */\nJitsiConference.prototype.startP2PSession = function() {\n    const peers = this.getParticipants();\n\n    // Start peer to peer session\n    if (peers.length === 1) {\n        const peerJid = peers[0].getJid();\n\n        this._startP2PSession(peerJid);\n    } else {\n        throw new Error(\n            'There must be exactly 1 participant to start the P2P session !');\n    }\n};\n\n/**\n * Manually stops the current P2P session (should be used only in the tests)\n */\nJitsiConference.prototype.stopP2PSession = function() {\n    this._stopP2PSession();\n};\n\n/**\n * Get a summary of how long current participants have been the dominant speaker\n * @returns {object}\n */\nJitsiConference.prototype.getSpeakerStats = function() {\n    return this.speakerStatsCollector.getStats();\n};\n\n/**\n * Sets the constraints for the video that is requested from the bridge.\n *\n * @param {Object} videoConstraints The constraints which are specified in the\n * following format. The message updates the fields that are present and leaves the\n * rest unchanged on the bridge. Therefore, any field that is not applicable anymore\n * should be cleared by passing an empty object or list (whatever is applicable).\n * {\n *      'lastN': 20,\n *      'selectedEndpoints': ['A', 'B', 'C'],\n *      'onStageEndpoints': ['A'],\n *      'defaultConstraints': { 'maxHeight': 180 },\n *      'constraints': {\n *          'A': { 'maxHeight': 720 }\n *      }\n * }\n */\nJitsiConference.prototype.setReceiverConstraints = function(videoConstraints) {\n    this.receiveVideoController.setReceiverConstraints(videoConstraints);\n};\n\n/**\n * Sets the maximum video size the local participant should receive from remote\n * participants.\n *\n * @param {number} maxFrameHeight - the maximum frame height, in pixels,\n * this receiver is willing to receive.\n * @returns {void}\n */\nJitsiConference.prototype.setReceiverVideoConstraint = function(maxFrameHeight) {\n    this.receiveVideoController.setPreferredReceiveMaxFrameHeight(maxFrameHeight);\n};\n\n/**\n * Sets the maximum video size the local participant should send to remote\n * participants.\n * @param {number} maxFrameHeight - The user preferred max frame height.\n * @returns {Promise} promise that will be resolved when the operation is\n * successful and rejected otherwise.\n */\nJitsiConference.prototype.setSenderVideoConstraint = function(maxFrameHeight) {\n    return this.sendVideoController.setPreferredSendMaxFrameHeight(maxFrameHeight);\n};\n\n/**\n * Creates a video SIP GW session and returns it if service is enabled. Before\n * creating a session one need to check whether video SIP GW service is\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\n * if there are available nodes to serve this request, after creating the\n * session those nodes can be taken and the request about using the\n * created session can fail.\n *\n * @param {string} sipAddress - The sip address to be used.\n * @param {string} displayName - The display name to be used for this session.\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\n * initialised and there is no room.\n */\nJitsiConference.prototype.createVideoSIPGWSession\n    = function(sipAddress, displayName) {\n        if (!this.room) {\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\n        }\n\n        return this.videoSIPGWHandler\n            .createVideoSIPGWSession(sipAddress, displayName);\n    };\n\n/**\n * Sends a conference.join analytics event.\n *\n * @returns {void}\n */\nJitsiConference.prototype._sendConferenceJoinAnalyticsEvent = function() {\n    const meetingId = this.getMeetingUniqueId();\n\n    if (this._conferenceJoinAnalyticsEventSent || !meetingId || this.getActivePeerConnection() === null) {\n        return;\n    }\n\n    Statistics.sendAnalytics(createConferenceEvent('joined', {\n        meetingId,\n        participantId: `${meetingId}.${this._statsCurrentId}`\n    }));\n    this._conferenceJoinAnalyticsEventSent = Date.now();\n};\n\n/**\n * Sends conference.left analytics event.\n * @private\n */\nJitsiConference.prototype._sendConferenceLeftAnalyticsEvent = function() {\n    const meetingId = this.getMeetingUniqueId();\n\n    if (!meetingId || !this._conferenceJoinAnalyticsEventSent) {\n\n        return;\n    }\n\n    Statistics.sendAnalytics(createConferenceEvent('left', {\n        meetingId,\n        participantId: `${meetingId}.${this._statsCurrentId}`,\n        stats: {\n            duration: Math.floor((Date.now() - this._conferenceJoinAnalyticsEventSent) / 1000),\n            perf: this.getPerformanceStats()\n        }\n    }));\n};\n\n/**\n * Restarts all active media sessions.\n *\n * @returns {void}\n */\nJitsiConference.prototype._restartMediaSessions = function() {\n    if (this.p2pJingleSession) {\n        this.stopP2PSession();\n    }\n\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.terminate(\n            null /* success callback => we don't care */,\n            error => {\n                logger.warn('An error occurred while trying to terminate the JVB session', error);\n            }, {\n                reason: 'success',\n                reasonDescription: 'restart required',\n                requestRestart: true,\n                sendSessionTerminate: true\n            });\n    }\n\n    this._maybeStartOrStopP2P(false);\n};\n\n/**\n * Returns whether End-To-End encryption is enabled.\n *\n * @returns {boolean}\n */\nJitsiConference.prototype.isE2EEEnabled = function() {\n    return this._e2eEncryption && this._e2eEncryption.isEnabled();\n};\n\n/**\n * Returns whether End-To-End encryption is supported. Note that not all participants\n * in the conference may support it.\n *\n * @returns {boolean}\n */\nJitsiConference.prototype.isE2EESupported = function() {\n    return E2EEncryption.isSupported(this.options.config);\n};\n\n/**\n * Enables / disables End-to-End encryption.\n *\n * @param {boolean} enabled whether to enable E2EE or not.\n * @returns {void}\n */\nJitsiConference.prototype.toggleE2EE = function(enabled) {\n    if (!this.isE2EESupported()) {\n        logger.warn('Cannot enable / disable E2EE: platform is not supported.');\n\n        return;\n    }\n\n    this._e2eEncryption.setEnabled(enabled);\n};\n\n/**\n * Returns <tt>true</tt> if lobby support is enabled in the backend.\n *\n * @returns {boolean} whether lobby is supported in the backend.\n */\nJitsiConference.prototype.isLobbySupported = function() {\n    return Boolean(this.room && this.room.getLobby().isSupported());\n};\n\n/**\n * Returns <tt>true</tt> if the room has members only enabled.\n *\n * @returns {boolean} whether conference room is members only.\n */\nJitsiConference.prototype.isMembersOnly = function() {\n    return Boolean(this.room && this.room.membersOnlyEnabled);\n};\n\n/**\n * Enables lobby by moderators\n *\n * @returns {Promise} resolves when lobby room is joined or rejects with the error.\n */\nJitsiConference.prototype.enableLobby = function() {\n    if (this.room && this.isModerator()) {\n        return this.room.getLobby().enable();\n    }\n\n    return Promise.reject(\n        new Error('The conference not started or user is not moderator'));\n};\n\n/**\n * Disabled lobby by moderators\n *\n * @returns {void}\n */\nJitsiConference.prototype.disableLobby = function() {\n    if (this.room && this.isModerator()) {\n        this.room.getLobby().disable();\n    } else {\n        logger.warn(`Failed to disable lobby, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator'}`);\n    }\n};\n\n/**\n * Joins the lobby room with display name and optional email or with a shared password to skip waiting.\n *\n * @param {string} displayName Display name should be set to show it to moderators.\n * @param {string} email Optional email is used to present avatar to the moderator.\n * @returns {Promise<never>}\n */\nJitsiConference.prototype.joinLobby = function(displayName, email) {\n    if (this.room) {\n        return this.room.getLobby().join(displayName, email);\n    }\n\n    return Promise.reject(new Error('The conference not started'));\n};\n\n/**\n * Denies an occupant in the lobby room access to the conference.\n * @param {string} id The participant id.\n */\nJitsiConference.prototype.lobbyDenyAccess = function(id) {\n    if (this.room) {\n        this.room.getLobby().denyAccess(id);\n    }\n};\n\n/**\n * Approves the request to join the conference to a participant waiting in the lobby.\n *\n * @param {string} id The participant id.\n */\nJitsiConference.prototype.lobbyApproveAccess = function(id) {\n    if (this.room) {\n        this.room.getLobby().approveAccess(id);\n    }\n};\n\n/**\n * Returns <tt>true</tt> if AV Moderation support is enabled in the backend.\n *\n * @returns {boolean} whether AV Moderation is supported in the backend.\n */\nJitsiConference.prototype.isAVModerationSupported = function() {\n    return Boolean(this.room && this.room.getAVModeration().isSupported());\n};\n\n/**\n * Enables AV Moderation.\n * @param {MediaType} mediaType \"audio\" or \"video\"\n */\nJitsiConference.prototype.enableAVModeration = function(mediaType) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n        this.room.getAVModeration().enable(true, mediaType);\n    } else {\n        logger.warn(`Failed to enable AV moderation, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n};\n\n/**\n * Disables AV Moderation.\n * @param {MediaType} mediaType \"audio\" or \"video\"\n */\nJitsiConference.prototype.disableAVModeration = function(mediaType) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n        this.room.getAVModeration().enable(false, mediaType);\n    } else {\n        logger.warn(`Failed to disable AV moderation, ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n};\n\n/**\n * Approve participant access to certain media, allows unmuting audio or video.\n *\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param id the id of the participant.\n */\nJitsiConference.prototype.avModerationApprove = function(mediaType, id) {\n    if (this.room && this.isModerator()\n        && (mediaType === MediaType.AUDIO || mediaType === MediaType.VIDEO)) {\n\n        const participant = this.getParticipantById(id);\n\n        if (!participant) {\n            return;\n        }\n\n        this.room.getAVModeration().approve(mediaType, participant.getJid());\n    } else {\n        logger.warn(`AV moderation skipped , ${this.room ? '' : 'not in a room, '}${\n            this.isModerator() ? '' : 'participant is not a moderator, '}${\n            this.room && this.isModerator() ? 'wrong media type passed' : ''}`);\n    }\n}\n/**\n * Gets the local user when joined\n */\nJitsiConference.prototype.getLocalUser = function() {\n    if (this.user) {\n        return this.user;\n    }\n};\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { SPEAKERS_AUDIO_LEVELS } from './modules/statistics/constants';\nimport Statistics from './modules/statistics/statistics';\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport VideoType from './service/RTC/VideoType';\nimport AuthenticationEvents\n    from './service/authentication/AuthenticationEvents';\nimport {\n    ACTION_JINGLE_SA_TIMEOUT,\n    createBridgeDownEvent,\n    createConnectionStageReachedEvent,\n    createFocusLeftEvent,\n    createJingleEvent,\n    createRemotelyMutedEvent\n} from './service/statistics/AnalyticsEvents';\nimport XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Setups all event listeners related to conference\n * @param conference {JitsiConference} the conference\n */\nexport default function JitsiConferenceEventManager(conference) {\n    this.conference = conference;\n    this.xmppListeners = {};\n\n    // Listeners related to the conference only\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n        track => {\n            if (!track.isLocal() || !conference.statistics) {\n                return;\n            }\n            const session\n                = track.isP2P\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\n\n            // TPC will be null, before the conference starts, but the event\n            // still should be queued\n            const tpc = (session && session.peerconnection) || null;\n\n            conference.statistics.sendMuteEvent(\n                tpc,\n                track.isMuted(),\n                track.getType());\n        });\n}\n\n/**\n * Setups event listeners related to conference.chatRoom\n */\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\n    const conference = this.conference;\n    const chatRoom = conference.room;\n\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\n        this.conference.eventEmitter);\n\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\n        if (!jingleSession.isP2P) {\n            // If using DataChannel as bridge channel, it must be closed\n            // before ICE restart, otherwise Chrome will not trigger \"opened\"\n            // event for the channel established with the new bridge.\n            // TODO: This may be bypassed when using a WebSocket as bridge\n            // channel.\n            conference.rtc.closeBridgeChannel();\n        }\n\n        // else: there are no DataChannels in P2P session (at least for now)\n    });\n\n    chatRoom.addListener(XMPPEvents.PARTICIPANT_FEATURES_CHANGED, (from, features) => {\n        const participant = conference.getParticipantById(Strophe.getResourceFromJid(from));\n\n        if (participant) {\n            participant.setFeatures(features);\n            conference.eventEmitter.emit(JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED, participant);\n        }\n    });\n\n    chatRoom.addListener(\n        XMPPEvents.ICE_RESTART_SUCCESS,\n        (jingleSession, offerIq) => {\n            // The JVB data chanel needs to be reopened in case the conference\n            // has been moved to a new bridge.\n            !jingleSession.isP2P\n                && conference._setBridgeChannel(\n                    offerIq, jingleSession.peerconnection);\n        });\n\n\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\n        actor => {\n            // TODO: Add a way to differentiate between commands which caused\n            // us to mute and those that did not change our state (i.e. we were\n            // already muted).\n            Statistics.sendAnalytics(createRemotelyMutedEvent(MediaType.AUDIO));\n\n            conference.mutedByFocusActor = actor;\n\n            // set isMutedByFocus when setAudioMute Promise ends\n            conference.rtc.setAudioMute(true).then(\n                () => {\n                    conference.isMutedByFocus = true;\n                    conference.mutedByFocusActor = null;\n                })\n                .catch(\n                    error => {\n                        conference.mutedByFocusActor = null;\n                        logger.warn(\n                            'Error while audio muting due to focus request', error);\n                    });\n        }\n    );\n\n    chatRoom.addListener(XMPPEvents.VIDEO_MUTED_BY_FOCUS,\n        actor => {\n            // TODO: Add a way to differentiate between commands which caused\n            // us to mute and those that did not change our state (i.e. we were\n            // already muted).\n            Statistics.sendAnalytics(createRemotelyMutedEvent(MediaType.VIDEO));\n\n            conference.mutedVideoByFocusActor = actor;\n\n            // set isVideoMutedByFocus when setVideoMute Promise ends\n            conference.rtc.setVideoMute(true).then(\n                () => {\n                    conference.isVideoMutedByFocus = true;\n                    conference.mutedVideoByFocusActor = null;\n                })\n                .catch(\n                    error => {\n                        conference.mutedVideoByFocusActor = null;\n                        logger.warn(\n                            'Error while video muting due to focus request', error);\n                    });\n        }\n    );\n\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\n        JitsiConferenceEvents.SUBJECT_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\n        JitsiConferenceEvents.CONFERENCE_JOINED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MEETING_ID_SET,\n        JitsiConferenceEvents.CONFERENCE_UNIQUE_ID_SET);\n\n    // send some analytics events\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\n        () => {\n            this.conference._onMucJoined();\n\n            this.conference.isJvbConnectionInterrupted = false;\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `conference_${key}`,\n                        { value: chatRoom.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\n                const event\n                    = createConnectionStageReachedEvent(\n                        `xmpp_${key}`,\n                        { value: chatRoom.xmpp.connectionTimes[key] });\n\n                Statistics.sendAnalytics(event);\n            });\n        });\n\n    chatRoom.addListener(XMPPEvents.RENEGOTIATION_FAILED, (e, session) => {\n        if (!session.isP2P) {\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n        }\n    });\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_MEMBERS_ONLY_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.MEMBERS_ONLY_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\n    chatRoom.addListener(\n        XMPPEvents.BRIDGE_DOWN,\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_RESTARTED,\n        jingleSession => {\n            conference._onConferenceRestarted(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.RESERVATION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n        jingleSession => {\n            conference._onIceConnectionFailed(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\n        JitsiConferenceEvents.CONFERENCE_ERROR,\n        JitsiConferenceErrors.CHAT_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\n\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\n        () => {\n            Statistics.sendAnalytics(createFocusLeftEvent());\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.FOCUS_LEFT);\n        });\n\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\n        jingleSession => {\n            Statistics.sendAnalyticsAndLog(\n                createJingleEvent(\n                    ACTION_JINGLE_SA_TIMEOUT,\n                    { p2p: jingleSession.isP2P }));\n        });\n\n    chatRoom.addListener(XMPPEvents.RECORDER_STATE_CHANGED,\n        (session, jid) => {\n\n            if (jid) {\n                const participant = conference.getParticipantById(\n                    Strophe.getResourceFromJid(jid));\n\n                if (session.getStatus() === 'off') {\n                    session.setTerminator(participant);\n                } else if (session.getStatus() === 'on') {\n                    session.setInitiator(participant);\n                }\n            }\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                session);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\n\n    this.chatRoomForwarder.forward(\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\n\n    chatRoom.setParticipantPropertyListener((node, from) => {\n        const participant = conference.getParticipantById(from);\n\n        if (!participant) {\n            return;\n        }\n\n        participant.setProperty(\n            node.tagName.substring('jitsi_participant_'.length),\n            node.value);\n    });\n\n    chatRoom.addListener(XMPPEvents.KICKED,\n        conference.onMemberKicked.bind(conference));\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\n        conference.onSuspendDetected.bind(conference));\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_MEMBERS_ONLY_CHANGED,\n        JitsiConferenceEvents.MEMBERS_ONLY_CHANGED);\n\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\n        conference.onMemberJoined.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_JOINED,\n        JitsiConferenceEvents.LOBBY_USER_JOINED);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_UPDATED,\n        JitsiConferenceEvents.LOBBY_USER_UPDATED);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOBBY_MEMBER_LEFT,\n        JitsiConferenceEvents.LOBBY_USER_LEFT);\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\n        conference._onMemberBotTypeChanged.bind(conference));\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\n        conference.onMemberLeft.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\n        JitsiConferenceEvents.CONFERENCE_LEFT);\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DENIED_ACCESS,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_ACCESS_DENIED);\n\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\n        conference.onDisplayNameChanged.bind(conference));\n\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\n        conference.onLocalRoleChanged(role);\n\n        // log all events for the recorder operated by the moderator\n        if (conference.statistics && conference.isModerator()) {\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                recorderSession => {\n                    const logObject = {\n                        error: recorderSession.getError(),\n                        id: 'recorder_status',\n                        status: recorderSession.getStatus()\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n                });\n        }\n    });\n\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\n        conference.onUserRoleChanged.bind(conference));\n\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\n        (authEnabled, authIdentity) => {\n            conference.authEnabled = authEnabled;\n            conference.authIdentity = authIdentity;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\n                authIdentity);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\n        (jid, status) => {\n            const id = Strophe.getResourceFromJid(jid);\n            const participant = conference.getParticipantById(id);\n\n            if (!participant || participant._status === status) {\n                return;\n            }\n            participant._status = status;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\n        });\n\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const id = Strophe.getResourceFromJid(from);\n            const participant = conference.getParticipantById(id);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\n                    + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\n        let isModerator = false;\n\n        if (conference.myUserId() === from && conference.isModerator()) {\n            isModerator = true;\n        } else {\n            const participant = conference.getParticipantById(from);\n\n            if (participant && participant.isModerator()) {\n                isModerator = true;\n            }\n        }\n\n        if (!isModerator) {\n            return;\n        }\n\n        const startAudioMuted = data.attributes.audio === 'true';\n        const startVideoMuted = data.attributes.video === 'true';\n\n        let updated = false;\n\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\n            conference.startMutedPolicy.audio = startAudioMuted;\n            updated = true;\n        }\n\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\n            conference.startMutedPolicy.video = startVideoMuted;\n            updated = true;\n        }\n\n        if (updated) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\n                conference.startMutedPolicy\n            );\n        }\n    });\n\n    if (conference.statistics) {\n        // FIXME ICE related events should end up in RTCEvents eventually\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n            session => {\n                conference.statistics.sendIceConnectionFailedEvent(\n                    session.peerconnection);\n            });\n\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\n            (e, pc) => {\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\n            });\n    }\n};\n\n/**\n * Setups event listeners related to conference.rtc\n */\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\n    const conference = this.conference;\n    const rtc = conference.rtc;\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_ADDED,\n        conference.onRemoteTrackAdded.bind(conference));\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_REMOVED,\n        conference.onRemoteTrackRemoved.bind(conference));\n\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\n        (dominant, previous) => {\n            if (conference.lastDominantSpeaker !== dominant && conference.room) {\n                conference.lastDominantSpeaker = dominant;\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, dominant, previous);\n\n                if (previous && previous.length) {\n                    const speakerList = previous.slice(0);\n\n                    // Add the dominant speaker to the top of the list (exclude self).\n                    if (conference.myUserId !== dominant) {\n                        speakerList.splice(0, 0, dominant);\n                    }\n\n                    // Trim the list to the top 5 speakers only.\n                    if (speakerList.length > SPEAKERS_AUDIO_LEVELS) {\n                        speakerList.splice(SPEAKERS_AUDIO_LEVELS, speakerList.length - SPEAKERS_AUDIO_LEVELS);\n                    }\n                    conference.statistics && conference.statistics.setSpeakerList(speakerList);\n                }\n                if (conference.statistics && conference.myUserId() === dominant) {\n                    // We are the new dominant speaker.\n                    conference.statistics.sendDominantSpeakerEvent(conference.room.roomjid);\n                }\n            }\n        });\n\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\n        const now = window.performance.now();\n        const key = 'data.channel.opened';\n\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\n        logger.log(`(TIME) ${key}:\\t`, now);\n        conference.room.connectionTimes[key] = now;\n        Statistics.sendAnalytics(\n            createConnectionStageReachedEvent(key, { value: now }));\n\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\n    });\n\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\n                        + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    rtc.addListener(RTCEvents.ENDPOINT_STATS_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.ENDPOINT_STATS_RECEIVED, participant, payload);\n            } else {\n                logger.warn(`Ignoring ENDPOINT_STATS_RECEIVED for a non-existant participant: ${from}`);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'local_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'remote_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateOfferFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\n            if (!tpc.isP2P) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\n        (track, ssrc) => {\n            // when starting screen sharing, the track is created and when\n            // we do set local description and we process the ssrc we\n            // will be notified for it and we will report it with the event\n            // for screen sharing\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\n            }\n        });\n};\n\n/**\n * Removes event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\n    const conference = this.conference;\n\n    Object.keys(this.xmppListeners).forEach(eventName => {\n        conference.xmpp.removeListener(\n            eventName,\n            this.xmppListeners[eventName]);\n    });\n    this.xmppListeners = {};\n};\n\n\n/**\n * Setups event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\n    const conference = this.conference;\n\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_INCOMING,\n        conference.onIncomingCall.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ACCEPTED,\n        conference.onCallAccepted.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.TRANSPORT_INFO,\n        conference.onTransportInfo.bind(conference));\n    this._addConferenceXMPPListener(\n        XMPPEvents.CALL_ENDED,\n        conference.onCallEnded.bind(conference));\n\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\n        (audioMuted, videoMuted) => {\n            if (conference.options.config.ignoreStartMuted) {\n                return;\n            }\n\n            conference.startAudioMuted = audioMuted;\n            conference.startVideoMuted = videoMuted;\n\n            // mute existing local tracks because this is initial mute from\n            // Jicofo\n            conference.getLocalTracks().forEach(track => {\n                switch (track.getType()) {\n                case MediaType.AUDIO:\n                    conference.startAudioMuted && track.mute();\n                    break;\n                case MediaType.VIDEO:\n                    conference.startVideoMuted && track.mute();\n                    break;\n                }\n            });\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\n        });\n\n    this._addConferenceXMPPListener(XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED,\n        createdTimestamp => {\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_CREATED_TIMESTAMP, createdTimestamp);\n        });\n\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_CHANGED,\n        (value, mediaType, actorJid) => {\n            const actorParticipant = conference.getParticipants().find(p => p.getJid() === actorJid);\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_CHANGED, {\n                enabled: value,\n                mediaType,\n                actor: actorParticipant\n            });\n        });\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_PARTICIPANT_APPROVED,\n        (mediaType, jid) => {\n            const participant = conference.getParticipantById(Strophe.getResourceFromJid(jid));\n\n            if (participant) {\n                conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_PARTICIPANT_APPROVED, {\n                    participant,\n                    mediaType\n                });\n            }\n        });\n    this._addConferenceXMPPListener(XMPPEvents.AV_MODERATION_APPROVED,\n        value => conference.eventEmitter.emit(JitsiConferenceEvents.AV_MODERATION_APPROVED, { mediaType: value }));\n};\n\n/**\n * Add XMPP listener and save its reference for remove on leave conference.\n */\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\n        eventName, listener) {\n    this.xmppListeners[eventName] = listener;\n    this.conference.xmpp.addListener(eventName, listener);\n};\n\n/**\n * Setups event listeners related to conference.statistics\n */\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\n    const conference = this.conference;\n\n    if (!conference.statistics) {\n        return;\n    }\n\n    /* eslint-disable max-params */\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\n    });\n\n    /* eslint-enable max-params */\n\n    // Forward the \"before stats disposed\" event\n    conference.statistics.addBeforeDisposedListener(() => {\n        conference.eventEmitter.emit(\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\n    });\n\n    // if we are in startSilent mode we will not be sending/receiving so nothing to detect\n    if (!conference.options.config.startSilent) {\n        conference.statistics.addByteSentStatsListener((tpc, stats) => {\n            conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\n                const ssrc = tpc.getLocalSSRC(track);\n\n                if (!ssrc || !stats.hasOwnProperty(ssrc)) {\n                    return;\n                }\n\n                track._onByteSentStatsReceived(tpc, stats[ssrc]);\n            });\n        });\n    }\n};\n","\nimport { Strophe } from 'strophe.js';\n\n\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as MediaType from './service/RTC/MediaType';\n\n/**\n * Represents a participant in (i.e. a member of) a conference.\n */\nexport default class JitsiParticipant {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Initializes a new JitsiParticipant instance.\n     *\n     * @constructor\n     * @param jid the conference XMPP jid\n     * @param conference\n     * @param displayName\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\n     * represent a hidden participant; otherwise, false.\n     * @param {string} statsID - optional participant statsID\n     * @param {string} status - the initial status if any.\n     * @param {object} identity - the xmpp identity\n     */\n    constructor(jid, conference, displayName, hidden, statsID, status, identity) {\n        this._jid = jid;\n        this._id = Strophe.getResourceFromJid(jid);\n        this._conference = conference;\n        this._displayName = displayName;\n        this._supportsDTMF = false;\n        this._tracks = [];\n        this._role = 'none';\n        this._status = status;\n        this._hidden = hidden;\n        this._statsID = statsID;\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\n        this._properties = {};\n        this._identity = identity;\n        this._features = new Set();\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * @returns {JitsiConference} The conference that this participant belongs\n     * to.\n     */\n    getConference() {\n        return this._conference;\n    }\n\n    /**\n     * Gets the value of a property of this participant.\n     */\n    getProperty(name) {\n        return this._properties[name];\n    }\n\n    /**\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\n     * muted status.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\n     */\n    hasAnyVideoTrackWebRTCMuted() {\n        return (\n            this.getTracks().some(\n                jitsiTrack =>\n                    jitsiTrack.getType() === MediaType.VIDEO\n                        && jitsiTrack.isWebRTCTrackMuted()));\n    }\n\n    /**\n     * Updates participant's connection status.\n     * @param {string} state the current participant connection state.\n     * {@link ParticipantConnectionStatus}.\n     * @private\n     */\n    _setConnectionStatus(status) {\n        this._connectionStatus = status;\n    }\n\n    /**\n     * Return participant's connectivity status.\n     *\n     * @returns {string} the connection status\n     * <tt>ParticipantConnectionStatus</tt> of the user.\n     * {@link ParticipantConnectionStatus}.\n     */\n    getConnectionStatus() {\n        return this._connectionStatus;\n    }\n\n    /**\n     * Sets the value of a property of this participant, and fires an event if\n     * the value has changed.\n     * @name the name of the property.\n     * @value the value to set.\n     */\n    setProperty(name, value) {\n        const oldValue = this._properties[name];\n\n        if (value !== oldValue) {\n            this._properties[name] = value;\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n                this,\n                name,\n                oldValue,\n                value);\n        }\n    }\n\n    /**\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\n     * participant.\n     */\n    getTracks() {\n        return this._tracks.slice();\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\n     * participant, for given media type.\n     */\n    getTracksByMediaType(mediaType) {\n        return this.getTracks().filter(track => track.getType() === mediaType);\n    }\n\n    /**\n     * @returns {String} The ID of this participant.\n     */\n    getId() {\n        return this._id;\n    }\n\n    /**\n     * @returns {String} The JID of this participant.\n     */\n    getJid() {\n        return this._jid;\n    }\n\n    /**\n     * @returns {String} The human-readable display name of this participant.\n     */\n    getDisplayName() {\n        return this._displayName;\n    }\n\n    /**\n     * @returns {String} The stats ID of this participant.\n     */\n    getStatsID() {\n        return this._statsID;\n    }\n\n    /**\n     * @returns {String} The status of the participant.\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a moderator or not.\n     */\n    isModerator() {\n        return this._role === 'moderator';\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\n     * special system participants may want to join hidden (like for example the\n     * recorder).\n     */\n    isHidden() {\n        return this._hidden;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their audio.\n     */\n    isAudioMuted() {\n        return this._isMediaTypeMuted(MediaType.AUDIO);\n    }\n\n    /**\n     * Determines whether all JitsiTracks which are of a specific MediaType and\n     * which belong to this JitsiParticipant are muted.\n     *\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\n     * checked.\n     * @private\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\n     * false.\n     */\n    _isMediaTypeMuted(mediaType) {\n        return this.getTracks().reduce(\n            (muted, track) =>\n                muted && (track.getType() !== mediaType || track.isMuted()),\n            true);\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their video.\n     */\n    isVideoMuted() {\n        return this._isMediaTypeMuted(MediaType.VIDEO);\n    }\n\n    /**\n     * @returns {String} The role of this participant.\n     */\n    getRole() {\n        return this._role;\n    }\n\n    /**\n     * Sets a new participant role.\n     * @param {String} newRole - the new role.\n     */\n    setRole(newRole) {\n        this._role = newRole;\n    }\n\n    /**\n     *\n     */\n    supportsDTMF() {\n        return this._supportsDTMF;\n    }\n\n    /**\n     * Returns a set with the features for the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures() {\n        return Promise.resolve(this._features);\n    }\n\n    /**\n     * Checks current set features.\n     * @param {String} feature - the feature to check.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains the\n     * <tt>feature</tt>.\n     */\n    hasFeature(feature) {\n        return this._features.has(feature);\n    }\n\n    /**\n     * Set new features.\n     * @param {Set<String>|undefined} newFeatures - Sets new features.\n     */\n    setFeatures(newFeatures) {\n        this._features = newFeatures || new Set();\n    }\n\n    /**\n     * Returns the bot type for the participant.\n     *\n     * @returns {string|undefined} - The bot type of the participant.\n     */\n    getBotType() {\n        return this._botType;\n    }\n\n    /**\n     * Sets the bot type for the participant.\n     * @param {String} newBotType - The new bot type to set.\n     */\n    setBotType(newBotType) {\n        this._botType = newBotType;\n    }\n}\n","import {\n    CONNECTION_DISCONNECTED,\n    CONNECTION_ESTABLISHED,\n    CONNECTION_FAILED\n} from './JitsiConnectionEvents';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * @typedef {Object} UpgradeRoleError\n *\n * @property {JitsiConnectionErrors} [connectionError] - One of\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\n * XMPP server.\n * @property {String} [authenticationError] - One of XMPP error conditions\n * returned by Jicofo on authentication attempt. See\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\n * @property {String} [message] - More details about the error.\n * @property {Object} [credentials] - The credentials that failed the\n * authentication.\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\n * that failed the authentication.\n * @property {string} [credentials.password] - The password part of the\n * credentials that failed the authentication.\n *\n * NOTE If neither one of the errors is present, then the operation has been\n * canceled.\n */\n\n/* eslint-disable no-invalid-this */\n\n/**\n * Connects to the XMPP server using the specified credentials and contacts\n * Jicofo in order to obtain a session ID (which is then stored in the local\n * storage). The user's role of the parent conference will be upgraded to\n * moderator (by Jicofo). It's also used to join the conference when starting\n * from anonymous domain and only authenticated users are allowed to create new\n * rooms.\n *\n * @param {Object} options\n * @param {string} options.id - XMPP user's ID to log in. For example,\n * user@xmpp-server.com.\n * @param {string} options.password - XMPP user's password to log in with.\n * @param {string} [options.roomPassword] - The password to join the MUC with.\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\n * into the XMPP server was successful. The next step will be to obtain a new\n * session ID from Jicofo and join the MUC using it which will effectively\n * upgrade the user's role to moderator.\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the specified XMPP user finishes and\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process. If the process finishes successfully, the session ID has been stored\n * in the settings and the <tt>thenable</tt> is resolved. If the process\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\n * <tt>authenticationError</tt> property set depending on which of the steps has\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\n * thenable will be rejected with an empty object (i.e. no error property will\n * be set on the rejection reason).\n */\nexport default function authenticateAndUpgradeRole({\n    // 1. Log the specified XMPP user in.\n    id,\n    password,\n    onCreateResource,\n\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\n    //    successfully logged in.\n    onLoginSuccessful,\n\n    // 3. Join the MUC.\n    roomPassword\n}) {\n    let canceled = false;\n    let rejectPromise;\n    let xmpp = new XMPP(this.connection.options);\n\n    const process = new Promise((resolve, reject) => {\n        // The process is represented by a Thenable with a cancel method. The\n        // Thenable is implemented using Promise and the cancel using the\n        // Promise's reject function.\n        rejectPromise = reject;\n\n\n        xmpp.addListener(\n            CONNECTION_DISCONNECTED,\n            () => {\n                xmpp = undefined;\n            });\n        xmpp.addListener(\n            CONNECTION_ESTABLISHED,\n            () => {\n                if (canceled) {\n                    return;\n                }\n\n                // Let the caller know that the XMPP login was successful.\n                onLoginSuccessful && onLoginSuccessful();\n\n                // Now authenticate with Jicofo and get a new session ID.\n                const room = xmpp.createRoom(\n                    this.options.name,\n                    this.options.config,\n                    onCreateResource\n                );\n\n                room.moderator.authenticate()\n                    .then(() => {\n                        xmpp && xmpp.disconnect();\n\n                        if (canceled) {\n                            return;\n                        }\n\n                        // At this point we should have the new session ID\n                        // stored in the settings. Jicofo will allow to join the\n                        // room.\n                        this.join(roomPassword);\n\n                        resolve();\n                    })\n                    .catch(({ error, message }) => {\n                        xmpp.disconnect();\n\n                        reject({\n                            authenticationError: error,\n                            message\n                        });\n                    });\n            });\n        xmpp.addListener(\n            CONNECTION_FAILED,\n            (connectionError, message, credentials) => {\n                reject({\n                    connectionError,\n                    credentials,\n                    message\n                });\n                xmpp = undefined;\n            });\n\n        canceled || xmpp.connect(id, password);\n    });\n\n    /**\n     * Cancels the process, if it's in progress, of authenticating and upgrading\n     * the role of the local participant/user.\n     *\n     * @public\n     * @returns {void}\n     */\n    process.cancel = () => {\n        canceled = true;\n        rejectPromise({});\n        xmpp && xmpp.disconnect();\n    };\n\n    return process;\n}\n\n/* eslint-enable no-invalid-this */\n","/**\n * The transciption is on.\n *\n * @type {String}\n */\nexport const ON = 'on';\n\n/**\n * The transciption is off.\n *\n * @type {String}\n */\nexport const OFF = 'off';\n","\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport Listenable from '../util/Listenable';\n\nexport const NETWORK_INFO_EVENT = 'NETWORK_INFO_CHANGED';\n\nconst logger = getLogger(__filename);\n\n/**\n * Module provides information about the current status of the internet\n * connection. Lib-jitsi-meet doesn't have any logic for detecting internet\n * online/offline, but rather it relies on the information supplied by the app\n * that uses it. By default the online state is assumed and the lib acts as if\n * it was connected. See {@link SariskaMediaTransport.setNetworkInfo}.\n */\nexport class NetworkInfo extends Listenable {\n    /**\n     * Creates new {@link NetworkInfo} instance.\n     */\n    constructor() {\n        super();\n        this._current = {\n            isOnline: true\n        };\n    }\n\n    /**\n     * Updates the network info state.\n     * @param {boolean} isOnline - {@code true} if internet is online or {@code false} otherwise.\n     */\n    updateNetworkInfo({ isOnline }) {\n        logger.debug('updateNetworkInfo', { isOnline });\n        this._current = {\n            isOnline: isOnline === true\n        };\n        this.eventEmitter.emit(NETWORK_INFO_EVENT, this._current);\n    }\n\n    /**\n     * Returns the online/offline internet status. By default the value is {@code true} and changes only if\n     * the lib's user wires the state through {@link SariskaMediaTransport.setNetworkInfo} like the jitsi-meet does. Because of\n     * that any logic should still assume that the internet may be offline and should handle the failure gracefully.\n     * It's only a good hint in the other way around: to pause internet operations until it comes back online.\n     * @returns {boolean}\n     */\n    isOnline() {\n        return this._current.isOnline === true;\n    }\n}\n\nconst networkInfo = new NetworkInfo();\n\nexport default networkInfo;","// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\n// library (a.k.a. SariskaMediaTransport).\nmodule.exports = require('./SariskaMediaTransport').default;\n","/* global __filename */\nimport './dom/jquery.js';\nimport Logger from 'jitsi-meet-logger';\n\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiConnection from './JitsiConnection';\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport JitsiMediaDevices from './JitsiMediaDevices';\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\nimport RTC from './modules/RTC/RTC';\nimport browser from './modules/browser';\nimport NetworkInfo from './modules/connectivity/NetworkInfo';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport getActiveAudioDevice from './modules/detection/ActiveDeviceDetector';\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\nimport TrackVADEmitter from './modules/detection/TrackVADEmitter';\nimport ProxyConnectionService\n    from './modules/proxyconnection/ProxyConnectionService';\nimport recordingConstants from './modules/recording/recordingConstants';\nimport Settings from './modules/settings/Settings';\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\nimport precallTest from './modules/statistics/PrecallTest';\nimport Statistics from './modules/statistics/statistics';\nimport AuthUtil from './modules/util/AuthUtil';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport ScriptUtil from './modules/util/ScriptUtil';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport AudioMixer from './modules/webaudio/AudioMixer';\nimport * as MediaType from './service/RTC/MediaType';\nimport * as ConnectionQualityEvents\n    from './service/connectivity/ConnectionQualityEvents';\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\nimport {initSDKConfig} from \"./config\"\nconst logger = Logger.getLogger(__filename);\n\n/**\n * The amount of time to wait until firing\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\n */\nconst USER_MEDIA_SLOW_PROMISE_TIMEOUT = 1000;\n\n/**\n * Extracts from an 'options' objects with a specific format (TODO what IS the\n * format?) the attributes which are to be logged in analytics events.\n *\n * @param options gum options (???)\n * @returns {*} the attributes to attach to analytics events.\n */\nfunction getAnalyticsAttributesFromOptions(options) {\n    const attributes = {\n        'audio_requested':\n            options.devices.includes('audio'),\n        'video_requested':\n            options.devices.includes('video'),\n        'screen_sharing_requested':\n            options.devices.includes('desktop')\n    };\n\n    if (attributes.video_requested) {\n        attributes.resolution = options.resolution;\n    }\n\n    return attributes;\n}\n\n/**\n * Tries to deal with the following problem: {@code SariskaMediaTransport} is not only\n * this module, it's also a global (i.e. attached to {@code window}) namespace\n * for all globals of the projects in the Jitsi Meet family. If sariska-media-transport\n * is loaded through an HTML {@code script} tag, {@code SariskaMediaTransport} will\n * automatically be attached to {@code window} by webpack. Unfortunately,\n * webpack's source code does not check whether the global variable has already\n * been assigned and overwrites it. Which is OK for the module\n * {@code SariskaMediaTransport} but is not OK for the namespace {@code SariskaMediaTransport}\n * because it may already contain the values of other projects in the Jitsi Meet\n * family. The solution offered here works around webpack by merging all\n * existing values of the namespace {@code SariskaMediaTransport} into the module\n * {@code SariskaMediaTransport}.\n *\n * @param {Object} module - The module {@code SariskaMediaTransport} (which will be\n * exported and may be attached to {@code window} by webpack later on).\n * @private\n * @returns {Object} - A {@code SariskaMediaTransport} module which contains all existing\n * value of the namespace {@code SariskaMediaTransport} (if any).\n */\nfunction _mergeNamespaceAndModule(module) {\n    return (\n        typeof window.SariskaMediaTransport === 'object'\n            ? Object.assign({}, window.SariskaMediaTransport, module)\n            : module);\n}\n\n/**\n * The public API of the Jitsi Meet library (a.k.a. {@code SariskaMediaTransport}).\n */\nexport default _mergeNamespaceAndModule({\n\n    version: '{#COMMIT_HASH#}',\n\n    JitsiConnection,\n\n    /**\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\n     * local Jitsi participant without going through a Jitsi conference. It is\n     * currently used for room integration development, specifically wireless\n     * screensharing. Its API is experimental and will likely change; usage of\n     * it is advised against.\n     */\n    ProxyConnectionService,\n\n    constants: {\n        participantConnectionStatus: ParticipantConnectionStatus,\n        recording: recordingConstants,\n        sipVideoGW: VideoSIPGWConstants,\n        transcriptionStatus: JitsiTranscriptionStatus\n    },\n    events: {\n        conference: JitsiConferenceEvents,\n        connection: JitsiConnectionEvents,\n        detection: DetectionEvents,\n        track: JitsiTrackEvents,\n        mediaDevices: JitsiMediaDevicesEvents,\n        connectionQuality: ConnectionQualityEvents,\n        e2eping: E2ePingEvents\n    },\n    errors: {\n        conference: JitsiConferenceErrors,\n        connection: JitsiConnectionErrors,\n        track: JitsiTrackErrors\n    },\n    errorTypes: {\n        JitsiTrackError\n    },\n    logLevels: Logger.levels,\n    mediaDevices: JitsiMediaDevices,\n    analytics: Statistics.analytics,\n    init(options = {}) {\n        options =  {...initSDKConfig, ...options};\n        Settings.init(options.externalStorage);\n        Statistics.init(options);\n\n        // Initialize global window.connectionTimes\n        // FIXME do not use 'window'\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n\n        if (options.enableAnalyticsLogging !== true) {\n            logger.warn('Analytics disabled, disposing.');\n            this.analytics.dispose();\n        }\n\n        if (options.enableWindowOnErrorHandler) {\n            GlobalOnErrorHandler.addHandler(\n                this.getGlobalOnErrorHandler.bind(this));\n        }\n\n        // Log deployment-specific information, if available. Defined outside\n        // the application by individual deployments\n        const aprops = options.deploymentInfo;\n\n        if (aprops && Object.keys(aprops).length > 0) {\n            const logObject = {};\n\n            for (const attr in aprops) {\n                if (aprops.hasOwnProperty(attr)) {\n                    logObject[attr] = aprops[attr];\n                }\n            }\n\n            logObject.id = 'deployment_info';\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        if (this.version) {\n            const logObject = {\n                id: 'component_version',\n                component: 'sariska-media-transport',\n                version: this.version\n            };\n\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        return RTC.init(options);\n    },\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     *\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return RTC.isDesktopSharingEnabled();\n    },\n\n    /**\n     * Returns whether the current execution environment supports WebRTC (for\n     * use within this library).\n     *\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\n     * execution environment (for use within this library); {@code false},\n     * otherwise.\n     */\n    isWebRtcSupported() {\n        return RTC.isWebRtcSupported();\n    },\n\n    setLogLevel(level) {\n        Logger.setLogLevel(level);\n    },\n\n    /**\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\n     *\n     * @param {Logger.levels} level the logging level to be set\n     * @param {string} id the logger id to which new logging level will be set.\n     * Usually it's the name of the JavaScript source file including the path\n     * ex. \"modules/xmpp/ChatRoom.js\"\n     */\n    setLogLevelById(level, id) {\n        Logger.setLogLevelById(level, id);\n    },\n\n    /**\n     * Registers new global logger transport to the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.addGlobalTransport\n     */\n    addGlobalLogTransport(globalTransport) {\n        Logger.addGlobalTransport(globalTransport);\n    },\n\n    /**\n     * Removes global logging transport from the library logging framework.\n     *\n     * @param globalTransport\n     * @see Logger.removeGlobalTransport\n     */\n    removeGlobalLogTransport(globalTransport) {\n        Logger.removeGlobalTransport(globalTransport);\n    },\n\n    /**\n    * Sets global options which will be used by all loggers. Changing these\n    * works even after other loggers are created.\n    *\n    * @param options\n    * @see Logger.setGlobalOptions\n    */\n    setGlobalLogOptions(options) {\n        Logger.setGlobalOptions(options);\n    },\n\n    /**\n     * Creates the media tracks and returns them trough the callback.\n     *\n     * @param options Object with properties / settings specifying the tracks\n     * which should be created. should be created or some additional\n     * configurations about resolution for example.\n     * @param {Array} options.effects optional effects array for the track\n     * @param {boolean} options.firePermissionPromptIsShownEvent - if event\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\n     * @param {boolean} options.fireSlowPromiseEvent - if event\n     * JitsiMediaDevicesEvents.USER_MEDIA_SLOW_PROMISE_TIMEOUT should be fired\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @param {intiger} interval - the interval (in ms) for\n     * checking whether the desktop sharing extension is installed or not\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\n     * createLocalTracks will wait and check on every \"interval\" ms for the\n     * extension. If the desktop extension is not install and checkAgain()==true\n     * createLocalTracks will finish with rejected Promise.\n     * @param {Function} listener - The listener will be called to notify the\n     * user of sariska-media-transport that createLocalTracks is starting external\n     * extension installation process.\n     * NOTE: If the inline installation process is not possible and external\n     * installation is enabled the listener property will be called to notify\n     * the start of external installation process. After that createLocalTracks\n     * will start to check for the extension on every interval ms until the\n     * plugin is installed or until checkAgain return false. If the extension\n     * is found createLocalTracks will try to get the desktop sharing track and\n     * will finish the execution. If checkAgain returns false, createLocalTracks\n     * will finish the execution with rejected Promise.\n     *\n     * @deprecated old firePermissionPromptIsShownEvent\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\n     * @param originalOptions - internal use only, to be able to store the\n     * originally requested options.\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\n     * that returns an array of created JitsiTracks if resolved, or a\n     * JitsiConferenceError if rejected.\n     */\n    createLocalTracks(options = {}, oldfirePermissionPromptIsShownEvent) {\n        let promiseFulfilled = false;\n\n        const { firePermissionPromptIsShownEvent, fireSlowPromiseEvent, ...restOptions } = options;\n        const firePermissionPrompt = firePermissionPromptIsShownEvent || oldfirePermissionPromptIsShownEvent;\n\n        if (firePermissionPrompt && !RTC.arePermissionsGrantedForAvailableDevices()) {\n            JitsiMediaDevices.emitEvent(\n                JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\n                browser.getName());\n        } else if (fireSlowPromiseEvent) {\n            window.setTimeout(() => {\n                if (!promiseFulfilled) {\n                    JitsiMediaDevices.emitEvent(JitsiMediaDevicesEvents.SLOW_GET_USER_MEDIA);\n                }\n            }, USER_MEDIA_SLOW_PROMISE_TIMEOUT);\n        }\n\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n        window.connectionTimes['obtainPermissions.start']\n            = window.performance.now();\n\n        return RTC.obtainAudioAndVideoPermissions(restOptions)\n            .then(tracks => {\n                promiseFulfilled = true;\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                Statistics.sendAnalytics(\n                    createGetUserMediaEvent(\n                        'success',\n                        getAnalyticsAttributesFromOptions(restOptions)));\n\n                if (!RTC.options.disableAudioLevels) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n                        const mStream = track.getOriginalStream();\n\n                        if (track.getType() === MediaType.AUDIO) {\n                            Statistics.startLocalStats(mStream,\n                                track.setAudioLevel.bind(track));\n                            track.addEventListener(\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\n                                () => {\n                                    Statistics.stopLocalStats(mStream);\n                                });\n                        }\n                    }\n                }\n\n                // set real device ids\n                const currentlyAvailableMediaDevices\n                    = RTC.getCurrentlyAvailableMediaDevices();\n\n                if (currentlyAvailableMediaDevices) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n\n                        track._setRealDeviceIdFromDeviceList(\n                            currentlyAvailableMediaDevices);\n                    }\n                }\n\n                // set the contentHint to \"detail\" for desktop tracks\n                // eslint-disable-next-line prefer-const\n                for (const track of tracks) {\n                    if (track.type === MediaType.VIDEO\n                        && track.videoType === 'desktop') {\n                        this.setVideoTrackContentHints(track.track, 'detail');\n                    }\n                }\n\n                return tracks;\n            })\n            .catch(error => {\n                promiseFulfilled = true;\n\n                if (error.name === JitsiTrackErrors.SCREENSHARING_USER_CANCELED) {\n                    // User cancelled action is not really an error, so only\n                    // log it as an event to avoid having conference classified\n                    // as partially failed\n                    const logObject = {\n                        id: 'screensharing_user_canceled',\n                        message: error.message\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent(\n                            'warning',\n                            {\n                                reason: 'extension install user canceled'\n                            }));\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\n                    // logs not found devices with just application log to cs\n                    const logObject = {\n                        id: 'usermedia_missing_device',\n                        status: error.gum.devices\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = 'device not found';\n                    attributes.devices = error.gum.devices.join('.');\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                } else {\n                    // Report gUM failed to the stats\n                    Statistics.sendGetUserMediaFailed(error);\n\n                    const attributes\n                        = getAnalyticsAttributesFromOptions(options);\n\n                    attributes.reason = error.name;\n                    Statistics.sendAnalytics(\n                        createGetUserMediaEvent('error', attributes));\n                }\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                return Promise.reject(error);\n            });\n    },\n\n    /**\n     * Create a TrackVADEmitter service that connects an audio track to an VAD (voice activity detection) processor in\n     * order to obtain VAD scores for individual PCM audio samples.\n     * @param {string} localAudioDeviceId - The target local audio device.\n     * @param {number} sampleRate - Sample rate at which the emitter will operate. Possible values  256, 512, 1024,\n     * 4096, 8192, 16384. Passing other values will default to closes neighbor.\n     * I.e. Providing a value of 4096 means that the emitter will process 4096 PCM samples at a time, higher values mean\n     * longer calls, lowers values mean more calls but shorter.\n     * @param {Object} vadProcessor - VAD Processors that does the actual compute on a PCM sample.The processor needs\n     * to implement the following functions:\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by calculateAudioFrameVAD.\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\n     * i.e. (16KHz, 44.1 KHz etc.)\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\n     * @returns {Promise<TrackVADEmitter>}\n     */\n    createTrackVADEmitter(localAudioDeviceId, sampleRate, vadProcessor) {\n        return TrackVADEmitter.create(localAudioDeviceId, sampleRate, vadProcessor);\n    },\n\n    /**\n     * Create AudioMixer, which is essentially a wrapper over web audio ChannelMergerNode. It essentially allows the\n     * user to mix multiple MediaStreams into a single one.\n     *\n     * @returns {AudioMixer}\n     */\n    createAudioMixer() {\n        return new AudioMixer();\n    },\n\n    /**\n     * Go through all audio devices on the system and return one that is active, i.e. has audio signal.\n     *\n     * @returns Promise<Object> - Object containing information about the found device.\n     */\n    getActiveAudioDevice() {\n        return getActiveAudioDevice();\n    },\n\n    /**\n     * Checks if its possible to enumerate available cameras/microphones.\n     *\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     * @deprecated use SariskaMediaTransport.mediaDevices.isDeviceListAvailable instead\n     */\n    isDeviceListAvailable() {\n        logger.warn('This method is deprecated, use '\n            + 'SariskaMediaTransport.mediaDevices.isDeviceListAvailable instead');\n\n        return this.mediaDevices.isDeviceListAvailable();\n    },\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     *\n     * @param {string} [deviceType] - type of device to change. Default is\n     * {@code undefined} or 'input', 'output' - for audio output device change.\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\n     * @deprecated use SariskaMediaTransport.mediaDevices.isDeviceChangeAvailable instead\n     */\n    isDeviceChangeAvailable(deviceType) {\n        logger.warn('This method is deprecated, use '\n            + 'SariskaMediaTransport.mediaDevices.isDeviceChangeAvailable instead');\n\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\n    },\n\n\n    /**\n     * Checks if the current environment supports having multiple audio\n     * input devices in use simultaneously.\n     *\n     * @returns {boolean} True if multiple audio input devices can be used.\n     */\n    isMultipleAudioInputSupported() {\n        return this.mediaDevices.isMultipleAudioInputSupported();\n    },\n\n    /**\n     * Checks if local tracks can collect stats and collection is enabled.\n     *\n     * @param {boolean} True if stats are being collected for local tracks.\n     */\n    isCollectingLocalStats() {\n        return Statistics.audioLevelsEnabled\n            && LocalStatsCollector.isLocalStatsSupported();\n    },\n\n    /**\n     * Executes callback with list of media devices connected.\n     *\n     * @param {function} callback\n     * @deprecated use SariskaMediaTransport.mediaDevices.enumerateDevices instead\n     */\n    enumerateDevices(callback) {\n        logger.warn('This method is deprecated, use '\n            + 'SariskaMediaTransport.mediaDevices.enumerateDevices instead');\n        this.mediaDevices.enumerateDevices(callback);\n    },\n\n    /* eslint-disable max-params */\n\n    /**\n     * @returns function that can be used to be attached to window.onerror and\n     * if options.enableWindowOnErrorHandler is enabled returns\n     * the function used by the lib.\n     * (function(message, source, lineno, colno, error)).\n     */\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\n        logger.error(\n            `UnhandledError: ${message}`,\n            `Script: ${source}`,\n            `Line: ${lineno}`,\n            `Column: ${colno}`,\n            'StackTrace: ', error);\n        Statistics.reportGlobalError(error);\n    },\n\n    /**\n     * Informs sariska-media-transport about the current network status.\n     *\n     * @param {boolean} isOnline - {@code true} if the internet connectivity is online or {@code false}\n     * otherwise.\n     */\n    setNetworkInfo({ isOnline }) {\n        NetworkInfo.updateNetworkInfo({ isOnline });\n    },\n\n    /**\n     * Set the contentHint on the transmitted stream track to indicate\n     * charaterstics in the video stream, which informs PeerConnection\n     * on how to encode the track (to prefer motion or individual frame detail)\n     * @param {MediaStreamTrack} track - the track that is transmitted\n     * @param {String} hint - contentHint value that needs to be set on the track\n     */\n    setVideoTrackContentHints(track, hint) {\n        if ('contentHint' in track) {\n            track.contentHint = hint;\n            if (track.contentHint !== hint) {\n                logger.debug('Invalid video track contentHint');\n            }\n        } else {\n            logger.debug('MediaStreamTrack contentHint attribute not supported');\n        }\n    },\n\n    precallTest,\n\n    /* eslint-enable max-params */\n\n    /**\n     * Represents a hub/namespace for utility functionality which may be of\n     * interest to sariska-media-transport clients.\n     */\n    util: {\n        AuthUtil,\n        ScriptUtil,\n        browser\n    }\n});\n","import jQuery from \"../core.js\";\n\n(global => {\n    if (typeof global.$ === 'undefined') {\n        global.$ = jQuery;\n    }\n})(global || window || this); // eslint-disable-line no-invalid-this","/* Copyright @ 2016-present 8x8, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require('./Logger.js');\n\n/**\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\n * and thus can be added as global transport in order to capture all the logs.\n *\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\n * a message and stores them in a queue in order to batch log entries. There are\n * time and size limit constraints which determine how often batch entries are\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\n * will use the <tt>logStorage</tt> object given as an argument to save\n * the batch log entry.\n *\n * @param {Object} logStorage an object which allows to store the logs collected\n * @param {function(string|object[])} logStorage.storeLogs a method called when\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\n * item is an object it means that it's an aggregated message. That is a message\n * which is the same as the previous one and it's representation has\n * the following format:\n * {\n *   {string} text: 'the text of some duplicated message'\n *   {number} count: 3 // how many times the message appeared in a row\n * }\n * If a message \"B\" after an aggregated message \"A\" is different, then it breaks\n * the sequence of \"A\". Which means that even if the next message \"C\" is\n * the same as \"A\" it will start a new aggregated message \"C\".\n * @param {function()} logStorage.isReady a method which should return\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\n * time storage is not ready log batches will be cached and stored on the next\n * occasion (flush or interval timeout).\n *\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\n * @param {number} options.maxEntryLength the size limit for a single log entry\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\n * storage becomes ready. Note that the \"is ready\" condition is checked every\n * <tt>options.storeInterval</tt> milliseconds.\n * @param {number} options.storeInterval how often the logs should be stored in\n * case <tt>maxEntryLength</tt> was not exceeded.\n * @param {boolean} options.stringifyObjects indicates whether or not object\n * arguments should be \"stringified\" with <tt>JSON.stringify</tt> when a log\n * message is composed. Note that objects logged on the error log level are\n * always stringified.\n *\n * @constructor\n */\nfunction LogCollector(logStorage, options) {\n    this.logStorage = logStorage;\n    this.stringifyObjects = options && options.stringifyObjects ? options.stringifyObjects : false;\n    this.storeInterval = options && options.storeInterval ? options.storeInterval: 30000;\n    this.maxEntryLength = options && options.maxEntryLength ? options.maxEntryLength : 10000;\n    // Bind the log method for each level to the corresponding method name\n    // in order to implement \"global log transport\" object.\n    Object.keys(Logger.levels).forEach(\n    function (logLevel) {\n        var methodName = Logger.levels[logLevel];\n        this[methodName] = function () {\n            this._log.apply(this, arguments);\n        }.bind(this, logLevel);\n    }.bind(this));\n    /**\n     * The ID of store logs interval if one is currently scheduled or\n     * <tt>null</tt> otherwise.\n     * @type {number|null}\n     */\n    this.storeLogsIntervalID = null;\n    /**\n     * The log messages that are to be batched into log entry when\n     * {@link LogCollector._flush} method is called.\n     * @type {string[]}\n     */\n    this.queue = [];\n    /**\n     * The total length of all messages currently stored in the {@link queue}.\n     * @type {number}\n     */\n    this.totalLen = 0;\n    /**\n     * An array used to temporarily store log batches, before the storage gets\n     * ready.\n     * @type {string[]}\n     */\n    this.outputCache = [];\n}\n\n/**\n * Method called inside of {@link formatLogMessage} in order to covert an\n * <tt>Object</tt> argument to string. The conversion will happen when either\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\n * returns \"[object with circular refs?]\" instead of an object if it fails.\n *\n * @param {object} someObject the <tt>object</tt> to be stringified.\n *\n * @return {string} the result of <tt>JSON.stringify</tt> or\n * \"[object with circular refs?]\" if any error occurs during \"stringification\".\n *\n * @protected\n */\nLogCollector.prototype.stringify = function (someObject) {\n    try {\n        return JSON.stringify(someObject);\n    } catch (error) {\n        return '[object with circular refs?]';\n    }\n};\n\n/**\n * Formats log entry for the given logging level and arguments passed to the\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\n * arguments have to be captured using JS built-in 'arguments' variable.\n *\n * @param {Logger.levels} logLevel provides the logging level of the message to\n * be logged.\n * @param {Date} timestamp - The {@code Date} when a message has been logged.\n *\n * @return {string|null} a non-empty string representation of the log entry\n * crafted from the log arguments. If the return value is <tt>null</tt> then\n * the message wil be discarded by this <tt>LogCollector</tt>.\n *\n * @protected\n */\nLogCollector.prototype.formatLogMessage = function (\nlogLevel /* timestamp, arg2, arg3, arg4... */) {\n    var msg = '';\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        // objects logged on error level are always converted to JSON\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR) &&\n            typeof arg === 'object') {\n            arg = this.stringify(arg);\n        }\n        msg += arg;\n        if (i !== len - 1) {\n            msg += ' ';\n        }\n    }\n    return msg.length ? msg : null;\n};\n\n/**\n * The log method bound to each of the logging levels in order to implement\n * \"global log transport\" object.\n *\n * @private\n */\nLogCollector.prototype._log = function() {\n\n    // var logLevel = arguments[0]; first argument is the log level\n    var timestamp = arguments[1];\n    var msg = this.formatLogMessage.apply(this, arguments);\n    if (msg) {\n        // The same as the previous message aggregation logic\n        var prevMessage = this.queue[this.queue.length - 1];\n        var prevMessageText = prevMessage && prevMessage.text;\n        if (prevMessageText === msg) {\n            prevMessage.count += 1;\n        } else {\n            this.queue.push({\n                text: msg,\n                timestamp: timestamp,\n                count: 1\n            });\n            this.totalLen += msg.length;\n        }\n    }\n\n    if (this.totalLen >= this.maxEntryLength) {\n        this._flush(true /* force */, true /* reschedule */);\n    }\n};\n\n/**\n * Starts periodical \"store logs\" task which will be triggered at the interval\n * specified in the constructor options.\n */\nLogCollector.prototype.start = function () {\n    this._reschedulePublishInterval();\n};\n\n/**\n * Reschedules the periodical \"store logs\" task which will store the next batch\n * log entry in the storage.\n * @private\n */\nLogCollector.prototype._reschedulePublishInterval = function () {\n    if (this.storeLogsIntervalID) {\n        window.clearTimeout(this.storeLogsIntervalID);\n        this.storeLogsIntervalID = null;\n    }\n    // It's actually a timeout, because it is rescheduled on every flush\n    this.storeLogsIntervalID = window.setTimeout(\n        this._flush.bind(\n            this, false /* do not force */, true /* reschedule */),\n        this.storeInterval);\n};\n\n/**\n * Call this method to flush the log entry buffer and store it in the log\n * storage immediately (given that the storage is ready).\n */\nLogCollector.prototype.flush = function() {\n    this._flush(\n        false /* do not force, as it will not be stored anyway */,\n        true /* reschedule next update */ );\n};\n\n/**\n * Stores the next batch log entry in the log storage.\n * @param {boolean} force enforce current logs batch to be stored or cached if\n * there is anything to be logged, but the storage is not ready yet. One of\n * legitimate reasons to force is when the logs length exceeds size limit which\n * could result in truncation.\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\n * task cycle.\n * @private\n */\nLogCollector.prototype._flush = function(force, reschedule) {\n    // Publish only if there's anything to be logged\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\n        //FIXME avoid truncating\n        // right now we don't care if the message size is \"slightly\" exceeded\n        if (this.logStorage.isReady()) {\n            // Sends all cached logs\n            if (this.outputCache.length) {\n                this.outputCache.forEach(\n                    function (cachedQueue) {\n                        this.logStorage.storeLogs(cachedQueue);\n                    }.bind(this)\n                );\n                // Clear the cache\n                this.outputCache = [];\n            }\n            // Send current batch\n            this.logStorage.storeLogs(this.queue);\n        } else {\n            this.outputCache.push(this.queue);\n        }\n\n        this.queue = [];\n        this.totalLen = 0;\n    }\n\n    if (reschedule) {\n        this._reschedulePublishInterval();\n    }\n};\n\n/**\n * Stops the periodical \"store logs\" task and immediately stores any pending\n * log entries as a batch.\n */\nLogCollector.prototype.stop = function() {\n    // Flush and stop publishing logs\n    this._flush(false /* do not force */, false /* do not reschedule */);\n};\n\nmodule.exports = LogCollector;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\nstrophe_js.Strophe.addConnectionPlugin('disco',\n{\n    _connection: null,\n    _identities : [],\n    _features : [],\n    _items : [],\n    /** Function: init\n     * Plugin init\n     *\n     * Parameters:\n     *   (Strophe.Connection) conn - Strophe connection\n     */\n    init: function(conn)\n    {\n    this._connection = conn;\n        this._identities = [];\n        this._features   = [];\n        this._items      = [];\n        // disco info\n        conn.addHandler(this._onDiscoInfo.bind(this), strophe_js.Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        // disco items\n        conn.addHandler(this._onDiscoItems.bind(this), strophe_js.Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    },\n    /** Function: addIdentity\n     * See http://xmpp.org/registrar/disco-categories.html\n     * Parameters:\n     *   (String) category - category of identity (like client, automation, etc ...)\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\n     *   (String) name - name of identity in natural language\n     *   (String) lang - lang of name parameter\n     *\n     * Returns:\n     *   Boolean\n     */\n    addIdentity: function(category, type, name, lang)\n    {\n        for (var i=0; i<this._identities.length; i++)\n        {\n            if (this._identities[i].category == category &&\n                this._identities[i].type == type &&\n                this._identities[i].name == name &&\n                this._identities[i].lang == lang)\n            {\n                return false;\n            }\n        }\n        this._identities.push({category: category, type: type, name: name, lang: lang});\n        return true;\n    },\n    /** Function: addFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    addFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] == var_name)\n                 return false;\n        }\n        this._features.push(var_name);\n        return true;\n    },\n    /** Function: removeFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    removeFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] === var_name){\n                 this._features.splice(i,1);\n                 return true;\n             }\n        }\n        return false;\n    },\n    /** Function: addItem\n     *\n     * Parameters:\n     *   (String) jid\n     *   (String) name\n     *   (String) node\n     *   (Function) call_back\n     *\n     * Returns:\n     *   boolean\n     */\n    addItem: function(jid, name, node, call_back)\n    {\n        if (node && !call_back)\n            return false;\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\n        return true;\n    },\n    /** Function: info\n     * Info query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    info: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        if (node)\n            attrs.node = node;\n\n        var info = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(info, success, error, timeout);\n    },\n    /** Function: items\n     * Items query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    items: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        if (node)\n            attrs.node = node;\n\n        var items = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(items, success, error, timeout);\n    },\n\n    /** PrivateFunction: _buildIQResult\n     */\n    _buildIQResult: function(stanza, query_attrs)\n    {\n        var id   =  stanza.getAttribute('id');\n        var from = stanza.getAttribute('from');\n        var iqresult = strophe_js.$iq({type: 'result', id: id});\n\n        if (from !== null) {\n            iqresult.attrs({to: from});\n        }\n\n        return iqresult.c('query', query_attrs);\n    },\n\n    /** PrivateFunction: _onDiscoInfo\n     * Called when receive info request\n     */\n    _onDiscoInfo: function(stanza)\n    {\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        var i;\n        if (node)\n        {\n            attrs.node = node;\n        }\n        var iqresult = this._buildIQResult(stanza, attrs);\n        for (i=0; i<this._identities.length; i++)\n        {\n            attrs = {category: this._identities[i].category,\n                         type    : this._identities[i].type};\n            if (this._identities[i].name)\n                attrs.name = this._identities[i].name;\n            if (this._identities[i].lang)\n                attrs['xml:lang'] = this._identities[i].lang;\n            iqresult.c('identity', attrs).up();\n        }\n        for (i=0; i<this._features.length; i++)\n        {\n            iqresult.c('feature', {'var':this._features[i]}).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    },\n    /** PrivateFunction: _onDiscoItems\n     * Called when receive items request\n     */\n    _onDiscoItems: function(stanza)\n    {\n        var query_attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var items, i;\n        if (node)\n        {\n            query_attrs.node = node;\n            items = [];\n            for (i = 0; i < this._items.length; i++)\n            {\n                if (this._items[i].node == node)\n                {\n                    items = this._items[i].call_back(stanza);\n                    break;\n                }\n            }\n        }\n        else\n        {\n            items = this._items;\n        }\n        var iqresult = this._buildIQResult(stanza, query_attrs);\n        for (i = 0; i < items.length; i++)\n        {\n            var attrs = {jid:  items[i].jid};\n            if (items[i].name)\n                attrs.name = items[i].name;\n            if (items[i].node)\n                attrs.node = items[i].node;\n            iqresult.c('item', attrs).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    }\n});\n\n})));\n//# sourceMappingURL=strophe.disco.js.map\n"],"sourceRoot":""}