!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.r(t),n.d(t,"MAIN_THREAD_FINISH",(function(){return o})),n.d(t,"MAIN_THREAD_INIT",(function(){return i})),n.d(t,"MAIN_THREAD_NEW_DATA_ARRIVED",(function(){return a})),n.d(t,"WORKER_LIBFLAC_READY",(function(){return _})),n.d(t,"WORKER_BLOB_READY",(function(){return s})),n.d(t,"DEBUG",(function(){return c}));const o="MAIN_THREAD_FINISH",i="MAIN_THREAD_INIT",a="MAIN_THREAD_NEW_DATA_ARRIVED",_="WORKER_LIBFLAC_READY",s="WORKER_BLOB_READY",c="DEBUG";self.FLAC_SCRIPT_LOCATION="https://sdk.sariska.io/",importScripts("https://sdk.sariska.io/libflac4-1.3.2.min.js");const l={0:"FLAC__STREAM_ENCODER_OK",1:"FLAC__STREAM_ENCODER_UNINITIALIZED",2:"FLAC__STREAM_ENCODER_OGG_ERROR",3:"FLAC__STREAM_ENCODER_VERIFY_DECODER_ERROR",4:"FLAC__STREAM_ENCODER_VERIFY_MISMATCH_IN_AUDIO_DATA",5:"FLAC__STREAM_ENCODER_CLIENT_ERROR",6:"FLAC__STREAM_ENCODER_IO_ERROR",7:"FLAC__STREAM_ENCODER_FRAMING_ERROR",8:"FLAC__STREAM_ENCODER_MEMORY_ALLOCATION_ERROR"},d=Object.freeze({UNINTIALIZED:"uninitialized",WORKING:"working",FINISHED:"finished"});class f{constructor(e,t=16,n=4096){if(r(this,"_encoderId",0),r(this,"_flacBuffers",[]),r(this,"_flacLength",0),r(this,"_state",d.UNINTIALIZED),r(this,"_data",null),r(this,"_onMetadataAvailable",()=>{}),!Flac.isReady())throw new Error("libflac is not ready yet!");if(this._sampleRate=e,this._bitDepth=t,this._bufferSize=n,this._encoderId=Flac.init_libflac_encoder(this._sampleRate,1,this._bitDepth,5,0,!0,0),0===this._encoderId)throw new Error("Failed to create libflac encoder.");if(0!==Flac.init_encoder_stream(this._encoderId,this._onEncodedData.bind(this),this._onMetadataAvailable.bind(this)))throw new Error("Failed to initialise libflac encoder.");this._state=d.WORKING}encode(e){if(this._state!==d.WORKING)throw new Error("Encoder is not ready or has finished.");if(!Flac.isReady())throw new Error("Flac not ready");const t=e.length,n=new Int32Array(t),r=new DataView(n.buffer);let o=0;for(let n=0;n<t;n++)r.setInt32(o,32767*e[n],!0),o+=4;if(1!==Flac.FLAC__stream_encoder_process_interleaved(this._encoderId,n,n.length)){const e=Flac.FLAC__stream_encoder_get_state(this._encoderId);console.error("Error during encoding",l[e])}}finish(){if(this._state===d.WORKING){this._state=d.FINISHED;const e=Flac.FLAC__stream_encoder_finish(this._encoderId);console.log("Flac encoding finished: ",e),Flac.FLAC__stream_encoder_delete(this._encoderId),this._data=this._exportFlacBlob()}}getBlob(){return this._state===d.FINISHED?this._data:null}_exportFlacBlob(){const e=function(e,t){const n=new Uint8Array(t);let r=0;const o=e.length;for(let t=0;t<o;t++){const o=e[t];n.set(o,r),r+=o.length}return n}(this._flacBuffers,this._flacLength);return new Blob([e],{type:"audio/flac"})}_onEncodedData(e,t){this._flacBuffers.push(e),this._flacLength+=e.byteLength}}let u=null;self.onmessage=function(e){switch(e.data.command){case i:{const t=e.data.config.bps,n=e.data.config.sampleRate;Flac.isReady()?(u=new f(n,t),self.postMessage({command:_})):Flac.onready=function(){setTimeout(()=>{u=new f(n,t),self.postMessage({command:_})},0)};break}case a:null===u?console.error("flacEncoderWorker received data when the encoder is not ready."):u.encode(e.data.buf);break;case o:if(null!==u){u.finish();const e=u.getBlob();self.postMessage({command:s,buf:e}),u=null}}}}]);
//# sourceMappingURL=flacEncodeWorker.min.map